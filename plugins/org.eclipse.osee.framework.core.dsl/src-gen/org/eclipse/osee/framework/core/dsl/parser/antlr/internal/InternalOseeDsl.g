/*
* generated by Xtext
*/
grammar InternalOseeDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.osee.framework.core.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.osee.framework.core.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.osee.framework.core.dsl.services.OseeDslGrammarAccess;

}

@parser::members {

 	private OseeDslGrammarAccess grammarAccess;
 	
    public InternalOseeDslParser(TokenStream input, OseeDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "OseeDsl";	
   	}
   	
   	@Override
   	protected OseeDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleOseeDsl
entryRuleOseeDsl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOseeDslRule()); }
	 iv_ruleOseeDsl=ruleOseeDsl 
	 { $current=$iv_ruleOseeDsl.current; } 
	 EOF 
;

// Rule OseeDsl
ruleOseeDsl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getArtifactTypesXArtifactTypeParserRuleCall_1_0_0()); 
	    }
		lv_artifactTypes_1_0=ruleXArtifactType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"artifactTypes",
        		lv_artifactTypes_1_0, 
        		"XArtifactType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getRelationTypesXRelationTypeParserRuleCall_1_1_0()); 
	    }
		lv_relationTypes_2_0=ruleXRelationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"relationTypes",
        		lv_relationTypes_2_0, 
        		"XRelationType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getAttributeTypesXAttributeTypeParserRuleCall_1_2_0()); 
	    }
		lv_attributeTypes_3_0=ruleXAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"attributeTypes",
        		lv_attributeTypes_3_0, 
        		"XAttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getEnumTypesXOseeEnumTypeParserRuleCall_1_3_0()); 
	    }
		lv_enumTypes_4_0=ruleXOseeEnumType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"enumTypes",
        		lv_enumTypes_4_0, 
        		"XOseeEnumType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getEnumOverridesXOseeEnumOverrideParserRuleCall_1_4_0()); 
	    }
		lv_enumOverrides_5_0=ruleXOseeEnumOverride		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"enumOverrides",
        		lv_enumOverrides_5_0, 
        		"XOseeEnumOverride");
	        afterParserOrEnumRuleCall();
	    }

)
))*((
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getBranchRefsXBranchRefParserRuleCall_2_0_0()); 
	    }
		lv_branchRefs_6_0=ruleXBranchRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"branchRefs",
        		lv_branchRefs_6_0, 
        		"XBranchRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getArtifactRefsXArtifactRefParserRuleCall_2_1_0()); 
	    }
		lv_artifactRefs_7_0=ruleXArtifactRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"artifactRefs",
        		lv_artifactRefs_7_0, 
        		"XArtifactRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getOseeDslAccess().getAccessDeclarationsAccessContextParserRuleCall_3_0()); 
	    }
		lv_accessDeclarations_8_0=ruleAccessContext		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOseeDslRule());
	        }
       		add(
       			$current, 
       			"accessDeclarations",
        		lv_accessDeclarations_8_0, 
        		"AccessContext");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
))
;







// Entry rule entryRuleATTRIBUTE_TYPE_REFERENCE
entryRuleATTRIBUTE_TYPE_REFERENCE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getATTRIBUTE_TYPE_REFERENCERule()); } 
	 iv_ruleATTRIBUTE_TYPE_REFERENCE=ruleATTRIBUTE_TYPE_REFERENCE 
	 { $current=$iv_ruleATTRIBUTE_TYPE_REFERENCE.current.getText(); }  
	 EOF 
;

// Rule ATTRIBUTE_TYPE_REFERENCE
ruleATTRIBUTE_TYPE_REFERENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getATTRIBUTE_TYPE_REFERENCEAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleARTIFACT_TYPE_REFERENCE
entryRuleARTIFACT_TYPE_REFERENCE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getARTIFACT_TYPE_REFERENCERule()); } 
	 iv_ruleARTIFACT_TYPE_REFERENCE=ruleARTIFACT_TYPE_REFERENCE 
	 { $current=$iv_ruleARTIFACT_TYPE_REFERENCE.current.getText(); }  
	 EOF 
;

// Rule ARTIFACT_TYPE_REFERENCE
ruleARTIFACT_TYPE_REFERENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getARTIFACT_TYPE_REFERENCEAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleRELATION_TYPE_REFERENCE
entryRuleRELATION_TYPE_REFERENCE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRELATION_TYPE_REFERENCERule()); } 
	 iv_ruleRELATION_TYPE_REFERENCE=ruleRELATION_TYPE_REFERENCE 
	 { $current=$iv_ruleRELATION_TYPE_REFERENCE.current.getText(); }  
	 EOF 
;

// Rule RELATION_TYPE_REFERENCE
ruleRELATION_TYPE_REFERENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getRELATION_TYPE_REFERENCEAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleENUM_TYPE_REFERENCE
entryRuleENUM_TYPE_REFERENCE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getENUM_TYPE_REFERENCERule()); } 
	 iv_ruleENUM_TYPE_REFERENCE=ruleENUM_TYPE_REFERENCE 
	 { $current=$iv_ruleENUM_TYPE_REFERENCE.current.getText(); }  
	 EOF 
;

// Rule ENUM_TYPE_REFERENCE
ruleENUM_TYPE_REFERENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getENUM_TYPE_REFERENCEAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleENUM_ENTRY_TYPE_REFERENCE
entryRuleENUM_ENTRY_TYPE_REFERENCE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getENUM_ENTRY_TYPE_REFERENCERule()); } 
	 iv_ruleENUM_ENTRY_TYPE_REFERENCE=ruleENUM_ENTRY_TYPE_REFERENCE 
	 { $current=$iv_ruleENUM_ENTRY_TYPE_REFERENCE.current.getText(); }  
	 EOF 
;

// Rule ENUM_ENTRY_TYPE_REFERENCE
ruleENUM_ENTRY_TYPE_REFERENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getENUM_ENTRY_TYPE_REFERENCEAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleQUALIFIED_NAME
entryRuleQUALIFIED_NAME returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQUALIFIED_NAMERule()); } 
	 iv_ruleQUALIFIED_NAME=ruleQUALIFIED_NAME 
	 { $current=$iv_ruleQUALIFIED_NAME.current.getText(); }  
	 EOF 
;

// Rule QUALIFIED_NAME
ruleQUALIFIED_NAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQUALIFIED_NAMEAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;







// Entry rule entryRuleOseeType
entryRuleOseeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOseeTypeRule()); }
	 iv_ruleOseeType=ruleOseeType 
	 { $current=$iv_ruleOseeType.current; } 
	 EOF 
;

// Rule OseeType
ruleOseeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOseeTypeAccess().getXArtifactTypeParserRuleCall_0()); 
    }
    this_XArtifactType_0=ruleXArtifactType
    { 
        $current = $this_XArtifactType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOseeTypeAccess().getXRelationTypeParserRuleCall_1()); 
    }
    this_XRelationType_1=ruleXRelationType
    { 
        $current = $this_XRelationType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOseeTypeAccess().getXAttributeTypeParserRuleCall_2()); 
    }
    this_XAttributeType_2=ruleXAttributeType
    { 
        $current = $this_XAttributeType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOseeTypeAccess().getXOseeEnumTypeParserRuleCall_3()); 
    }
    this_XOseeEnumType_3=ruleXOseeEnumType
    { 
        $current = $this_XOseeEnumType_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXArtifactType
entryRuleXArtifactType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXArtifactTypeRule()); }
	 iv_ruleXArtifactType=ruleXArtifactType 
	 { $current=$iv_ruleXArtifactType.current; } 
	 EOF 
;

// Rule XArtifactType
ruleXArtifactType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_abstract_0_0=	'abstract' 
    {
        newLeafNode(lv_abstract_0_0, grammarAccess.getXArtifactTypeAccess().getAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXArtifactTypeRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?	otherlv_1='artifactType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXArtifactTypeAccess().getArtifactTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXArtifactTypeAccess().getNameARTIFACT_TYPE_REFERENCEParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleARTIFACT_TYPE_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXArtifactTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ARTIFACT_TYPE_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXArtifactTypeAccess().getExtendsKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXArtifactTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesXArtifactTypeCrossReference_3_1_0()); 
	    }
		ruleARTIFACT_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXArtifactTypeAccess().getCommaKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXArtifactTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXArtifactTypeAccess().getSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0()); 
	    }
		ruleARTIFACT_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXArtifactTypeAccess().getLeftCurlyBracketKeyword_4());
    }
	otherlv_8='guid' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXArtifactTypeAccess().getGuidKeyword_5());
    }
(
(
		lv_typeGuid_9_0=RULE_STRING
		{
			newLeafNode(lv_typeGuid_9_0, grammarAccess.getXArtifactTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXArtifactTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"typeGuid",
        		lv_typeGuid_9_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXArtifactTypeAccess().getValidAttributeTypesXAttributeTypeRefParserRuleCall_7_0()); 
	    }
		lv_validAttributeTypes_10_0=ruleXAttributeTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXArtifactTypeRule());
	        }
       		add(
       			$current, 
       			"validAttributeTypes",
        		lv_validAttributeTypes_10_0, 
        		"XAttributeTypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXArtifactTypeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleXAttributeTypeRef
entryRuleXAttributeTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAttributeTypeRefRule()); }
	 iv_ruleXAttributeTypeRef=ruleXAttributeTypeRef 
	 { $current=$iv_ruleXAttributeTypeRef.current; } 
	 EOF 
;

// Rule XAttributeTypeRef
ruleXAttributeTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXAttributeTypeRefAccess().getAttributeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAttributeTypeRefAccess().getValidAttributeTypeXAttributeTypeCrossReference_1_0()); 
	    }
		ruleATTRIBUTE_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='branchGuid' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXAttributeTypeRefAccess().getBranchGuidKeyword_2_0());
    }
(
(
		lv_branchGuid_3_0=RULE_STRING
		{
			newLeafNode(lv_branchGuid_3_0, grammarAccess.getXAttributeTypeRefAccess().getBranchGuidSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"branchGuid",
        		lv_branchGuid_3_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleXAttributeType
entryRuleXAttributeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAttributeTypeRule()); }
	 iv_ruleXAttributeType=ruleXAttributeType 
	 { $current=$iv_ruleXAttributeType.current; } 
	 EOF 
;

// Rule XAttributeType
ruleXAttributeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attributeType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXAttributeTypeAccess().getAttributeTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAttributeTypeAccess().getNameATTRIBUTE_TYPE_REFERENCEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleATTRIBUTE_TYPE_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAttributeTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATTRIBUTE_TYPE_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXAttributeTypeAccess().getExtendsKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAttributeTypeAccess().getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0()); 
	    }
		lv_baseAttributeType_3_0=ruleAttributeBaseType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAttributeTypeRule());
	        }
       		set(
       			$current, 
       			"baseAttributeType",
        		lv_baseAttributeType_3_0, 
        		"AttributeBaseType");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_4='overrides' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXAttributeTypeAccess().getOverridesKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAttributeTypeAccess().getOverrideXAttributeTypeCrossReference_3_1_0()); 
	    }
		ruleATTRIBUTE_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXAttributeTypeAccess().getLeftCurlyBracketKeyword_4());
    }
	otherlv_7='guid' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXAttributeTypeAccess().getGuidKeyword_5());
    }
(
(
		lv_typeGuid_8_0=RULE_STRING
		{
			newLeafNode(lv_typeGuid_8_0, grammarAccess.getXAttributeTypeAccess().getTypeGuidSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"typeGuid",
        		lv_typeGuid_8_0, 
        		"STRING");
	    }

)
)	otherlv_9='dataProvider' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXAttributeTypeAccess().getDataProviderKeyword_7());
    }
(
(
(
		lv_dataProvider_10_1=	'DefaultAttributeDataProvider' 
    {
        newLeafNode(lv_dataProvider_10_1, grammarAccess.getXAttributeTypeAccess().getDataProviderDefaultAttributeDataProviderKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed($current, "dataProvider", lv_dataProvider_10_1, null);
	    }

    |		lv_dataProvider_10_2=	'UriAttributeDataProvider' 
    {
        newLeafNode(lv_dataProvider_10_2, grammarAccess.getXAttributeTypeAccess().getDataProviderUriAttributeDataProviderKeyword_8_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed($current, "dataProvider", lv_dataProvider_10_2, null);
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getXAttributeTypeAccess().getDataProviderQUALIFIED_NAMEParserRuleCall_8_0_2()); 
	    }
		lv_dataProvider_10_3=ruleQUALIFIED_NAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAttributeTypeRule());
	        }
       		set(
       			$current, 
       			"dataProvider",
        		lv_dataProvider_10_3, 
        		"QUALIFIED_NAME");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_11='min' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXAttributeTypeAccess().getMinKeyword_9());
    }
(
(
		lv_min_12_0=RULE_WHOLE_NUM_STR
		{
			newLeafNode(lv_min_12_0, grammarAccess.getXAttributeTypeAccess().getMinWHOLE_NUM_STRTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"min",
        		lv_min_12_0, 
        		"WHOLE_NUM_STR");
	    }

)
)	otherlv_13='max' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXAttributeTypeAccess().getMaxKeyword_11());
    }
(
(
(
		lv_max_14_1=RULE_WHOLE_NUM_STR
		{
			newLeafNode(lv_max_14_1, grammarAccess.getXAttributeTypeAccess().getMaxWHOLE_NUM_STRTerminalRuleCall_12_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"max",
        		lv_max_14_1, 
        		"WHOLE_NUM_STR");
	    }

    |		lv_max_14_2=	'unlimited' 
    {
        newLeafNode(lv_max_14_2, grammarAccess.getXAttributeTypeAccess().getMaxUnlimitedKeyword_12_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed($current, "max", lv_max_14_2, null);
	    }

)

)
)(	otherlv_15='taggerId' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXAttributeTypeAccess().getTaggerIdKeyword_13_0());
    }
(
(
(
		lv_taggerId_16_1=	'DefaultAttributeTaggerProvider' 
    {
        newLeafNode(lv_taggerId_16_1, grammarAccess.getXAttributeTypeAccess().getTaggerIdDefaultAttributeTaggerProviderKeyword_13_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed($current, "taggerId", lv_taggerId_16_1, null);
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getXAttributeTypeAccess().getTaggerIdQUALIFIED_NAMEParserRuleCall_13_1_0_1()); 
	    }
		lv_taggerId_16_2=ruleQUALIFIED_NAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAttributeTypeRule());
	        }
       		set(
       			$current, 
       			"taggerId",
        		lv_taggerId_16_2, 
        		"QUALIFIED_NAME");
	        afterParserOrEnumRuleCall();
	    }

)

)
))?(	otherlv_17='enumType' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getXAttributeTypeAccess().getEnumTypeKeyword_14_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAttributeTypeAccess().getEnumTypeXOseeEnumTypeCrossReference_14_1_0()); 
	    }
		ruleENUM_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_19='description' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getXAttributeTypeAccess().getDescriptionKeyword_15_0());
    }
(
(
		lv_description_20_0=RULE_STRING
		{
			newLeafNode(lv_description_20_0, grammarAccess.getXAttributeTypeAccess().getDescriptionSTRINGTerminalRuleCall_15_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_20_0, 
        		"STRING");
	    }

)
))?(	otherlv_21='defaultValue' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getXAttributeTypeAccess().getDefaultValueKeyword_16_0());
    }
(
(
		lv_defaultValue_22_0=RULE_STRING
		{
			newLeafNode(lv_defaultValue_22_0, grammarAccess.getXAttributeTypeAccess().getDefaultValueSTRINGTerminalRuleCall_16_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_22_0, 
        		"STRING");
	    }

)
))?(	otherlv_23='fileExtension' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getXAttributeTypeAccess().getFileExtensionKeyword_17_0());
    }
(
(
		lv_fileExtension_24_0=RULE_STRING
		{
			newLeafNode(lv_fileExtension_24_0, grammarAccess.getXAttributeTypeAccess().getFileExtensionSTRINGTerminalRuleCall_17_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fileExtension",
        		lv_fileExtension_24_0, 
        		"STRING");
	    }

)
))?	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getXAttributeTypeAccess().getRightCurlyBracketKeyword_18());
    }
)
;





// Entry rule entryRuleAttributeBaseType
entryRuleAttributeBaseType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeBaseTypeRule()); } 
	 iv_ruleAttributeBaseType=ruleAttributeBaseType 
	 { $current=$iv_ruleAttributeBaseType.current.getText(); }  
	 EOF 
;

// Rule AttributeBaseType
ruleAttributeBaseType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='BooleanAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getBooleanAttributeKeyword_0()); 
    }

    |
	kw='CompressedContentAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getCompressedContentAttributeKeyword_1()); 
    }

    |
	kw='DateAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getDateAttributeKeyword_2()); 
    }

    |
	kw='EnumeratedAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getEnumeratedAttributeKeyword_3()); 
    }

    |
	kw='FloatingPointAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getFloatingPointAttributeKeyword_4()); 
    }

    |
	kw='IntegerAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getIntegerAttributeKeyword_5()); 
    }

    |
	kw='JavaObjectAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getJavaObjectAttributeKeyword_6()); 
    }

    |
	kw='StringAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getStringAttributeKeyword_7()); 
    }

    |
	kw='WordAttribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeBaseTypeAccess().getWordAttributeKeyword_8()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeBaseTypeAccess().getQUALIFIED_NAMEParserRuleCall_9()); 
    }
    this_QUALIFIED_NAME_9=ruleQUALIFIED_NAME    {
		$current.merge(this_QUALIFIED_NAME_9);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleXOseeEnumType
entryRuleXOseeEnumType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOseeEnumTypeRule()); }
	 iv_ruleXOseeEnumType=ruleXOseeEnumType 
	 { $current=$iv_ruleXOseeEnumType.current; } 
	 EOF 
;

// Rule XOseeEnumType
ruleXOseeEnumType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='oseeEnumType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXOseeEnumTypeAccess().getOseeEnumTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXOseeEnumTypeAccess().getNameENUM_TYPE_REFERENCEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleENUM_TYPE_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOseeEnumTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ENUM_TYPE_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXOseeEnumTypeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='guid' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXOseeEnumTypeAccess().getGuidKeyword_3());
    }
(
(
		lv_typeGuid_4_0=RULE_STRING
		{
			newLeafNode(lv_typeGuid_4_0, grammarAccess.getXOseeEnumTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOseeEnumTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"typeGuid",
        		lv_typeGuid_4_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXOseeEnumTypeAccess().getEnumEntriesXOseeEnumEntryParserRuleCall_5_0()); 
	    }
		lv_enumEntries_5_0=ruleXOseeEnumEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOseeEnumTypeRule());
	        }
       		add(
       			$current, 
       			"enumEntries",
        		lv_enumEntries_5_0, 
        		"XOseeEnumEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXOseeEnumTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXOseeEnumEntry
entryRuleXOseeEnumEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOseeEnumEntryRule()); }
	 iv_ruleXOseeEnumEntry=ruleXOseeEnumEntry 
	 { $current=$iv_ruleXOseeEnumEntry.current; } 
	 EOF 
;

// Rule XOseeEnumEntry
ruleXOseeEnumEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='entry' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXOseeEnumEntryAccess().getEntryKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXOseeEnumEntryAccess().getNameENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleENUM_ENTRY_TYPE_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOseeEnumEntryRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ENUM_ENTRY_TYPE_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_ordinal_2_0=RULE_WHOLE_NUM_STR
		{
			newLeafNode(lv_ordinal_2_0, grammarAccess.getXOseeEnumEntryAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOseeEnumEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ordinal",
        		lv_ordinal_2_0, 
        		"WHOLE_NUM_STR");
	    }

)
)?(	otherlv_3='entryGuid' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXOseeEnumEntryAccess().getEntryGuidKeyword_3_0());
    }
(
(
		lv_entryGuid_4_0=RULE_STRING
		{
			newLeafNode(lv_entryGuid_4_0, grammarAccess.getXOseeEnumEntryAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOseeEnumEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"entryGuid",
        		lv_entryGuid_4_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleXOseeEnumOverride
entryRuleXOseeEnumOverride returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOseeEnumOverrideRule()); }
	 iv_ruleXOseeEnumOverride=ruleXOseeEnumOverride 
	 { $current=$iv_ruleXOseeEnumOverride.current; } 
	 EOF 
;

// Rule XOseeEnumOverride
ruleXOseeEnumOverride returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='overrides enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXOseeEnumOverrideAccess().getOverridesEnumKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOseeEnumOverrideRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOseeEnumOverrideAccess().getOverridenEnumTypeXOseeEnumTypeCrossReference_1_0()); 
	    }
		ruleENUM_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXOseeEnumOverrideAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		lv_inheritAll_3_0=	'inheritAll' 
    {
        newLeafNode(lv_inheritAll_3_0, grammarAccess.getXOseeEnumOverrideAccess().getInheritAllInheritAllKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOseeEnumOverrideRule());
	        }
       		setWithLastConsumed($current, "inheritAll", true, "inheritAll");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getXOseeEnumOverrideAccess().getOverrideOptionsOverrideOptionParserRuleCall_4_0()); 
	    }
		lv_overrideOptions_4_0=ruleOverrideOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOseeEnumOverrideRule());
	        }
       		add(
       			$current, 
       			"overrideOptions",
        		lv_overrideOptions_4_0, 
        		"OverrideOption");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXOseeEnumOverrideAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleOverrideOption
entryRuleOverrideOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOverrideOptionRule()); }
	 iv_ruleOverrideOption=ruleOverrideOption 
	 { $current=$iv_ruleOverrideOption.current; } 
	 EOF 
;

// Rule OverrideOption
ruleOverrideOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOverrideOptionAccess().getAddEnumParserRuleCall_0()); 
    }
    this_AddEnum_0=ruleAddEnum
    { 
        $current = $this_AddEnum_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOverrideOptionAccess().getRemoveEnumParserRuleCall_1()); 
    }
    this_RemoveEnum_1=ruleRemoveEnum
    { 
        $current = $this_RemoveEnum_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAddEnum
entryRuleAddEnum returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddEnumRule()); }
	 iv_ruleAddEnum=ruleAddEnum 
	 { $current=$iv_ruleAddEnum.current; } 
	 EOF 
;

// Rule AddEnum
ruleAddEnum returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='add' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddEnumAccess().getAddKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAddEnumAccess().getEnumEntryENUM_ENTRY_TYPE_REFERENCEParserRuleCall_1_0()); 
	    }
		lv_enumEntry_1_0=ruleENUM_ENTRY_TYPE_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddEnumRule());
	        }
       		set(
       			$current, 
       			"enumEntry",
        		lv_enumEntry_1_0, 
        		"ENUM_ENTRY_TYPE_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_ordinal_2_0=RULE_WHOLE_NUM_STR
		{
			newLeafNode(lv_ordinal_2_0, grammarAccess.getAddEnumAccess().getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddEnumRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ordinal",
        		lv_ordinal_2_0, 
        		"WHOLE_NUM_STR");
	    }

)
)?(	otherlv_3='entryGuid' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddEnumAccess().getEntryGuidKeyword_3_0());
    }
(
(
		lv_entryGuid_4_0=RULE_STRING
		{
			newLeafNode(lv_entryGuid_4_0, grammarAccess.getAddEnumAccess().getEntryGuidSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddEnumRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"entryGuid",
        		lv_entryGuid_4_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleRemoveEnum
entryRuleRemoveEnum returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveEnumRule()); }
	 iv_ruleRemoveEnum=ruleRemoveEnum 
	 { $current=$iv_ruleRemoveEnum.current; } 
	 EOF 
;

// Rule RemoveEnum
ruleRemoveEnum returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='remove' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRemoveEnumAccess().getRemoveKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveEnumRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRemoveEnumAccess().getEnumEntryXOseeEnumEntryCrossReference_1_0()); 
	    }
		ruleENUM_ENTRY_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXRelationType
entryRuleXRelationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRelationTypeRule()); }
	 iv_ruleXRelationType=ruleXRelationType 
	 { $current=$iv_ruleXRelationType.current; } 
	 EOF 
;

// Rule XRelationType
ruleXRelationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='relationType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXRelationTypeAccess().getRelationTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationTypeAccess().getNameRELATION_TYPE_REFERENCEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleRELATION_TYPE_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"RELATION_TYPE_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXRelationTypeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='guid' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXRelationTypeAccess().getGuidKeyword_3());
    }
(
(
		lv_typeGuid_4_0=RULE_STRING
		{
			newLeafNode(lv_typeGuid_4_0, grammarAccess.getXRelationTypeAccess().getTypeGuidSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"typeGuid",
        		lv_typeGuid_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='sideAName' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXRelationTypeAccess().getSideANameKeyword_5());
    }
(
(
		lv_sideAName_6_0=RULE_STRING
		{
			newLeafNode(lv_sideAName_6_0, grammarAccess.getXRelationTypeAccess().getSideANameSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sideAName",
        		lv_sideAName_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='sideAArtifactType' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXRelationTypeAccess().getSideAArtifactTypeKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationTypeAccess().getSideAArtifactTypeXArtifactTypeCrossReference_8_0()); 
	    }
		ruleARTIFACT_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='sideBName' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXRelationTypeAccess().getSideBNameKeyword_9());
    }
(
(
		lv_sideBName_10_0=RULE_STRING
		{
			newLeafNode(lv_sideBName_10_0, grammarAccess.getXRelationTypeAccess().getSideBNameSTRINGTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sideBName",
        		lv_sideBName_10_0, 
        		"STRING");
	    }

)
)	otherlv_11='sideBArtifactType' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXRelationTypeAccess().getSideBArtifactTypeKeyword_11());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationTypeAccess().getSideBArtifactTypeXArtifactTypeCrossReference_12_0()); 
	    }
		ruleARTIFACT_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='defaultOrderType' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXRelationTypeAccess().getDefaultOrderTypeKeyword_13());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationTypeAccess().getDefaultOrderTypeRelationOrderTypeParserRuleCall_14_0()); 
	    }
		lv_defaultOrderType_14_0=ruleRelationOrderType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationTypeRule());
	        }
       		set(
       			$current, 
       			"defaultOrderType",
        		lv_defaultOrderType_14_0, 
        		"RelationOrderType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='multiplicity' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXRelationTypeAccess().getMultiplicityKeyword_15());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationTypeAccess().getMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0()); 
	    }
		lv_multiplicity_16_0=ruleRelationMultiplicityEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationTypeRule());
	        }
       		set(
       			$current, 
       			"multiplicity",
        		lv_multiplicity_16_0, 
        		"RelationMultiplicityEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getXRelationTypeAccess().getRightCurlyBracketKeyword_17());
    }
)
;





// Entry rule entryRuleRelationOrderType
entryRuleRelationOrderType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationOrderTypeRule()); } 
	 iv_ruleRelationOrderType=ruleRelationOrderType 
	 { $current=$iv_ruleRelationOrderType.current.getText(); }  
	 EOF 
;

// Rule RelationOrderType
ruleRelationOrderType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Lexicographical_Ascending' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationOrderTypeAccess().getLexicographical_AscendingKeyword_0()); 
    }

    |
	kw='Lexicographical_Descending' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationOrderTypeAccess().getLexicographical_DescendingKeyword_1()); 
    }

    |
	kw='Unordered' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationOrderTypeAccess().getUnorderedKeyword_2()); 
    }

    |    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getRelationOrderTypeAccess().getIDTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleARTIFACT_INSTANCE_REFERENCE
entryRuleARTIFACT_INSTANCE_REFERENCE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getARTIFACT_INSTANCE_REFERENCERule()); } 
	 iv_ruleARTIFACT_INSTANCE_REFERENCE=ruleARTIFACT_INSTANCE_REFERENCE 
	 { $current=$iv_ruleARTIFACT_INSTANCE_REFERENCE.current.getText(); }  
	 EOF 
;

// Rule ARTIFACT_INSTANCE_REFERENCE
ruleARTIFACT_INSTANCE_REFERENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getARTIFACT_INSTANCE_REFERENCEAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleXArtifactRef
entryRuleXArtifactRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXArtifactRefRule()); }
	 iv_ruleXArtifactRef=ruleXArtifactRef 
	 { $current=$iv_ruleXArtifactRef.current; } 
	 EOF 
;

// Rule XArtifactRef
ruleXArtifactRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXArtifactRefAccess().getArtifactKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXArtifactRefAccess().getNameARTIFACT_INSTANCE_REFERENCEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleARTIFACT_INSTANCE_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXArtifactRefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ARTIFACT_INSTANCE_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='artGuid' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXArtifactRefAccess().getArtGuidKeyword_2());
    }
(
(
		lv_guid_3_0=RULE_STRING
		{
			newLeafNode(lv_guid_3_0, grammarAccess.getXArtifactRefAccess().getGuidSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXArtifactRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"guid",
        		lv_guid_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXArtifactRefAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleBRANCH_INSTANCE_REFERENCE
entryRuleBRANCH_INSTANCE_REFERENCE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBRANCH_INSTANCE_REFERENCERule()); } 
	 iv_ruleBRANCH_INSTANCE_REFERENCE=ruleBRANCH_INSTANCE_REFERENCE 
	 { $current=$iv_ruleBRANCH_INSTANCE_REFERENCE.current.getText(); }  
	 EOF 
;

// Rule BRANCH_INSTANCE_REFERENCE
ruleBRANCH_INSTANCE_REFERENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getBRANCH_INSTANCE_REFERENCEAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleXBranchRef
entryRuleXBranchRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBranchRefRule()); }
	 iv_ruleXBranchRef=ruleXBranchRef 
	 { $current=$iv_ruleXBranchRef.current; } 
	 EOF 
;

// Rule XBranchRef
ruleXBranchRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='branch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXBranchRefAccess().getBranchKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXBranchRefAccess().getNameBRANCH_INSTANCE_REFERENCEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleBRANCH_INSTANCE_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBranchRefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"BRANCH_INSTANCE_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='branchGuid' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXBranchRefAccess().getBranchGuidKeyword_2());
    }
(
(
		lv_guid_3_0=RULE_STRING
		{
			newLeafNode(lv_guid_3_0, grammarAccess.getXBranchRefAccess().getGuidSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBranchRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"guid",
        		lv_guid_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXBranchRefAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleACCESS_CONTEXT_TYPE_REFRENCE
entryRuleACCESS_CONTEXT_TYPE_REFRENCE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getACCESS_CONTEXT_TYPE_REFRENCERule()); } 
	 iv_ruleACCESS_CONTEXT_TYPE_REFRENCE=ruleACCESS_CONTEXT_TYPE_REFRENCE 
	 { $current=$iv_ruleACCESS_CONTEXT_TYPE_REFRENCE.current.getText(); }  
	 EOF 
;

// Rule ACCESS_CONTEXT_TYPE_REFRENCE
ruleACCESS_CONTEXT_TYPE_REFRENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getACCESS_CONTEXT_TYPE_REFRENCEAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleAccessContext
entryRuleAccessContext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccessContextRule()); }
	 iv_ruleAccessContext=ruleAccessContext 
	 { $current=$iv_ruleAccessContext.current; } 
	 EOF 
;

// Rule AccessContext
ruleAccessContext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='accessContext' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAccessContextAccess().getAccessContextKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessContextAccess().getNameACCESS_CONTEXT_TYPE_REFRENCEParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleACCESS_CONTEXT_TYPE_REFRENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessContextRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ACCESS_CONTEXT_TYPE_REFRENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAccessContextAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccessContextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAccessContextAccess().getSuperAccessContextsAccessContextCrossReference_2_1_0()); 
	    }
		ruleACCESS_CONTEXT_TYPE_REFRENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAccessContextAccess().getCommaKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccessContextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAccessContextAccess().getSuperAccessContextsAccessContextCrossReference_2_2_1_0()); 
	    }
		ruleACCESS_CONTEXT_TYPE_REFRENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAccessContextAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_7='guid' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAccessContextAccess().getGuidKeyword_4());
    }
(
(
		lv_guid_8_0=RULE_STRING
		{
			newLeafNode(lv_guid_8_0, grammarAccess.getAccessContextAccess().getGuidSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccessContextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"guid",
        		lv_guid_8_0, 
        		"STRING");
	    }

)
)	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAccessContextAccess().getSemicolonKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAccessContextAccess().getAccessRulesObjectRestrictionParserRuleCall_7_0_0()); 
	    }
		lv_accessRules_10_0=ruleObjectRestriction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessContextRule());
	        }
       		add(
       			$current, 
       			"accessRules",
        		lv_accessRules_10_0, 
        		"ObjectRestriction");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessContextAccess().getHierarchyRestrictionsHierarchyRestrictionParserRuleCall_7_1_0()); 
	    }
		lv_hierarchyRestrictions_11_0=ruleHierarchyRestriction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessContextRule());
	        }
       		add(
       			$current, 
       			"hierarchyRestrictions",
        		lv_hierarchyRestrictions_11_0, 
        		"HierarchyRestriction");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAccessContextAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleHierarchyRestriction
entryRuleHierarchyRestriction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHierarchyRestrictionRule()); }
	 iv_ruleHierarchyRestriction=ruleHierarchyRestriction 
	 { $current=$iv_ruleHierarchyRestriction.current; } 
	 EOF 
;

// Rule HierarchyRestriction
ruleHierarchyRestriction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='childrenOf' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHierarchyRestrictionAccess().getChildrenOfKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getHierarchyRestrictionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getHierarchyRestrictionAccess().getArtifactXArtifactRefCrossReference_1_0()); 
	    }
		ruleARTIFACT_INSTANCE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHierarchyRestrictionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHierarchyRestrictionAccess().getAccessRulesObjectRestrictionParserRuleCall_3_0()); 
	    }
		lv_accessRules_3_0=ruleObjectRestriction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHierarchyRestrictionRule());
	        }
       		add(
       			$current, 
       			"accessRules",
        		lv_accessRules_3_0, 
        		"ObjectRestriction");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHierarchyRestrictionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleObjectRestriction
entryRuleObjectRestriction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectRestrictionRule()); }
	 iv_ruleObjectRestriction=ruleObjectRestriction 
	 { $current=$iv_ruleObjectRestriction.current; } 
	 EOF 
;

// Rule ObjectRestriction
ruleObjectRestriction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getObjectRestrictionAccess().getArtifactInstanceRestrictionParserRuleCall_0()); 
    }
    this_ArtifactInstanceRestriction_0=ruleArtifactInstanceRestriction
    { 
        $current = $this_ArtifactInstanceRestriction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectRestrictionAccess().getArtifactTypeRestrictionParserRuleCall_1()); 
    }
    this_ArtifactTypeRestriction_1=ruleArtifactTypeRestriction
    { 
        $current = $this_ArtifactTypeRestriction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectRestrictionAccess().getRelationTypeRestrictionParserRuleCall_2()); 
    }
    this_RelationTypeRestriction_2=ruleRelationTypeRestriction
    { 
        $current = $this_RelationTypeRestriction_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectRestrictionAccess().getAttributeTypeRestrictionParserRuleCall_3()); 
    }
    this_AttributeTypeRestriction_3=ruleAttributeTypeRestriction
    { 
        $current = $this_AttributeTypeRestriction_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArtifactInstanceRestriction
entryRuleArtifactInstanceRestriction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactInstanceRestrictionRule()); }
	 iv_ruleArtifactInstanceRestriction=ruleArtifactInstanceRestriction 
	 { $current=$iv_ruleArtifactInstanceRestriction.current; } 
	 EOF 
;

// Rule ArtifactInstanceRestriction
ruleArtifactInstanceRestriction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactInstanceRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0()); 
	    }
		lv_permission_0_0=ruleAccessPermissionEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactInstanceRestrictionRule());
	        }
       		set(
       			$current, 
       			"permission",
        		lv_permission_0_0, 
        		"AccessPermissionEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='edit' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArtifactInstanceRestrictionAccess().getEditKeyword_1());
    }
	otherlv_2='artifact' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArtifactInstanceRestrictionAccess().getArtifactKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactInstanceRestrictionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getArtifactInstanceRestrictionAccess().getArtifactRefXArtifactRefCrossReference_3_0()); 
	    }
		ruleARTIFACT_INSTANCE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArtifactInstanceRestrictionAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleArtifactTypeRestriction
entryRuleArtifactTypeRestriction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactTypeRestrictionRule()); }
	 iv_ruleArtifactTypeRestriction=ruleArtifactTypeRestriction 
	 { $current=$iv_ruleArtifactTypeRestriction.current; } 
	 EOF 
;

// Rule ArtifactTypeRestriction
ruleArtifactTypeRestriction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0()); 
	    }
		lv_permission_0_0=ruleAccessPermissionEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactTypeRestrictionRule());
	        }
       		set(
       			$current, 
       			"permission",
        		lv_permission_0_0, 
        		"AccessPermissionEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='edit' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArtifactTypeRestrictionAccess().getEditKeyword_1());
    }
	otherlv_2='artifactType' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArtifactTypeRestrictionAccess().getArtifactTypeKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactTypeRestrictionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getArtifactTypeRestrictionAccess().getArtifactTypeRefXArtifactTypeCrossReference_3_0()); 
	    }
		ruleARTIFACT_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArtifactTypeRestrictionAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleAttributeTypeRestriction
entryRuleAttributeTypeRestriction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeTypeRestrictionRule()); }
	 iv_ruleAttributeTypeRestriction=ruleAttributeTypeRestriction 
	 { $current=$iv_ruleAttributeTypeRestriction.current; } 
	 EOF 
;

// Rule AttributeTypeRestriction
ruleAttributeTypeRestriction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0()); 
	    }
		lv_permission_0_0=ruleAccessPermissionEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeTypeRestrictionRule());
	        }
       		set(
       			$current, 
       			"permission",
        		lv_permission_0_0, 
        		"AccessPermissionEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='edit' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeTypeRestrictionAccess().getEditKeyword_1());
    }
	otherlv_2='attributeType' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeTypeRestrictionAccess().getAttributeTypeKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeTypeRestrictionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeTypeRestrictionAccess().getAttributeTypeRefXAttributeTypeCrossReference_3_0()); 
	    }
		ruleATTRIBUTE_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='of' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeTypeRestrictionAccess().getOfKeyword_4_0());
    }
	otherlv_5='artifactType' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeTypeRestrictionAccess().getArtifactTypeKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeTypeRestrictionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeTypeRestrictionAccess().getArtifactTypeRefXArtifactTypeCrossReference_4_2_0()); 
	    }
		ruleARTIFACT_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAttributeTypeRestrictionAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleRelationTypeRestriction
entryRuleRelationTypeRestriction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationTypeRestrictionRule()); }
	 iv_ruleRelationTypeRestriction=ruleRelationTypeRestriction 
	 { $current=$iv_ruleRelationTypeRestriction.current; } 
	 EOF 
;

// Rule RelationTypeRestriction
ruleRelationTypeRestriction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRelationTypeRestrictionAccess().getPermissionAccessPermissionEnumEnumRuleCall_0_0()); 
	    }
		lv_permission_0_0=ruleAccessPermissionEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationTypeRestrictionRule());
	        }
       		set(
       			$current, 
       			"permission",
        		lv_permission_0_0, 
        		"AccessPermissionEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='edit' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRelationTypeRestrictionAccess().getEditKeyword_1());
    }
	otherlv_2='relationType' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRelationTypeRestrictionAccess().getRelationTypeKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationTypeRestrictionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationTypeRestrictionAccess().getRelationTypeRefXRelationTypeCrossReference_3_0()); 
	    }
		ruleRELATION_TYPE_REFERENCE		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationTypeRestrictionAccess().getRestrictedToSideXRelationSideEnumEnumRuleCall_4_0()); 
	    }
		lv_restrictedToSide_4_0=ruleXRelationSideEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationTypeRestrictionRule());
	        }
       		set(
       			$current, 
       			"restrictedToSide",
        		lv_restrictedToSide_4_0, 
        		"XRelationSideEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRelationTypeRestrictionAccess().getSemicolonKeyword_5());
    }
)
;





// Rule RelationMultiplicityEnum
ruleRelationMultiplicityEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ONE_TO_ONE' 
	{
        $current = grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_ONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_ONEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ONE_TO_MANY' 
	{
        $current = grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_MANYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_MANYEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='MANY_TO_ONE' 
	{
        $current = grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_ONEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_ONEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='MANY_TO_MANY' 
	{
        $current = grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_MANYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_MANYEnumLiteralDeclaration_3()); 
    }
));



// Rule AccessPermissionEnum
ruleAccessPermissionEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ALLOW' 
	{
        $current = grammarAccess.getAccessPermissionEnumAccess().getALLOWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAccessPermissionEnumAccess().getALLOWEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='DENY' 
	{
        $current = grammarAccess.getAccessPermissionEnumAccess().getDENYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAccessPermissionEnumAccess().getDENYEnumLiteralDeclaration_1()); 
    }
));



// Rule XRelationSideEnum
ruleXRelationSideEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='SIDE_A' 
	{
        $current = grammarAccess.getXRelationSideEnumAccess().getSIDE_AEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getXRelationSideEnumAccess().getSIDE_AEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='SIDE_B' 
	{
        $current = grammarAccess.getXRelationSideEnumAccess().getSIDE_BEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getXRelationSideEnumAccess().getSIDE_BEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='BOTH' 
	{
        $current = grammarAccess.getXRelationSideEnumAccess().getBOTHEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getXRelationSideEnumAccess().getBOTHEnumLiteralDeclaration_2()); 
    }
));



RULE_WHOLE_NUM_STR : ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


