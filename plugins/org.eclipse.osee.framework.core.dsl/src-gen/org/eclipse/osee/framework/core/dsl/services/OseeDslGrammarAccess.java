/*
* generated by Xtext
*/

package org.eclipse.osee.framework.core.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class OseeDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class OseeDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeDsl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cArtifactTypesAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cArtifactTypesXArtifactTypeParserRuleCall_1_0_0 = (RuleCall)cArtifactTypesAssignment_1_0.eContents().get(0);
		private final Assignment cRelationTypesAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cRelationTypesXRelationTypeParserRuleCall_1_1_0 = (RuleCall)cRelationTypesAssignment_1_1.eContents().get(0);
		private final Assignment cAttributeTypesAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cAttributeTypesXAttributeTypeParserRuleCall_1_2_0 = (RuleCall)cAttributeTypesAssignment_1_2.eContents().get(0);
		private final Assignment cEnumTypesAssignment_1_3 = (Assignment)cAlternatives_1.eContents().get(3);
		private final RuleCall cEnumTypesXOseeEnumTypeParserRuleCall_1_3_0 = (RuleCall)cEnumTypesAssignment_1_3.eContents().get(0);
		private final Assignment cEnumOverridesAssignment_1_4 = (Assignment)cAlternatives_1.eContents().get(4);
		private final RuleCall cEnumOverridesXOseeEnumOverrideParserRuleCall_1_4_0 = (RuleCall)cEnumOverridesAssignment_1_4.eContents().get(0);
		private final Assignment cArtifactMatchRefsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArtifactMatchRefsXArtifactMatcherParserRuleCall_2_0 = (RuleCall)cArtifactMatchRefsAssignment_2.eContents().get(0);
		private final Assignment cAccessDeclarationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAccessDeclarationsAccessContextParserRuleCall_3_0 = (RuleCall)cAccessDeclarationsAssignment_3.eContents().get(0);
		
		//OseeDsl:
		//	imports+=Import* (artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType |
		//	enumTypes+=XOseeEnumType | enumOverrides+=XOseeEnumOverride)* artifactMatchRefs+=XArtifactMatcher*
		//	accessDeclarations+=AccessContext*;
		public ParserRule getRule() { return rule; }

		//imports+=Import* (artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType |
		//enumTypes+=XOseeEnumType | enumOverrides+=XOseeEnumOverride)* artifactMatchRefs+=XArtifactMatcher*
		//accessDeclarations+=AccessContext*
		public Group getGroup() { return cGroup; }

		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }

		//(artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType | enumTypes+=XOseeEnumType
		//| enumOverrides+=XOseeEnumOverride)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//artifactTypes+=XArtifactType
		public Assignment getArtifactTypesAssignment_1_0() { return cArtifactTypesAssignment_1_0; }

		//XArtifactType
		public RuleCall getArtifactTypesXArtifactTypeParserRuleCall_1_0_0() { return cArtifactTypesXArtifactTypeParserRuleCall_1_0_0; }

		//relationTypes+=XRelationType
		public Assignment getRelationTypesAssignment_1_1() { return cRelationTypesAssignment_1_1; }

		//XRelationType
		public RuleCall getRelationTypesXRelationTypeParserRuleCall_1_1_0() { return cRelationTypesXRelationTypeParserRuleCall_1_1_0; }

		//attributeTypes+=XAttributeType
		public Assignment getAttributeTypesAssignment_1_2() { return cAttributeTypesAssignment_1_2; }

		//XAttributeType
		public RuleCall getAttributeTypesXAttributeTypeParserRuleCall_1_2_0() { return cAttributeTypesXAttributeTypeParserRuleCall_1_2_0; }

		//enumTypes+=XOseeEnumType
		public Assignment getEnumTypesAssignment_1_3() { return cEnumTypesAssignment_1_3; }

		//XOseeEnumType
		public RuleCall getEnumTypesXOseeEnumTypeParserRuleCall_1_3_0() { return cEnumTypesXOseeEnumTypeParserRuleCall_1_3_0; }

		//enumOverrides+=XOseeEnumOverride
		public Assignment getEnumOverridesAssignment_1_4() { return cEnumOverridesAssignment_1_4; }

		//XOseeEnumOverride
		public RuleCall getEnumOverridesXOseeEnumOverrideParserRuleCall_1_4_0() { return cEnumOverridesXOseeEnumOverrideParserRuleCall_1_4_0; }

		//artifactMatchRefs+=XArtifactMatcher*
		public Assignment getArtifactMatchRefsAssignment_2() { return cArtifactMatchRefsAssignment_2; }

		//XArtifactMatcher
		public RuleCall getArtifactMatchRefsXArtifactMatcherParserRuleCall_2_0() { return cArtifactMatchRefsXArtifactMatcherParserRuleCall_2_0; }

		//accessDeclarations+=AccessContext*
		public Assignment getAccessDeclarationsAssignment_3() { return cAccessDeclarationsAssignment_3; }

		//AccessContext
		public RuleCall getAccessDeclarationsAccessContextParserRuleCall_3_0() { return cAccessDeclarationsAccessContextParserRuleCall_3_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		
		//Import:
		//	"import" importURI=STRING;
		public ParserRule getRule() { return rule; }

		//"import" importURI=STRING
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
	}

	public class QUALIFIED_NAMEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QUALIFIED_NAME");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QUALIFIED_NAME:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class OseeElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cXOseeEnumOverrideParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOseeTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		/////////////////////////////////////////
		////  OSEE TYPE MODEL                  //
		/////////////////////////////////////////
		//OseeElement:
		//	XOseeEnumOverride | OseeType;
		public ParserRule getRule() { return rule; }

		//XOseeEnumOverride | OseeType
		public Alternatives getAlternatives() { return cAlternatives; }

		//XOseeEnumOverride
		public RuleCall getXOseeEnumOverrideParserRuleCall_0() { return cXOseeEnumOverrideParserRuleCall_0; }

		//OseeType
		public RuleCall getOseeTypeParserRuleCall_1() { return cOseeTypeParserRuleCall_1; }
	}

	public class OseeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cXArtifactTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cXRelationTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cXAttributeTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cXOseeEnumTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//OseeType:
		//	XArtifactType | XRelationType | XAttributeType | XOseeEnumType;
		public ParserRule getRule() { return rule; }

		//XArtifactType | XRelationType | XAttributeType | XOseeEnumType
		public Alternatives getAlternatives() { return cAlternatives; }

		//XArtifactType
		public RuleCall getXArtifactTypeParserRuleCall_0() { return cXArtifactTypeParserRuleCall_0; }

		//XRelationType
		public RuleCall getXRelationTypeParserRuleCall_1() { return cXRelationTypeParserRuleCall_1; }

		//XAttributeType
		public RuleCall getXAttributeTypeParserRuleCall_2() { return cXAttributeTypeParserRuleCall_2; }

		//XOseeEnumType
		public RuleCall getXOseeEnumTypeParserRuleCall_3() { return cXOseeEnumTypeParserRuleCall_3; }
	}

	public class XArtifactTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XArtifactType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_0_0 = (Keyword)cAbstractAssignment_0.eContents().get(0);
		private final Keyword cArtifactTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperArtifactTypesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperArtifactTypesXArtifactTypeCrossReference_3_1_0 = (CrossReference)cSuperArtifactTypesAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperArtifactTypesXArtifactTypeSTRINGTerminalRuleCall_3_1_0_1 = (RuleCall)cSuperArtifactTypesXArtifactTypeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSuperArtifactTypesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0 = (CrossReference)cSuperArtifactTypesAssignment_3_2_1.eContents().get(0);
		private final RuleCall cSuperArtifactTypesXArtifactTypeSTRINGTerminalRuleCall_3_2_1_0_1 = (RuleCall)cSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cGuidKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeGuidAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeGuidSTRINGTerminalRuleCall_6_0 = (RuleCall)cTypeGuidAssignment_6.eContents().get(0);
		private final Keyword cUuidKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUuidAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUuidHEX_INTTerminalRuleCall_8_0 = (RuleCall)cUuidAssignment_8.eContents().get(0);
		private final Assignment cValidAttributeTypesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValidAttributeTypesXAttributeTypeRefParserRuleCall_9_0 = (RuleCall)cValidAttributeTypesAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//XArtifactType:
		//	abstract?="abstract"? "artifactType" name=STRING ("extends" superArtifactTypes+=[XArtifactType|STRING] (","
		//	superArtifactTypes+=[XArtifactType|STRING])*)? "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT
		//	validAttributeTypes+=XAttributeTypeRef* "}";
		public ParserRule getRule() { return rule; }

		//abstract?="abstract"? "artifactType" name=STRING ("extends" superArtifactTypes+=[XArtifactType|STRING] (","
		//superArtifactTypes+=[XArtifactType|STRING])*)? "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT
		//validAttributeTypes+=XAttributeTypeRef* "}"
		public Group getGroup() { return cGroup; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_0() { return cAbstractAssignment_0; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_0_0() { return cAbstractAbstractKeyword_0_0; }

		//"artifactType"
		public Keyword getArtifactTypeKeyword_1() { return cArtifactTypeKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//("extends" superArtifactTypes+=[XArtifactType|STRING] ("," superArtifactTypes+=[XArtifactType|STRING])*)?
		public Group getGroup_3() { return cGroup_3; }

		//"extends"
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//superArtifactTypes+=[XArtifactType|STRING]
		public Assignment getSuperArtifactTypesAssignment_3_1() { return cSuperArtifactTypesAssignment_3_1; }

		//[XArtifactType|STRING]
		public CrossReference getSuperArtifactTypesXArtifactTypeCrossReference_3_1_0() { return cSuperArtifactTypesXArtifactTypeCrossReference_3_1_0; }

		//STRING
		public RuleCall getSuperArtifactTypesXArtifactTypeSTRINGTerminalRuleCall_3_1_0_1() { return cSuperArtifactTypesXArtifactTypeSTRINGTerminalRuleCall_3_1_0_1; }

		//("," superArtifactTypes+=[XArtifactType|STRING])*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//superArtifactTypes+=[XArtifactType|STRING]
		public Assignment getSuperArtifactTypesAssignment_3_2_1() { return cSuperArtifactTypesAssignment_3_2_1; }

		//[XArtifactType|STRING]
		public CrossReference getSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0() { return cSuperArtifactTypesXArtifactTypeCrossReference_3_2_1_0; }

		//STRING
		public RuleCall getSuperArtifactTypesXArtifactTypeSTRINGTerminalRuleCall_3_2_1_0_1() { return cSuperArtifactTypesXArtifactTypeSTRINGTerminalRuleCall_3_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"guid"
		public Keyword getGuidKeyword_5() { return cGuidKeyword_5; }

		//typeGuid=STRING
		public Assignment getTypeGuidAssignment_6() { return cTypeGuidAssignment_6; }

		//STRING
		public RuleCall getTypeGuidSTRINGTerminalRuleCall_6_0() { return cTypeGuidSTRINGTerminalRuleCall_6_0; }

		//"uuid"
		public Keyword getUuidKeyword_7() { return cUuidKeyword_7; }

		//uuid=HEX_INT
		public Assignment getUuidAssignment_8() { return cUuidAssignment_8; }

		//HEX_INT
		public RuleCall getUuidHEX_INTTerminalRuleCall_8_0() { return cUuidHEX_INTTerminalRuleCall_8_0; }

		//validAttributeTypes+=XAttributeTypeRef*
		public Assignment getValidAttributeTypesAssignment_9() { return cValidAttributeTypesAssignment_9; }

		//XAttributeTypeRef
		public RuleCall getValidAttributeTypesXAttributeTypeRefParserRuleCall_9_0() { return cValidAttributeTypesXAttributeTypeRefParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class XAttributeTypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XAttributeTypeRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValidAttributeTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cValidAttributeTypeXAttributeTypeCrossReference_1_0 = (CrossReference)cValidAttributeTypeAssignment_1.eContents().get(0);
		private final RuleCall cValidAttributeTypeXAttributeTypeSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cValidAttributeTypeXAttributeTypeCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cBranchGuidKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBranchGuidAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBranchGuidSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cBranchGuidAssignment_2_1.eContents().get(0);
		
		//XAttributeTypeRef:
		//	"attribute" validAttributeType=[XAttributeType|STRING] ("branchGuid" branchGuid=STRING)?;
		public ParserRule getRule() { return rule; }

		//"attribute" validAttributeType=[XAttributeType|STRING] ("branchGuid" branchGuid=STRING)?
		public Group getGroup() { return cGroup; }

		//"attribute"
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }

		//validAttributeType=[XAttributeType|STRING]
		public Assignment getValidAttributeTypeAssignment_1() { return cValidAttributeTypeAssignment_1; }

		//[XAttributeType|STRING]
		public CrossReference getValidAttributeTypeXAttributeTypeCrossReference_1_0() { return cValidAttributeTypeXAttributeTypeCrossReference_1_0; }

		//STRING
		public RuleCall getValidAttributeTypeXAttributeTypeSTRINGTerminalRuleCall_1_0_1() { return cValidAttributeTypeXAttributeTypeSTRINGTerminalRuleCall_1_0_1; }

		//("branchGuid" branchGuid=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//"branchGuid"
		public Keyword getBranchGuidKeyword_2_0() { return cBranchGuidKeyword_2_0; }

		//branchGuid=STRING
		public Assignment getBranchGuidAssignment_2_1() { return cBranchGuidAssignment_2_1; }

		//STRING
		public RuleCall getBranchGuidSTRINGTerminalRuleCall_2_1_0() { return cBranchGuidSTRINGTerminalRuleCall_2_1_0; }
	}

	public class XAttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XAttributeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBaseAttributeTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0 = (RuleCall)cBaseAttributeTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOverridesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOverrideAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cOverrideXAttributeTypeCrossReference_3_1_0 = (CrossReference)cOverrideAssignment_3_1.eContents().get(0);
		private final RuleCall cOverrideXAttributeTypeSTRINGTerminalRuleCall_3_1_0_1 = (RuleCall)cOverrideXAttributeTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cGuidKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeGuidAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeGuidSTRINGTerminalRuleCall_6_0 = (RuleCall)cTypeGuidAssignment_6.eContents().get(0);
		private final Keyword cUuidKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUuidAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUuidHEX_INTTerminalRuleCall_8_0 = (RuleCall)cUuidAssignment_8.eContents().get(0);
		private final Keyword cDataProviderKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDataProviderAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Alternatives cDataProviderAlternatives_10_0 = (Alternatives)cDataProviderAssignment_10.eContents().get(0);
		private final Keyword cDataProviderDefaultAttributeDataProviderKeyword_10_0_0 = (Keyword)cDataProviderAlternatives_10_0.eContents().get(0);
		private final Keyword cDataProviderUriAttributeDataProviderKeyword_10_0_1 = (Keyword)cDataProviderAlternatives_10_0.eContents().get(1);
		private final RuleCall cDataProviderQUALIFIED_NAMEParserRuleCall_10_0_2 = (RuleCall)cDataProviderAlternatives_10_0.eContents().get(2);
		private final Keyword cMinKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cMinAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cMinWHOLE_NUM_STRTerminalRuleCall_12_0 = (RuleCall)cMinAssignment_12.eContents().get(0);
		private final Keyword cMaxKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cMaxAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final Alternatives cMaxAlternatives_14_0 = (Alternatives)cMaxAssignment_14.eContents().get(0);
		private final RuleCall cMaxWHOLE_NUM_STRTerminalRuleCall_14_0_0 = (RuleCall)cMaxAlternatives_14_0.eContents().get(0);
		private final Keyword cMaxUnlimitedKeyword_14_0_1 = (Keyword)cMaxAlternatives_14_0.eContents().get(1);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cTaggerIdKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cTaggerIdAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final Alternatives cTaggerIdAlternatives_15_1_0 = (Alternatives)cTaggerIdAssignment_15_1.eContents().get(0);
		private final Keyword cTaggerIdDefaultAttributeTaggerProviderKeyword_15_1_0_0 = (Keyword)cTaggerIdAlternatives_15_1_0.eContents().get(0);
		private final RuleCall cTaggerIdQUALIFIED_NAMEParserRuleCall_15_1_0_1 = (RuleCall)cTaggerIdAlternatives_15_1_0.eContents().get(1);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cEnumTypeKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cEnumTypeAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final CrossReference cEnumTypeXOseeEnumTypeCrossReference_16_1_0 = (CrossReference)cEnumTypeAssignment_16_1.eContents().get(0);
		private final RuleCall cEnumTypeXOseeEnumTypeSTRINGTerminalRuleCall_16_1_0_1 = (RuleCall)cEnumTypeXOseeEnumTypeCrossReference_16_1_0.eContents().get(1);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cDescriptionKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cDescriptionAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_17_1_0 = (RuleCall)cDescriptionAssignment_17_1.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cDefaultValueKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cDefaultValueAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_18_1_0 = (RuleCall)cDefaultValueAssignment_18_1.eContents().get(0);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cFileExtensionKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Assignment cFileExtensionAssignment_19_1 = (Assignment)cGroup_19.eContents().get(1);
		private final RuleCall cFileExtensionSTRINGTerminalRuleCall_19_1_0 = (RuleCall)cFileExtensionAssignment_19_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//XAttributeType:
		//	"attributeType" name=STRING ("extends" baseAttributeType=AttributeBaseType) ("overrides"
		//	override=[XAttributeType|STRING])? "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT "dataProvider"
		//	dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME) "min" min=WHOLE_NUM_STR
		//	"max" max=(WHOLE_NUM_STR | "unlimited") ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
		//	("enumType" enumType=[XOseeEnumType|STRING])? ("description" description=STRING)? ("defaultValue"
		//	defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"attributeType" name=STRING ("extends" baseAttributeType=AttributeBaseType) ("overrides"
		//override=[XAttributeType|STRING])? "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT "dataProvider"
		//dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME) "min" min=WHOLE_NUM_STR
		//"max" max=(WHOLE_NUM_STR | "unlimited") ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
		//("enumType" enumType=[XOseeEnumType|STRING])? ("description" description=STRING)? ("defaultValue" defaultValue=STRING)?
		//("fileExtension" fileExtension=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"attributeType"
		public Keyword getAttributeTypeKeyword_0() { return cAttributeTypeKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//"extends" baseAttributeType=AttributeBaseType
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//baseAttributeType=AttributeBaseType
		public Assignment getBaseAttributeTypeAssignment_2_1() { return cBaseAttributeTypeAssignment_2_1; }

		//AttributeBaseType
		public RuleCall getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0() { return cBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0; }

		//("overrides" override=[XAttributeType|STRING])?
		public Group getGroup_3() { return cGroup_3; }

		//"overrides"
		public Keyword getOverridesKeyword_3_0() { return cOverridesKeyword_3_0; }

		//override=[XAttributeType|STRING]
		public Assignment getOverrideAssignment_3_1() { return cOverrideAssignment_3_1; }

		//[XAttributeType|STRING]
		public CrossReference getOverrideXAttributeTypeCrossReference_3_1_0() { return cOverrideXAttributeTypeCrossReference_3_1_0; }

		//STRING
		public RuleCall getOverrideXAttributeTypeSTRINGTerminalRuleCall_3_1_0_1() { return cOverrideXAttributeTypeSTRINGTerminalRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"guid"
		public Keyword getGuidKeyword_5() { return cGuidKeyword_5; }

		//typeGuid=STRING
		public Assignment getTypeGuidAssignment_6() { return cTypeGuidAssignment_6; }

		//STRING
		public RuleCall getTypeGuidSTRINGTerminalRuleCall_6_0() { return cTypeGuidSTRINGTerminalRuleCall_6_0; }

		//"uuid"
		public Keyword getUuidKeyword_7() { return cUuidKeyword_7; }

		//uuid=HEX_INT
		public Assignment getUuidAssignment_8() { return cUuidAssignment_8; }

		//HEX_INT
		public RuleCall getUuidHEX_INTTerminalRuleCall_8_0() { return cUuidHEX_INTTerminalRuleCall_8_0; }

		//"dataProvider"
		public Keyword getDataProviderKeyword_9() { return cDataProviderKeyword_9; }

		//dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME)
		public Assignment getDataProviderAssignment_10() { return cDataProviderAssignment_10; }

		//"DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME
		public Alternatives getDataProviderAlternatives_10_0() { return cDataProviderAlternatives_10_0; }

		//"DefaultAttributeDataProvider"
		public Keyword getDataProviderDefaultAttributeDataProviderKeyword_10_0_0() { return cDataProviderDefaultAttributeDataProviderKeyword_10_0_0; }

		//"UriAttributeDataProvider"
		public Keyword getDataProviderUriAttributeDataProviderKeyword_10_0_1() { return cDataProviderUriAttributeDataProviderKeyword_10_0_1; }

		//QUALIFIED_NAME
		public RuleCall getDataProviderQUALIFIED_NAMEParserRuleCall_10_0_2() { return cDataProviderQUALIFIED_NAMEParserRuleCall_10_0_2; }

		//"min"
		public Keyword getMinKeyword_11() { return cMinKeyword_11; }

		//min=WHOLE_NUM_STR
		public Assignment getMinAssignment_12() { return cMinAssignment_12; }

		//WHOLE_NUM_STR
		public RuleCall getMinWHOLE_NUM_STRTerminalRuleCall_12_0() { return cMinWHOLE_NUM_STRTerminalRuleCall_12_0; }

		//"max"
		public Keyword getMaxKeyword_13() { return cMaxKeyword_13; }

		//max=(WHOLE_NUM_STR | "unlimited")
		public Assignment getMaxAssignment_14() { return cMaxAssignment_14; }

		//WHOLE_NUM_STR | "unlimited"
		public Alternatives getMaxAlternatives_14_0() { return cMaxAlternatives_14_0; }

		//WHOLE_NUM_STR
		public RuleCall getMaxWHOLE_NUM_STRTerminalRuleCall_14_0_0() { return cMaxWHOLE_NUM_STRTerminalRuleCall_14_0_0; }

		//"unlimited"
		public Keyword getMaxUnlimitedKeyword_14_0_1() { return cMaxUnlimitedKeyword_14_0_1; }

		//("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
		public Group getGroup_15() { return cGroup_15; }

		//"taggerId"
		public Keyword getTaggerIdKeyword_15_0() { return cTaggerIdKeyword_15_0; }

		//taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME)
		public Assignment getTaggerIdAssignment_15_1() { return cTaggerIdAssignment_15_1; }

		//"DefaultAttributeTaggerProvider" | QUALIFIED_NAME
		public Alternatives getTaggerIdAlternatives_15_1_0() { return cTaggerIdAlternatives_15_1_0; }

		//"DefaultAttributeTaggerProvider"
		public Keyword getTaggerIdDefaultAttributeTaggerProviderKeyword_15_1_0_0() { return cTaggerIdDefaultAttributeTaggerProviderKeyword_15_1_0_0; }

		//QUALIFIED_NAME
		public RuleCall getTaggerIdQUALIFIED_NAMEParserRuleCall_15_1_0_1() { return cTaggerIdQUALIFIED_NAMEParserRuleCall_15_1_0_1; }

		//("enumType" enumType=[XOseeEnumType|STRING])?
		public Group getGroup_16() { return cGroup_16; }

		//"enumType"
		public Keyword getEnumTypeKeyword_16_0() { return cEnumTypeKeyword_16_0; }

		//enumType=[XOseeEnumType|STRING]
		public Assignment getEnumTypeAssignment_16_1() { return cEnumTypeAssignment_16_1; }

		//[XOseeEnumType|STRING]
		public CrossReference getEnumTypeXOseeEnumTypeCrossReference_16_1_0() { return cEnumTypeXOseeEnumTypeCrossReference_16_1_0; }

		//STRING
		public RuleCall getEnumTypeXOseeEnumTypeSTRINGTerminalRuleCall_16_1_0_1() { return cEnumTypeXOseeEnumTypeSTRINGTerminalRuleCall_16_1_0_1; }

		//("description" description=STRING)?
		public Group getGroup_17() { return cGroup_17; }

		//"description"
		public Keyword getDescriptionKeyword_17_0() { return cDescriptionKeyword_17_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_17_1() { return cDescriptionAssignment_17_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_17_1_0() { return cDescriptionSTRINGTerminalRuleCall_17_1_0; }

		//("defaultValue" defaultValue=STRING)?
		public Group getGroup_18() { return cGroup_18; }

		//"defaultValue"
		public Keyword getDefaultValueKeyword_18_0() { return cDefaultValueKeyword_18_0; }

		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_18_1() { return cDefaultValueAssignment_18_1; }

		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_18_1_0() { return cDefaultValueSTRINGTerminalRuleCall_18_1_0; }

		//("fileExtension" fileExtension=STRING)?
		public Group getGroup_19() { return cGroup_19; }

		//"fileExtension"
		public Keyword getFileExtensionKeyword_19_0() { return cFileExtensionKeyword_19_0; }

		//fileExtension=STRING
		public Assignment getFileExtensionAssignment_19_1() { return cFileExtensionAssignment_19_1; }

		//STRING
		public RuleCall getFileExtensionSTRINGTerminalRuleCall_19_1_0() { return cFileExtensionSTRINGTerminalRuleCall_19_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}

	public class AttributeBaseTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeBaseType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cBooleanAttributeKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCompressedContentAttributeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDateAttributeKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cEnumeratedAttributeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFloatingPointAttributeKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cIntegerAttributeKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cJavaObjectAttributeKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cStringAttributeKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cWordAttributeKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final RuleCall cQUALIFIED_NAMEParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//AttributeBaseType:
		//	"BooleanAttribute" | "CompressedContentAttribute" | "DateAttribute" | "EnumeratedAttribute" | "FloatingPointAttribute"
		//	| "IntegerAttribute" | "JavaObjectAttribute" | "StringAttribute" | "WordAttribute" | QUALIFIED_NAME;
		public ParserRule getRule() { return rule; }

		//"BooleanAttribute" | "CompressedContentAttribute" | "DateAttribute" | "EnumeratedAttribute" | "FloatingPointAttribute" |
		//"IntegerAttribute" | "JavaObjectAttribute" | "StringAttribute" | "WordAttribute" | QUALIFIED_NAME
		public Alternatives getAlternatives() { return cAlternatives; }

		//"BooleanAttribute"
		public Keyword getBooleanAttributeKeyword_0() { return cBooleanAttributeKeyword_0; }

		//"CompressedContentAttribute"
		public Keyword getCompressedContentAttributeKeyword_1() { return cCompressedContentAttributeKeyword_1; }

		//"DateAttribute"
		public Keyword getDateAttributeKeyword_2() { return cDateAttributeKeyword_2; }

		//"EnumeratedAttribute"
		public Keyword getEnumeratedAttributeKeyword_3() { return cEnumeratedAttributeKeyword_3; }

		//"FloatingPointAttribute"
		public Keyword getFloatingPointAttributeKeyword_4() { return cFloatingPointAttributeKeyword_4; }

		//"IntegerAttribute"
		public Keyword getIntegerAttributeKeyword_5() { return cIntegerAttributeKeyword_5; }

		//"JavaObjectAttribute"
		public Keyword getJavaObjectAttributeKeyword_6() { return cJavaObjectAttributeKeyword_6; }

		//"StringAttribute"
		public Keyword getStringAttributeKeyword_7() { return cStringAttributeKeyword_7; }

		//"WordAttribute"
		public Keyword getWordAttributeKeyword_8() { return cWordAttributeKeyword_8; }

		//QUALIFIED_NAME
		public RuleCall getQUALIFIED_NAMEParserRuleCall_9() { return cQUALIFIED_NAMEParserRuleCall_9; }
	}

	public class XOseeEnumTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XOseeEnumType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOseeEnumTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cGuidKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeGuidAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeGuidSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeGuidAssignment_4.eContents().get(0);
		private final Keyword cUuidKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUuidAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUuidHEX_INTTerminalRuleCall_6_0 = (RuleCall)cUuidAssignment_6.eContents().get(0);
		private final Assignment cEnumEntriesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEnumEntriesXOseeEnumEntryParserRuleCall_7_0 = (RuleCall)cEnumEntriesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//XOseeEnumType:
		//	"oseeEnumType" name=STRING "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT enumEntries+=XOseeEnumEntry* "}";
		public ParserRule getRule() { return rule; }

		//"oseeEnumType" name=STRING "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT enumEntries+=XOseeEnumEntry* "}"
		public Group getGroup() { return cGroup; }

		//"oseeEnumType"
		public Keyword getOseeEnumTypeKeyword_0() { return cOseeEnumTypeKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"guid"
		public Keyword getGuidKeyword_3() { return cGuidKeyword_3; }

		//typeGuid=STRING
		public Assignment getTypeGuidAssignment_4() { return cTypeGuidAssignment_4; }

		//STRING
		public RuleCall getTypeGuidSTRINGTerminalRuleCall_4_0() { return cTypeGuidSTRINGTerminalRuleCall_4_0; }

		//"uuid"
		public Keyword getUuidKeyword_5() { return cUuidKeyword_5; }

		//uuid=HEX_INT
		public Assignment getUuidAssignment_6() { return cUuidAssignment_6; }

		//HEX_INT
		public RuleCall getUuidHEX_INTTerminalRuleCall_6_0() { return cUuidHEX_INTTerminalRuleCall_6_0; }

		//enumEntries+=XOseeEnumEntry*
		public Assignment getEnumEntriesAssignment_7() { return cEnumEntriesAssignment_7; }

		//XOseeEnumEntry
		public RuleCall getEnumEntriesXOseeEnumEntryParserRuleCall_7_0() { return cEnumEntriesXOseeEnumEntryParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class XOseeEnumEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XOseeEnumEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cOrdinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0 = (RuleCall)cOrdinalAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEntryGuidKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEntryGuidAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEntryGuidSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cEntryGuidAssignment_3_1.eContents().get(0);
		
		//XOseeEnumEntry:
		//	"entry" name=STRING ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
		public ParserRule getRule() { return rule; }

		//"entry" name=STRING ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?
		public Group getGroup() { return cGroup; }

		//"entry"
		public Keyword getEntryKeyword_0() { return cEntryKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//ordinal=WHOLE_NUM_STR?
		public Assignment getOrdinalAssignment_2() { return cOrdinalAssignment_2; }

		//WHOLE_NUM_STR
		public RuleCall getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0() { return cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0; }

		//("entryGuid" entryGuid=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"entryGuid"
		public Keyword getEntryGuidKeyword_3_0() { return cEntryGuidKeyword_3_0; }

		//entryGuid=STRING
		public Assignment getEntryGuidAssignment_3_1() { return cEntryGuidAssignment_3_1; }

		//STRING
		public RuleCall getEntryGuidSTRINGTerminalRuleCall_3_1_0() { return cEntryGuidSTRINGTerminalRuleCall_3_1_0; }
	}

	public class XOseeEnumOverrideElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XOseeEnumOverride");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOverridesEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOverridenEnumTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOverridenEnumTypeXOseeEnumTypeCrossReference_1_0 = (CrossReference)cOverridenEnumTypeAssignment_1.eContents().get(0);
		private final RuleCall cOverridenEnumTypeXOseeEnumTypeSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cOverridenEnumTypeXOseeEnumTypeCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInheritAllAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cInheritAllInheritAllKeyword_3_0 = (Keyword)cInheritAllAssignment_3.eContents().get(0);
		private final Assignment cOverrideOptionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOverrideOptionsOverrideOptionParserRuleCall_4_0 = (RuleCall)cOverrideOptionsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//XOseeEnumOverride:
		//	"overrides enum" overridenEnumType=[XOseeEnumType|STRING] "{" inheritAll?="inheritAll"?
		//	overrideOptions+=OverrideOption* "}";
		public ParserRule getRule() { return rule; }

		//"overrides enum" overridenEnumType=[XOseeEnumType|STRING] "{" inheritAll?="inheritAll"? overrideOptions+=OverrideOption*
		//"}"
		public Group getGroup() { return cGroup; }

		//"overrides enum"
		public Keyword getOverridesEnumKeyword_0() { return cOverridesEnumKeyword_0; }

		//overridenEnumType=[XOseeEnumType|STRING]
		public Assignment getOverridenEnumTypeAssignment_1() { return cOverridenEnumTypeAssignment_1; }

		//[XOseeEnumType|STRING]
		public CrossReference getOverridenEnumTypeXOseeEnumTypeCrossReference_1_0() { return cOverridenEnumTypeXOseeEnumTypeCrossReference_1_0; }

		//STRING
		public RuleCall getOverridenEnumTypeXOseeEnumTypeSTRINGTerminalRuleCall_1_0_1() { return cOverridenEnumTypeXOseeEnumTypeSTRINGTerminalRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//inheritAll?="inheritAll"?
		public Assignment getInheritAllAssignment_3() { return cInheritAllAssignment_3; }

		//"inheritAll"
		public Keyword getInheritAllInheritAllKeyword_3_0() { return cInheritAllInheritAllKeyword_3_0; }

		//overrideOptions+=OverrideOption*
		public Assignment getOverrideOptionsAssignment_4() { return cOverrideOptionsAssignment_4; }

		//OverrideOption
		public RuleCall getOverrideOptionsOverrideOptionParserRuleCall_4_0() { return cOverrideOptionsOverrideOptionParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class OverrideOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OverrideOption");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAddEnumParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRemoveEnumParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//OverrideOption:
		//	AddEnum | RemoveEnum;
		public ParserRule getRule() { return rule; }

		//AddEnum | RemoveEnum
		public Alternatives getAlternatives() { return cAlternatives; }

		//AddEnum
		public RuleCall getAddEnumParserRuleCall_0() { return cAddEnumParserRuleCall_0; }

		//RemoveEnum
		public RuleCall getRemoveEnumParserRuleCall_1() { return cRemoveEnumParserRuleCall_1; }
	}

	public class AddEnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AddEnum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnumEntryAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEnumEntrySTRINGTerminalRuleCall_1_0 = (RuleCall)cEnumEntryAssignment_1.eContents().get(0);
		private final Assignment cOrdinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0 = (RuleCall)cOrdinalAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEntryGuidKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEntryGuidAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEntryGuidSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cEntryGuidAssignment_3_1.eContents().get(0);
		
		//AddEnum:
		//	"add" enumEntry=STRING ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
		public ParserRule getRule() { return rule; }

		//"add" enumEntry=STRING ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?
		public Group getGroup() { return cGroup; }

		//"add"
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }

		//enumEntry=STRING
		public Assignment getEnumEntryAssignment_1() { return cEnumEntryAssignment_1; }

		//STRING
		public RuleCall getEnumEntrySTRINGTerminalRuleCall_1_0() { return cEnumEntrySTRINGTerminalRuleCall_1_0; }

		//ordinal=WHOLE_NUM_STR?
		public Assignment getOrdinalAssignment_2() { return cOrdinalAssignment_2; }

		//WHOLE_NUM_STR
		public RuleCall getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0() { return cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0; }

		//("entryGuid" entryGuid=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"entryGuid"
		public Keyword getEntryGuidKeyword_3_0() { return cEntryGuidKeyword_3_0; }

		//entryGuid=STRING
		public Assignment getEntryGuidAssignment_3_1() { return cEntryGuidAssignment_3_1; }

		//STRING
		public RuleCall getEntryGuidSTRINGTerminalRuleCall_3_1_0() { return cEntryGuidSTRINGTerminalRuleCall_3_1_0; }
	}

	public class RemoveEnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RemoveEnum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRemoveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnumEntryAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEnumEntryXOseeEnumEntryCrossReference_1_0 = (CrossReference)cEnumEntryAssignment_1.eContents().get(0);
		private final RuleCall cEnumEntryXOseeEnumEntrySTRINGTerminalRuleCall_1_0_1 = (RuleCall)cEnumEntryXOseeEnumEntryCrossReference_1_0.eContents().get(1);
		
		//RemoveEnum:
		//	"remove" enumEntry=[XOseeEnumEntry|STRING];
		public ParserRule getRule() { return rule; }

		//"remove" enumEntry=[XOseeEnumEntry|STRING]
		public Group getGroup() { return cGroup; }

		//"remove"
		public Keyword getRemoveKeyword_0() { return cRemoveKeyword_0; }

		//enumEntry=[XOseeEnumEntry|STRING]
		public Assignment getEnumEntryAssignment_1() { return cEnumEntryAssignment_1; }

		//[XOseeEnumEntry|STRING]
		public CrossReference getEnumEntryXOseeEnumEntryCrossReference_1_0() { return cEnumEntryXOseeEnumEntryCrossReference_1_0; }

		//STRING
		public RuleCall getEnumEntryXOseeEnumEntrySTRINGTerminalRuleCall_1_0_1() { return cEnumEntryXOseeEnumEntrySTRINGTerminalRuleCall_1_0_1; }
	}

	public class XRelationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XRelationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cGuidKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeGuidAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeGuidSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeGuidAssignment_4.eContents().get(0);
		private final Keyword cUuidKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUuidAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUuidHEX_INTTerminalRuleCall_6_0 = (RuleCall)cUuidAssignment_6.eContents().get(0);
		private final Keyword cSideANameKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSideANameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSideANameSTRINGTerminalRuleCall_8_0 = (RuleCall)cSideANameAssignment_8.eContents().get(0);
		private final Keyword cSideAArtifactTypeKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSideAArtifactTypeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cSideAArtifactTypeXArtifactTypeCrossReference_10_0 = (CrossReference)cSideAArtifactTypeAssignment_10.eContents().get(0);
		private final RuleCall cSideAArtifactTypeXArtifactTypeSTRINGTerminalRuleCall_10_0_1 = (RuleCall)cSideAArtifactTypeXArtifactTypeCrossReference_10_0.eContents().get(1);
		private final Keyword cSideBNameKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cSideBNameAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cSideBNameSTRINGTerminalRuleCall_12_0 = (RuleCall)cSideBNameAssignment_12.eContents().get(0);
		private final Keyword cSideBArtifactTypeKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cSideBArtifactTypeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final CrossReference cSideBArtifactTypeXArtifactTypeCrossReference_14_0 = (CrossReference)cSideBArtifactTypeAssignment_14.eContents().get(0);
		private final RuleCall cSideBArtifactTypeXArtifactTypeSTRINGTerminalRuleCall_14_0_1 = (RuleCall)cSideBArtifactTypeXArtifactTypeCrossReference_14_0.eContents().get(1);
		private final Keyword cDefaultOrderTypeKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cDefaultOrderTypeAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cDefaultOrderTypeRelationOrderTypeParserRuleCall_16_0 = (RuleCall)cDefaultOrderTypeAssignment_16.eContents().get(0);
		private final Keyword cMultiplicityKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cMultiplicityAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cMultiplicityRelationMultiplicityEnumEnumRuleCall_18_0 = (RuleCall)cMultiplicityAssignment_18.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//XRelationType:
		//	"relationType" name=STRING "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT "sideAName" sideAName=STRING
		//	"sideAArtifactType" sideAArtifactType=[XArtifactType|STRING] "sideBName" sideBName=STRING "sideBArtifactType"
		//	sideBArtifactType=[XArtifactType|STRING] "defaultOrderType" defaultOrderType=RelationOrderType "multiplicity"
		//	multiplicity=RelationMultiplicityEnum "}";
		public ParserRule getRule() { return rule; }

		//"relationType" name=STRING "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT "sideAName" sideAName=STRING
		//"sideAArtifactType" sideAArtifactType=[XArtifactType|STRING] "sideBName" sideBName=STRING "sideBArtifactType"
		//sideBArtifactType=[XArtifactType|STRING] "defaultOrderType" defaultOrderType=RelationOrderType "multiplicity"
		//multiplicity=RelationMultiplicityEnum "}"
		public Group getGroup() { return cGroup; }

		//"relationType"
		public Keyword getRelationTypeKeyword_0() { return cRelationTypeKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"guid"
		public Keyword getGuidKeyword_3() { return cGuidKeyword_3; }

		//typeGuid=STRING
		public Assignment getTypeGuidAssignment_4() { return cTypeGuidAssignment_4; }

		//STRING
		public RuleCall getTypeGuidSTRINGTerminalRuleCall_4_0() { return cTypeGuidSTRINGTerminalRuleCall_4_0; }

		//"uuid"
		public Keyword getUuidKeyword_5() { return cUuidKeyword_5; }

		//uuid=HEX_INT
		public Assignment getUuidAssignment_6() { return cUuidAssignment_6; }

		//HEX_INT
		public RuleCall getUuidHEX_INTTerminalRuleCall_6_0() { return cUuidHEX_INTTerminalRuleCall_6_0; }

		//"sideAName"
		public Keyword getSideANameKeyword_7() { return cSideANameKeyword_7; }

		//sideAName=STRING
		public Assignment getSideANameAssignment_8() { return cSideANameAssignment_8; }

		//STRING
		public RuleCall getSideANameSTRINGTerminalRuleCall_8_0() { return cSideANameSTRINGTerminalRuleCall_8_0; }

		//"sideAArtifactType"
		public Keyword getSideAArtifactTypeKeyword_9() { return cSideAArtifactTypeKeyword_9; }

		//sideAArtifactType=[XArtifactType|STRING]
		public Assignment getSideAArtifactTypeAssignment_10() { return cSideAArtifactTypeAssignment_10; }

		//[XArtifactType|STRING]
		public CrossReference getSideAArtifactTypeXArtifactTypeCrossReference_10_0() { return cSideAArtifactTypeXArtifactTypeCrossReference_10_0; }

		//STRING
		public RuleCall getSideAArtifactTypeXArtifactTypeSTRINGTerminalRuleCall_10_0_1() { return cSideAArtifactTypeXArtifactTypeSTRINGTerminalRuleCall_10_0_1; }

		//"sideBName"
		public Keyword getSideBNameKeyword_11() { return cSideBNameKeyword_11; }

		//sideBName=STRING
		public Assignment getSideBNameAssignment_12() { return cSideBNameAssignment_12; }

		//STRING
		public RuleCall getSideBNameSTRINGTerminalRuleCall_12_0() { return cSideBNameSTRINGTerminalRuleCall_12_0; }

		//"sideBArtifactType"
		public Keyword getSideBArtifactTypeKeyword_13() { return cSideBArtifactTypeKeyword_13; }

		//sideBArtifactType=[XArtifactType|STRING]
		public Assignment getSideBArtifactTypeAssignment_14() { return cSideBArtifactTypeAssignment_14; }

		//[XArtifactType|STRING]
		public CrossReference getSideBArtifactTypeXArtifactTypeCrossReference_14_0() { return cSideBArtifactTypeXArtifactTypeCrossReference_14_0; }

		//STRING
		public RuleCall getSideBArtifactTypeXArtifactTypeSTRINGTerminalRuleCall_14_0_1() { return cSideBArtifactTypeXArtifactTypeSTRINGTerminalRuleCall_14_0_1; }

		//"defaultOrderType"
		public Keyword getDefaultOrderTypeKeyword_15() { return cDefaultOrderTypeKeyword_15; }

		//defaultOrderType=RelationOrderType
		public Assignment getDefaultOrderTypeAssignment_16() { return cDefaultOrderTypeAssignment_16; }

		//RelationOrderType
		public RuleCall getDefaultOrderTypeRelationOrderTypeParserRuleCall_16_0() { return cDefaultOrderTypeRelationOrderTypeParserRuleCall_16_0; }

		//"multiplicity"
		public Keyword getMultiplicityKeyword_17() { return cMultiplicityKeyword_17; }

		//multiplicity=RelationMultiplicityEnum
		public Assignment getMultiplicityAssignment_18() { return cMultiplicityAssignment_18; }

		//RelationMultiplicityEnum
		public RuleCall getMultiplicityRelationMultiplicityEnumEnumRuleCall_18_0() { return cMultiplicityRelationMultiplicityEnumEnumRuleCall_18_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}

	public class RelationOrderTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationOrderType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLexicographical_AscendingKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cLexicographical_DescendingKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cUnorderedKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//RelationOrderType:
		//	"Lexicographical_Ascending" | "Lexicographical_Descending" | "Unordered" | ID;
		public ParserRule getRule() { return rule; }

		//"Lexicographical_Ascending" | "Lexicographical_Descending" | "Unordered" | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//"Lexicographical_Ascending"
		public Keyword getLexicographical_AscendingKeyword_0() { return cLexicographical_AscendingKeyword_0; }

		//"Lexicographical_Descending"
		public Keyword getLexicographical_DescendingKeyword_1() { return cLexicographical_DescendingKeyword_1; }

		//"Unordered"
		public Keyword getUnorderedKeyword_2() { return cUnorderedKeyword_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_3() { return cIDTerminalRuleCall_3; }
	}

	public class CONDITION_VALUEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CONDITION_VALUE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cWHOLE_NUM_STRTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CONDITION_VALUE:
		//	WHOLE_NUM_STR | STRING;
		public ParserRule getRule() { return rule; }

		//WHOLE_NUM_STR | STRING
		public Alternatives getAlternatives() { return cAlternatives; }

		//WHOLE_NUM_STR
		public RuleCall getWHOLE_NUM_STRTerminalRuleCall_0() { return cWHOLE_NUM_STRTerminalRuleCall_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
	}

	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Condition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleConditionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCompoundConditionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Condition:
		//	SimpleCondition | CompoundCondition;
		public ParserRule getRule() { return rule; }

		//SimpleCondition | CompoundCondition
		public Alternatives getAlternatives() { return cAlternatives; }

		//SimpleCondition
		public RuleCall getSimpleConditionParserRuleCall_0() { return cSimpleConditionParserRuleCall_0; }

		//CompoundCondition
		public RuleCall getCompoundConditionParserRuleCall_1() { return cCompoundConditionParserRuleCall_1; }
	}

	public class SimpleConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFieldAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFieldMatchFieldEnumRuleCall_0_0 = (RuleCall)cFieldAssignment_0.eContents().get(0);
		private final Assignment cOpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOpCompareOpEnumRuleCall_1_0 = (RuleCall)cOpAssignment_1.eContents().get(0);
		private final Assignment cExpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpressionSTRINGTerminalRuleCall_2_0 = (RuleCall)cExpressionAssignment_2.eContents().get(0);
		
		//SimpleCondition:
		//	field=MatchField op=CompareOp expression=STRING;
		public ParserRule getRule() { return rule; }

		//field=MatchField op=CompareOp expression=STRING
		public Group getGroup() { return cGroup; }

		//field=MatchField
		public Assignment getFieldAssignment_0() { return cFieldAssignment_0; }

		//MatchField
		public RuleCall getFieldMatchFieldEnumRuleCall_0_0() { return cFieldMatchFieldEnumRuleCall_0_0; }

		//op=CompareOp
		public Assignment getOpAssignment_1() { return cOpAssignment_1; }

		//CompareOp
		public RuleCall getOpCompareOpEnumRuleCall_1_0() { return cOpCompareOpEnumRuleCall_1_0; }

		//expression=STRING
		public Assignment getExpressionAssignment_2() { return cExpressionAssignment_2; }

		//STRING
		public RuleCall getExpressionSTRINGTerminalRuleCall_2_0() { return cExpressionSTRINGTerminalRuleCall_2_0; }
	}

	public class CompoundConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompoundCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cConditionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConditionsSimpleConditionParserRuleCall_1_0 = (RuleCall)cConditionsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cOperatorsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOperatorsXLogicOperatorEnumRuleCall_2_0_0 = (RuleCall)cOperatorsAssignment_2_0.eContents().get(0);
		private final Assignment cConditionsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cConditionsSimpleConditionParserRuleCall_2_1_0 = (RuleCall)cConditionsAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//CompoundCondition:
		//	"(" conditions+=SimpleCondition (operators+=XLogicOperator conditions+=SimpleCondition)+ ")";
		public ParserRule getRule() { return rule; }

		//"(" conditions+=SimpleCondition (operators+=XLogicOperator conditions+=SimpleCondition)+ ")"
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//conditions+=SimpleCondition
		public Assignment getConditionsAssignment_1() { return cConditionsAssignment_1; }

		//SimpleCondition
		public RuleCall getConditionsSimpleConditionParserRuleCall_1_0() { return cConditionsSimpleConditionParserRuleCall_1_0; }

		//(operators+=XLogicOperator conditions+=SimpleCondition)+
		public Group getGroup_2() { return cGroup_2; }

		//operators+=XLogicOperator
		public Assignment getOperatorsAssignment_2_0() { return cOperatorsAssignment_2_0; }

		//XLogicOperator
		public RuleCall getOperatorsXLogicOperatorEnumRuleCall_2_0_0() { return cOperatorsXLogicOperatorEnumRuleCall_2_0_0; }

		//conditions+=SimpleCondition
		public Assignment getConditionsAssignment_2_1() { return cConditionsAssignment_2_1; }

		//SimpleCondition
		public RuleCall getConditionsSimpleConditionParserRuleCall_2_1_0() { return cConditionsSimpleConditionParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class XArtifactMatcherElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XArtifactMatcher");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArtifactMatcherKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cWhereKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConditionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConditionsConditionParserRuleCall_3_0 = (RuleCall)cConditionsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cOperatorsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cOperatorsXLogicOperatorEnumRuleCall_4_0_0 = (RuleCall)cOperatorsAssignment_4_0.eContents().get(0);
		private final Assignment cConditionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cConditionsConditionParserRuleCall_4_1_0 = (RuleCall)cConditionsAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//XArtifactMatcher:
		//	"artifactMatcher" name=STRING "where" conditions+=Condition (operators+=XLogicOperator conditions+=Condition)* ";";
		public ParserRule getRule() { return rule; }

		//"artifactMatcher" name=STRING "where" conditions+=Condition (operators+=XLogicOperator conditions+=Condition)* ";"
		public Group getGroup() { return cGroup; }

		//"artifactMatcher"
		public Keyword getArtifactMatcherKeyword_0() { return cArtifactMatcherKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//"where"
		public Keyword getWhereKeyword_2() { return cWhereKeyword_2; }

		//conditions+=Condition
		public Assignment getConditionsAssignment_3() { return cConditionsAssignment_3; }

		//Condition
		public RuleCall getConditionsConditionParserRuleCall_3_0() { return cConditionsConditionParserRuleCall_3_0; }

		//(operators+=XLogicOperator conditions+=Condition)*
		public Group getGroup_4() { return cGroup_4; }

		//operators+=XLogicOperator
		public Assignment getOperatorsAssignment_4_0() { return cOperatorsAssignment_4_0; }

		//XLogicOperator
		public RuleCall getOperatorsXLogicOperatorEnumRuleCall_4_0_0() { return cOperatorsXLogicOperatorEnumRuleCall_4_0_0; }

		//conditions+=Condition
		public Assignment getConditionsAssignment_4_1() { return cConditionsAssignment_4_1; }

		//Condition
		public RuleCall getConditionsConditionParserRuleCall_4_1_0() { return cConditionsConditionParserRuleCall_4_1_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class AccessContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AccessContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAccessContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperAccessContextsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperAccessContextsAccessContextCrossReference_2_1_0 = (CrossReference)cSuperAccessContextsAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperAccessContextsAccessContextSTRINGTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperAccessContextsAccessContextCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cGuidKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cGuidAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGuidSTRINGTerminalRuleCall_5_0 = (RuleCall)cGuidAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cAccessRulesAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cAccessRulesObjectRestrictionParserRuleCall_7_0_0 = (RuleCall)cAccessRulesAssignment_7_0.eContents().get(0);
		private final Assignment cHierarchyRestrictionsAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cHierarchyRestrictionsHierarchyRestrictionParserRuleCall_7_1_0 = (RuleCall)cHierarchyRestrictionsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		/////////////////////////////////////////
		////  OSEE ACCESS MODEL                //
		/////////////////////////////////////////
		//AccessContext:
		//	"accessContext" name=STRING ("extends" superAccessContexts+=[AccessContext|STRING])? "{" "guid" guid=STRING ";"
		//	(accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+ "}";
		public ParserRule getRule() { return rule; }

		//"accessContext" name=STRING ("extends" superAccessContexts+=[AccessContext|STRING])? "{" "guid" guid=STRING ";"
		//(accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+ "}"
		public Group getGroup() { return cGroup; }

		//"accessContext"
		public Keyword getAccessContextKeyword_0() { return cAccessContextKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//("extends" superAccessContexts+=[AccessContext|STRING])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//superAccessContexts+=[AccessContext|STRING]
		public Assignment getSuperAccessContextsAssignment_2_1() { return cSuperAccessContextsAssignment_2_1; }

		//[AccessContext|STRING]
		public CrossReference getSuperAccessContextsAccessContextCrossReference_2_1_0() { return cSuperAccessContextsAccessContextCrossReference_2_1_0; }

		//STRING
		public RuleCall getSuperAccessContextsAccessContextSTRINGTerminalRuleCall_2_1_0_1() { return cSuperAccessContextsAccessContextSTRINGTerminalRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"guid"
		public Keyword getGuidKeyword_4() { return cGuidKeyword_4; }

		//guid=STRING
		public Assignment getGuidAssignment_5() { return cGuidAssignment_5; }

		//STRING
		public RuleCall getGuidSTRINGTerminalRuleCall_5_0() { return cGuidSTRINGTerminalRuleCall_5_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }

		//(accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//accessRules+=ObjectRestriction
		public Assignment getAccessRulesAssignment_7_0() { return cAccessRulesAssignment_7_0; }

		//ObjectRestriction
		public RuleCall getAccessRulesObjectRestrictionParserRuleCall_7_0_0() { return cAccessRulesObjectRestrictionParserRuleCall_7_0_0; }

		//hierarchyRestrictions+=HierarchyRestriction
		public Assignment getHierarchyRestrictionsAssignment_7_1() { return cHierarchyRestrictionsAssignment_7_1; }

		//HierarchyRestriction
		public RuleCall getHierarchyRestrictionsHierarchyRestrictionParserRuleCall_7_1_0() { return cHierarchyRestrictionsHierarchyRestrictionParserRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class HierarchyRestrictionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HierarchyRestriction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChildrenOfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cArtifactMatcherRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cArtifactMatcherRefXArtifactMatcherCrossReference_1_0 = (CrossReference)cArtifactMatcherRefAssignment_1.eContents().get(0);
		private final RuleCall cArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cArtifactMatcherRefXArtifactMatcherCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAccessRulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAccessRulesObjectRestrictionParserRuleCall_3_0 = (RuleCall)cAccessRulesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//HierarchyRestriction:
		//	"childrenOf" artifactMatcherRef=[XArtifactMatcher|STRING] "{" accessRules+=ObjectRestriction+ "}";
		public ParserRule getRule() { return rule; }

		//"childrenOf" artifactMatcherRef=[XArtifactMatcher|STRING] "{" accessRules+=ObjectRestriction+ "}"
		public Group getGroup() { return cGroup; }

		//"childrenOf"
		public Keyword getChildrenOfKeyword_0() { return cChildrenOfKeyword_0; }

		//artifactMatcherRef=[XArtifactMatcher|STRING]
		public Assignment getArtifactMatcherRefAssignment_1() { return cArtifactMatcherRefAssignment_1; }

		//[XArtifactMatcher|STRING]
		public CrossReference getArtifactMatcherRefXArtifactMatcherCrossReference_1_0() { return cArtifactMatcherRefXArtifactMatcherCrossReference_1_0; }

		//STRING
		public RuleCall getArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_1_0_1() { return cArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//accessRules+=ObjectRestriction+
		public Assignment getAccessRulesAssignment_3() { return cAccessRulesAssignment_3; }

		//ObjectRestriction
		public RuleCall getAccessRulesObjectRestrictionParserRuleCall_3_0() { return cAccessRulesObjectRestrictionParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ObjectRestrictionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectRestriction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cArtifactMatchRestrictionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cArtifactTypeRestrictionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRelationTypeRestrictionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAttributeTypeRestrictionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ObjectRestriction:
		//	ArtifactMatchRestriction | ArtifactTypeRestriction | RelationTypeRestriction | AttributeTypeRestriction;
		public ParserRule getRule() { return rule; }

		//ArtifactMatchRestriction | ArtifactTypeRestriction | RelationTypeRestriction | AttributeTypeRestriction
		public Alternatives getAlternatives() { return cAlternatives; }

		//ArtifactMatchRestriction
		public RuleCall getArtifactMatchRestrictionParserRuleCall_0() { return cArtifactMatchRestrictionParserRuleCall_0; }

		//ArtifactTypeRestriction
		public RuleCall getArtifactTypeRestrictionParserRuleCall_1() { return cArtifactTypeRestrictionParserRuleCall_1; }

		//RelationTypeRestriction
		public RuleCall getRelationTypeRestrictionParserRuleCall_2() { return cRelationTypeRestrictionParserRuleCall_2; }

		//AttributeTypeRestriction
		public RuleCall getAttributeTypeRestrictionParserRuleCall_3() { return cAttributeTypeRestrictionParserRuleCall_3; }
	}

	public class ArtifactMatchRestrictionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArtifactMatchRestriction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPermissionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPermissionAccessPermissionEnumEnumRuleCall_0_0 = (RuleCall)cPermissionAssignment_0.eContents().get(0);
		private final Keyword cEditKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cArtifactKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cArtifactMatcherRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cArtifactMatcherRefXArtifactMatcherCrossReference_3_0 = (CrossReference)cArtifactMatcherRefAssignment_3.eContents().get(0);
		private final RuleCall cArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cArtifactMatcherRefXArtifactMatcherCrossReference_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ArtifactMatchRestriction:
		//	permission=AccessPermissionEnum "edit" "artifact" artifactMatcherRef=[XArtifactMatcher|STRING] ";";
		public ParserRule getRule() { return rule; }

		//permission=AccessPermissionEnum "edit" "artifact" artifactMatcherRef=[XArtifactMatcher|STRING] ";"
		public Group getGroup() { return cGroup; }

		//permission=AccessPermissionEnum
		public Assignment getPermissionAssignment_0() { return cPermissionAssignment_0; }

		//AccessPermissionEnum
		public RuleCall getPermissionAccessPermissionEnumEnumRuleCall_0_0() { return cPermissionAccessPermissionEnumEnumRuleCall_0_0; }

		//"edit"
		public Keyword getEditKeyword_1() { return cEditKeyword_1; }

		//"artifact"
		public Keyword getArtifactKeyword_2() { return cArtifactKeyword_2; }

		//artifactMatcherRef=[XArtifactMatcher|STRING]
		public Assignment getArtifactMatcherRefAssignment_3() { return cArtifactMatcherRefAssignment_3; }

		//[XArtifactMatcher|STRING]
		public CrossReference getArtifactMatcherRefXArtifactMatcherCrossReference_3_0() { return cArtifactMatcherRefXArtifactMatcherCrossReference_3_0; }

		//STRING
		public RuleCall getArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_3_0_1() { return cArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_3_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ArtifactTypeRestrictionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArtifactTypeRestriction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPermissionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPermissionAccessPermissionEnumEnumRuleCall_0_0 = (RuleCall)cPermissionAssignment_0.eContents().get(0);
		private final Keyword cEditKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cArtifactTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cArtifactTypeRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cArtifactTypeRefXArtifactTypeCrossReference_3_0 = (CrossReference)cArtifactTypeRefAssignment_3.eContents().get(0);
		private final RuleCall cArtifactTypeRefXArtifactTypeSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cArtifactTypeRefXArtifactTypeCrossReference_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ArtifactTypeRestriction:
		//	permission=AccessPermissionEnum "edit" "artifactType" artifactTypeRef=[XArtifactType|STRING] ";";
		public ParserRule getRule() { return rule; }

		//permission=AccessPermissionEnum "edit" "artifactType" artifactTypeRef=[XArtifactType|STRING] ";"
		public Group getGroup() { return cGroup; }

		//permission=AccessPermissionEnum
		public Assignment getPermissionAssignment_0() { return cPermissionAssignment_0; }

		//AccessPermissionEnum
		public RuleCall getPermissionAccessPermissionEnumEnumRuleCall_0_0() { return cPermissionAccessPermissionEnumEnumRuleCall_0_0; }

		//"edit"
		public Keyword getEditKeyword_1() { return cEditKeyword_1; }

		//"artifactType"
		public Keyword getArtifactTypeKeyword_2() { return cArtifactTypeKeyword_2; }

		//artifactTypeRef=[XArtifactType|STRING]
		public Assignment getArtifactTypeRefAssignment_3() { return cArtifactTypeRefAssignment_3; }

		//[XArtifactType|STRING]
		public CrossReference getArtifactTypeRefXArtifactTypeCrossReference_3_0() { return cArtifactTypeRefXArtifactTypeCrossReference_3_0; }

		//STRING
		public RuleCall getArtifactTypeRefXArtifactTypeSTRINGTerminalRuleCall_3_0_1() { return cArtifactTypeRefXArtifactTypeSTRINGTerminalRuleCall_3_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class AttributeTypeRestrictionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeTypeRestriction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPermissionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPermissionAccessPermissionEnumEnumRuleCall_0_0 = (RuleCall)cPermissionAssignment_0.eContents().get(0);
		private final Keyword cEditKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAttributeTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeTypeRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAttributeTypeRefXAttributeTypeCrossReference_3_0 = (CrossReference)cAttributeTypeRefAssignment_3.eContents().get(0);
		private final RuleCall cAttributeTypeRefXAttributeTypeSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cAttributeTypeRefXAttributeTypeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOfKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cArtifactTypeKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cArtifactTypeRefAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cArtifactTypeRefXArtifactTypeCrossReference_4_2_0 = (CrossReference)cArtifactTypeRefAssignment_4_2.eContents().get(0);
		private final RuleCall cArtifactTypeRefXArtifactTypeSTRINGTerminalRuleCall_4_2_0_1 = (RuleCall)cArtifactTypeRefXArtifactTypeCrossReference_4_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AttributeTypeRestriction:
		//	permission=AccessPermissionEnum "edit" "attributeType" attributeTypeRef=[XAttributeType|STRING] ("of" "artifactType"
		//	artifactTypeRef=[XArtifactType|STRING])? ";";
		public ParserRule getRule() { return rule; }

		//permission=AccessPermissionEnum "edit" "attributeType" attributeTypeRef=[XAttributeType|STRING] ("of" "artifactType"
		//artifactTypeRef=[XArtifactType|STRING])? ";"
		public Group getGroup() { return cGroup; }

		//permission=AccessPermissionEnum
		public Assignment getPermissionAssignment_0() { return cPermissionAssignment_0; }

		//AccessPermissionEnum
		public RuleCall getPermissionAccessPermissionEnumEnumRuleCall_0_0() { return cPermissionAccessPermissionEnumEnumRuleCall_0_0; }

		//"edit"
		public Keyword getEditKeyword_1() { return cEditKeyword_1; }

		//"attributeType"
		public Keyword getAttributeTypeKeyword_2() { return cAttributeTypeKeyword_2; }

		//attributeTypeRef=[XAttributeType|STRING]
		public Assignment getAttributeTypeRefAssignment_3() { return cAttributeTypeRefAssignment_3; }

		//[XAttributeType|STRING]
		public CrossReference getAttributeTypeRefXAttributeTypeCrossReference_3_0() { return cAttributeTypeRefXAttributeTypeCrossReference_3_0; }

		//STRING
		public RuleCall getAttributeTypeRefXAttributeTypeSTRINGTerminalRuleCall_3_0_1() { return cAttributeTypeRefXAttributeTypeSTRINGTerminalRuleCall_3_0_1; }

		//("of" "artifactType" artifactTypeRef=[XArtifactType|STRING])?
		public Group getGroup_4() { return cGroup_4; }

		//"of"
		public Keyword getOfKeyword_4_0() { return cOfKeyword_4_0; }

		//"artifactType"
		public Keyword getArtifactTypeKeyword_4_1() { return cArtifactTypeKeyword_4_1; }

		//artifactTypeRef=[XArtifactType|STRING]
		public Assignment getArtifactTypeRefAssignment_4_2() { return cArtifactTypeRefAssignment_4_2; }

		//[XArtifactType|STRING]
		public CrossReference getArtifactTypeRefXArtifactTypeCrossReference_4_2_0() { return cArtifactTypeRefXArtifactTypeCrossReference_4_2_0; }

		//STRING
		public RuleCall getArtifactTypeRefXArtifactTypeSTRINGTerminalRuleCall_4_2_0_1() { return cArtifactTypeRefXArtifactTypeSTRINGTerminalRuleCall_4_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class RelationTypeRestrictionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationTypeRestriction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPermissionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPermissionAccessPermissionEnumEnumRuleCall_0_0 = (RuleCall)cPermissionAssignment_0.eContents().get(0);
		private final Keyword cEditKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRelationTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRelationTypeRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRelationTypeRefXRelationTypeCrossReference_3_0 = (CrossReference)cRelationTypeRefAssignment_3.eContents().get(0);
		private final RuleCall cRelationTypeRefXRelationTypeSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cRelationTypeRefXRelationTypeCrossReference_3_0.eContents().get(1);
		private final Assignment cRestrictedToSideAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRestrictedToSideXRelationSideEnumEnumRuleCall_4_0 = (RuleCall)cRestrictedToSideAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cArtifactKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cArtifactMatcherRefAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cArtifactMatcherRefXArtifactMatcherCrossReference_5_1_0 = (CrossReference)cArtifactMatcherRefAssignment_5_1.eContents().get(0);
		private final RuleCall cArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_5_1_0_1 = (RuleCall)cArtifactMatcherRefXArtifactMatcherCrossReference_5_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RelationTypeRestriction:
		//	permission=AccessPermissionEnum "edit" "relationType" relationTypeRef=[XRelationType|STRING]
		//	restrictedToSide=XRelationSideEnum ("artifact" artifactMatcherRef=[XArtifactMatcher|STRING])? ";";
		public ParserRule getRule() { return rule; }

		//permission=AccessPermissionEnum "edit" "relationType" relationTypeRef=[XRelationType|STRING]
		//restrictedToSide=XRelationSideEnum ("artifact" artifactMatcherRef=[XArtifactMatcher|STRING])? ";"
		public Group getGroup() { return cGroup; }

		//permission=AccessPermissionEnum
		public Assignment getPermissionAssignment_0() { return cPermissionAssignment_0; }

		//AccessPermissionEnum
		public RuleCall getPermissionAccessPermissionEnumEnumRuleCall_0_0() { return cPermissionAccessPermissionEnumEnumRuleCall_0_0; }

		//"edit"
		public Keyword getEditKeyword_1() { return cEditKeyword_1; }

		//"relationType"
		public Keyword getRelationTypeKeyword_2() { return cRelationTypeKeyword_2; }

		//relationTypeRef=[XRelationType|STRING]
		public Assignment getRelationTypeRefAssignment_3() { return cRelationTypeRefAssignment_3; }

		//[XRelationType|STRING]
		public CrossReference getRelationTypeRefXRelationTypeCrossReference_3_0() { return cRelationTypeRefXRelationTypeCrossReference_3_0; }

		//STRING
		public RuleCall getRelationTypeRefXRelationTypeSTRINGTerminalRuleCall_3_0_1() { return cRelationTypeRefXRelationTypeSTRINGTerminalRuleCall_3_0_1; }

		//restrictedToSide=XRelationSideEnum
		public Assignment getRestrictedToSideAssignment_4() { return cRestrictedToSideAssignment_4; }

		//XRelationSideEnum
		public RuleCall getRestrictedToSideXRelationSideEnumEnumRuleCall_4_0() { return cRestrictedToSideXRelationSideEnumEnumRuleCall_4_0; }

		//("artifact" artifactMatcherRef=[XArtifactMatcher|STRING])?
		public Group getGroup_5() { return cGroup_5; }

		//"artifact"
		public Keyword getArtifactKeyword_5_0() { return cArtifactKeyword_5_0; }

		//artifactMatcherRef=[XArtifactMatcher|STRING]
		public Assignment getArtifactMatcherRefAssignment_5_1() { return cArtifactMatcherRefAssignment_5_1; }

		//[XArtifactMatcher|STRING]
		public CrossReference getArtifactMatcherRefXArtifactMatcherCrossReference_5_1_0() { return cArtifactMatcherRefXArtifactMatcherCrossReference_5_1_0; }

		//STRING
		public RuleCall getArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_5_1_0_1() { return cArtifactMatcherRefXArtifactMatcherSTRINGTerminalRuleCall_5_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	
	
	public class RelationMultiplicityEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RelationMultiplicityEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cONE_TO_ONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cONE_TO_ONEONE_TO_ONEKeyword_0_0 = (Keyword)cONE_TO_ONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cONE_TO_MANYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cONE_TO_MANYONE_TO_MANYKeyword_1_0 = (Keyword)cONE_TO_MANYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMANY_TO_ONEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMANY_TO_ONEMANY_TO_ONEKeyword_2_0 = (Keyword)cMANY_TO_ONEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMANY_TO_MANYEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMANY_TO_MANYMANY_TO_MANYKeyword_3_0 = (Keyword)cMANY_TO_MANYEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum RelationMultiplicityEnum:
		//	ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY;
		public EnumRule getRule() { return rule; }

		//ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY
		public Alternatives getAlternatives() { return cAlternatives; }

		//ONE_TO_ONE
		public EnumLiteralDeclaration getONE_TO_ONEEnumLiteralDeclaration_0() { return cONE_TO_ONEEnumLiteralDeclaration_0; }

		//"ONE_TO_ONE"
		public Keyword getONE_TO_ONEONE_TO_ONEKeyword_0_0() { return cONE_TO_ONEONE_TO_ONEKeyword_0_0; }

		//ONE_TO_MANY
		public EnumLiteralDeclaration getONE_TO_MANYEnumLiteralDeclaration_1() { return cONE_TO_MANYEnumLiteralDeclaration_1; }

		//"ONE_TO_MANY"
		public Keyword getONE_TO_MANYONE_TO_MANYKeyword_1_0() { return cONE_TO_MANYONE_TO_MANYKeyword_1_0; }

		//MANY_TO_ONE
		public EnumLiteralDeclaration getMANY_TO_ONEEnumLiteralDeclaration_2() { return cMANY_TO_ONEEnumLiteralDeclaration_2; }

		//"MANY_TO_ONE"
		public Keyword getMANY_TO_ONEMANY_TO_ONEKeyword_2_0() { return cMANY_TO_ONEMANY_TO_ONEKeyword_2_0; }

		//MANY_TO_MANY
		public EnumLiteralDeclaration getMANY_TO_MANYEnumLiteralDeclaration_3() { return cMANY_TO_MANYEnumLiteralDeclaration_3; }

		//"MANY_TO_MANY"
		public Keyword getMANY_TO_MANYMANY_TO_MANYKeyword_3_0() { return cMANY_TO_MANYMANY_TO_MANYKeyword_3_0; }
	}

	public class CompareOpElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CompareOp");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEQEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEQEQKeyword_0_0 = (Keyword)cEQEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLIKEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLIKELIKEKeyword_1_0 = (Keyword)cLIKEEnumLiteralDeclaration_1.eContents().get(0);
		
		/////////////////////////////////////////
		////  OSEE MATCH RULES //
		/////////////////////////////////////////
		//enum CompareOp:
		//	EQ | LIKE;
		public EnumRule getRule() { return rule; }

		//EQ | LIKE
		public Alternatives getAlternatives() { return cAlternatives; }

		//EQ
		public EnumLiteralDeclaration getEQEnumLiteralDeclaration_0() { return cEQEnumLiteralDeclaration_0; }

		//"EQ"
		public Keyword getEQEQKeyword_0_0() { return cEQEQKeyword_0_0; }

		//LIKE
		public EnumLiteralDeclaration getLIKEEnumLiteralDeclaration_1() { return cLIKEEnumLiteralDeclaration_1; }

		//"LIKE"
		public Keyword getLIKELIKEKeyword_1_0() { return cLIKELIKEKeyword_1_0; }
	}

	public class XLogicOperatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "XLogicOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cANDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cANDANDKeyword_0_0 = (Keyword)cANDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cORORKeyword_1_0 = (Keyword)cOREnumLiteralDeclaration_1.eContents().get(0);
		
		//enum XLogicOperator:
		//	AND | OR;
		public EnumRule getRule() { return rule; }

		//AND | OR
		public Alternatives getAlternatives() { return cAlternatives; }

		//AND
		public EnumLiteralDeclaration getANDEnumLiteralDeclaration_0() { return cANDEnumLiteralDeclaration_0; }

		//"AND"
		public Keyword getANDANDKeyword_0_0() { return cANDANDKeyword_0_0; }

		//OR
		public EnumLiteralDeclaration getOREnumLiteralDeclaration_1() { return cOREnumLiteralDeclaration_1; }

		//"OR"
		public Keyword getORORKeyword_1_0() { return cORORKeyword_1_0; }
	}

	public class MatchFieldElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "MatchField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cArtifactNameEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cArtifactNameArtifactNameKeyword_0_0 = (Keyword)cArtifactNameEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cArtifactGuidEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cArtifactGuidArtifactGuidKeyword_1_0 = (Keyword)cArtifactGuidEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBranchNameEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBranchNameBranchNameKeyword_2_0 = (Keyword)cBranchNameEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBranchGuidEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBranchGuidBranchGuidKeyword_3_0 = (Keyword)cBranchGuidEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum MatchField:
		//	artifactName | artifactGuid | branchName | branchGuid;
		public EnumRule getRule() { return rule; }

		//artifactName | artifactGuid | branchName | branchGuid
		public Alternatives getAlternatives() { return cAlternatives; }

		//artifactName
		public EnumLiteralDeclaration getArtifactNameEnumLiteralDeclaration_0() { return cArtifactNameEnumLiteralDeclaration_0; }

		//"artifactName"
		public Keyword getArtifactNameArtifactNameKeyword_0_0() { return cArtifactNameArtifactNameKeyword_0_0; }

		//artifactGuid
		public EnumLiteralDeclaration getArtifactGuidEnumLiteralDeclaration_1() { return cArtifactGuidEnumLiteralDeclaration_1; }

		//"artifactGuid"
		public Keyword getArtifactGuidArtifactGuidKeyword_1_0() { return cArtifactGuidArtifactGuidKeyword_1_0; }

		//branchName
		public EnumLiteralDeclaration getBranchNameEnumLiteralDeclaration_2() { return cBranchNameEnumLiteralDeclaration_2; }

		//"branchName"
		public Keyword getBranchNameBranchNameKeyword_2_0() { return cBranchNameBranchNameKeyword_2_0; }

		//branchGuid
		public EnumLiteralDeclaration getBranchGuidEnumLiteralDeclaration_3() { return cBranchGuidEnumLiteralDeclaration_3; }

		//"branchGuid"
		public Keyword getBranchGuidBranchGuidKeyword_3_0() { return cBranchGuidBranchGuidKeyword_3_0; }
	}

	public class AccessPermissionEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "AccessPermissionEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cALLOWEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cALLOWALLOWKeyword_0_0 = (Keyword)cALLOWEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDENYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDENYDENYKeyword_1_0 = (Keyword)cDENYEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum AccessPermissionEnum:
		//	ALLOW | DENY;
		public EnumRule getRule() { return rule; }

		//ALLOW | DENY
		public Alternatives getAlternatives() { return cAlternatives; }

		//ALLOW
		public EnumLiteralDeclaration getALLOWEnumLiteralDeclaration_0() { return cALLOWEnumLiteralDeclaration_0; }

		//"ALLOW"
		public Keyword getALLOWALLOWKeyword_0_0() { return cALLOWALLOWKeyword_0_0; }

		//DENY
		public EnumLiteralDeclaration getDENYEnumLiteralDeclaration_1() { return cDENYEnumLiteralDeclaration_1; }

		//"DENY"
		public Keyword getDENYDENYKeyword_1_0() { return cDENYDENYKeyword_1_0; }
	}

	public class XRelationSideEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "XRelationSideEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSIDE_AEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSIDE_ASIDE_AKeyword_0_0 = (Keyword)cSIDE_AEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSIDE_BEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSIDE_BSIDE_BKeyword_1_0 = (Keyword)cSIDE_BEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOTHEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOTHBOTHKeyword_2_0 = (Keyword)cBOTHEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum XRelationSideEnum:
		//	SIDE_A | SIDE_B | BOTH;
		public EnumRule getRule() { return rule; }

		//SIDE_A | SIDE_B | BOTH
		public Alternatives getAlternatives() { return cAlternatives; }

		//SIDE_A
		public EnumLiteralDeclaration getSIDE_AEnumLiteralDeclaration_0() { return cSIDE_AEnumLiteralDeclaration_0; }

		//"SIDE_A"
		public Keyword getSIDE_ASIDE_AKeyword_0_0() { return cSIDE_ASIDE_AKeyword_0_0; }

		//SIDE_B
		public EnumLiteralDeclaration getSIDE_BEnumLiteralDeclaration_1() { return cSIDE_BEnumLiteralDeclaration_1; }

		//"SIDE_B"
		public Keyword getSIDE_BSIDE_BKeyword_1_0() { return cSIDE_BSIDE_BKeyword_1_0; }

		//BOTH
		public EnumLiteralDeclaration getBOTHEnumLiteralDeclaration_2() { return cBOTHEnumLiteralDeclaration_2; }

		//"BOTH"
		public Keyword getBOTHBOTHKeyword_2_0() { return cBOTHBOTHKeyword_2_0; }
	}
	
	private OseeDslElements pOseeDsl;
	private ImportElements pImport;
	private TerminalRule tSTRING;
	private TerminalRule tWHOLE_NUM_STR;
	private TerminalRule tHEX_INT;
	private QUALIFIED_NAMEElements pQUALIFIED_NAME;
	private OseeElementElements pOseeElement;
	private OseeTypeElements pOseeType;
	private XArtifactTypeElements pXArtifactType;
	private XAttributeTypeRefElements pXAttributeTypeRef;
	private XAttributeTypeElements pXAttributeType;
	private AttributeBaseTypeElements pAttributeBaseType;
	private XOseeEnumTypeElements pXOseeEnumType;
	private XOseeEnumEntryElements pXOseeEnumEntry;
	private XOseeEnumOverrideElements pXOseeEnumOverride;
	private OverrideOptionElements pOverrideOption;
	private AddEnumElements pAddEnum;
	private RemoveEnumElements pRemoveEnum;
	private XRelationTypeElements pXRelationType;
	private RelationMultiplicityEnumElements unknownRuleRelationMultiplicityEnum;
	private RelationOrderTypeElements pRelationOrderType;
	private CompareOpElements unknownRuleCompareOp;
	private XLogicOperatorElements unknownRuleXLogicOperator;
	private CONDITION_VALUEElements pCONDITION_VALUE;
	private MatchFieldElements unknownRuleMatchField;
	private ConditionElements pCondition;
	private SimpleConditionElements pSimpleCondition;
	private CompoundConditionElements pCompoundCondition;
	private XArtifactMatcherElements pXArtifactMatcher;
	private AccessContextElements pAccessContext;
	private HierarchyRestrictionElements pHierarchyRestriction;
	private AccessPermissionEnumElements unknownRuleAccessPermissionEnum;
	private ObjectRestrictionElements pObjectRestriction;
	private ArtifactMatchRestrictionElements pArtifactMatchRestriction;
	private ArtifactTypeRestrictionElements pArtifactTypeRestriction;
	private AttributeTypeRestrictionElements pAttributeTypeRestriction;
	private RelationTypeRestrictionElements pRelationTypeRestriction;
	private XRelationSideEnumElements unknownRuleXRelationSideEnum;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public OseeDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//OseeDsl:
	//	imports+=Import* (artifactTypes+=XArtifactType | relationTypes+=XRelationType | attributeTypes+=XAttributeType |
	//	enumTypes+=XOseeEnumType | enumOverrides+=XOseeEnumOverride)* artifactMatchRefs+=XArtifactMatcher*
	//	accessDeclarations+=AccessContext*;
	public OseeDslElements getOseeDslAccess() {
		return (pOseeDsl != null) ? pOseeDsl : (pOseeDsl = new OseeDslElements());
	}
	
	public ParserRule getOseeDslRule() {
		return getOseeDslAccess().getRule();
	}

	//Import:
	//	"import" importURI=STRING;
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//terminal STRING:
	//	"\"" ("\\" "\"" | !"\"")* "\"" | "\'" ("\\" "\'" | !"\'")* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal WHOLE_NUM_STR:
	//	"0".."9"+;
	public TerminalRule getWHOLE_NUM_STRRule() {
		return (tWHOLE_NUM_STR != null) ? tWHOLE_NUM_STR : (tWHOLE_NUM_STR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WHOLE_NUM_STR"));
	} 

	//terminal HEX_INT:
	//	"0x" ("A".."F" | "0".."9")+;
	public TerminalRule getHEX_INTRule() {
		return (tHEX_INT != null) ? tHEX_INT : (tHEX_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HEX_INT"));
	} 

	//QUALIFIED_NAME:
	//	ID ("." ID)*;
	public QUALIFIED_NAMEElements getQUALIFIED_NAMEAccess() {
		return (pQUALIFIED_NAME != null) ? pQUALIFIED_NAME : (pQUALIFIED_NAME = new QUALIFIED_NAMEElements());
	}
	
	public ParserRule getQUALIFIED_NAMERule() {
		return getQUALIFIED_NAMEAccess().getRule();
	}

	/////////////////////////////////////////
	////  OSEE TYPE MODEL                  //
	/////////////////////////////////////////
	//OseeElement:
	//	XOseeEnumOverride | OseeType;
	public OseeElementElements getOseeElementAccess() {
		return (pOseeElement != null) ? pOseeElement : (pOseeElement = new OseeElementElements());
	}
	
	public ParserRule getOseeElementRule() {
		return getOseeElementAccess().getRule();
	}

	//OseeType:
	//	XArtifactType | XRelationType | XAttributeType | XOseeEnumType;
	public OseeTypeElements getOseeTypeAccess() {
		return (pOseeType != null) ? pOseeType : (pOseeType = new OseeTypeElements());
	}
	
	public ParserRule getOseeTypeRule() {
		return getOseeTypeAccess().getRule();
	}

	//XArtifactType:
	//	abstract?="abstract"? "artifactType" name=STRING ("extends" superArtifactTypes+=[XArtifactType|STRING] (","
	//	superArtifactTypes+=[XArtifactType|STRING])*)? "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT
	//	validAttributeTypes+=XAttributeTypeRef* "}";
	public XArtifactTypeElements getXArtifactTypeAccess() {
		return (pXArtifactType != null) ? pXArtifactType : (pXArtifactType = new XArtifactTypeElements());
	}
	
	public ParserRule getXArtifactTypeRule() {
		return getXArtifactTypeAccess().getRule();
	}

	//XAttributeTypeRef:
	//	"attribute" validAttributeType=[XAttributeType|STRING] ("branchGuid" branchGuid=STRING)?;
	public XAttributeTypeRefElements getXAttributeTypeRefAccess() {
		return (pXAttributeTypeRef != null) ? pXAttributeTypeRef : (pXAttributeTypeRef = new XAttributeTypeRefElements());
	}
	
	public ParserRule getXAttributeTypeRefRule() {
		return getXAttributeTypeRefAccess().getRule();
	}

	//XAttributeType:
	//	"attributeType" name=STRING ("extends" baseAttributeType=AttributeBaseType) ("overrides"
	//	override=[XAttributeType|STRING])? "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT "dataProvider"
	//	dataProvider=("DefaultAttributeDataProvider" | "UriAttributeDataProvider" | QUALIFIED_NAME) "min" min=WHOLE_NUM_STR
	//	"max" max=(WHOLE_NUM_STR | "unlimited") ("taggerId" taggerId=("DefaultAttributeTaggerProvider" | QUALIFIED_NAME))?
	//	("enumType" enumType=[XOseeEnumType|STRING])? ("description" description=STRING)? ("defaultValue"
	//	defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}";
	public XAttributeTypeElements getXAttributeTypeAccess() {
		return (pXAttributeType != null) ? pXAttributeType : (pXAttributeType = new XAttributeTypeElements());
	}
	
	public ParserRule getXAttributeTypeRule() {
		return getXAttributeTypeAccess().getRule();
	}

	//AttributeBaseType:
	//	"BooleanAttribute" | "CompressedContentAttribute" | "DateAttribute" | "EnumeratedAttribute" | "FloatingPointAttribute"
	//	| "IntegerAttribute" | "JavaObjectAttribute" | "StringAttribute" | "WordAttribute" | QUALIFIED_NAME;
	public AttributeBaseTypeElements getAttributeBaseTypeAccess() {
		return (pAttributeBaseType != null) ? pAttributeBaseType : (pAttributeBaseType = new AttributeBaseTypeElements());
	}
	
	public ParserRule getAttributeBaseTypeRule() {
		return getAttributeBaseTypeAccess().getRule();
	}

	//XOseeEnumType:
	//	"oseeEnumType" name=STRING "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT enumEntries+=XOseeEnumEntry* "}";
	public XOseeEnumTypeElements getXOseeEnumTypeAccess() {
		return (pXOseeEnumType != null) ? pXOseeEnumType : (pXOseeEnumType = new XOseeEnumTypeElements());
	}
	
	public ParserRule getXOseeEnumTypeRule() {
		return getXOseeEnumTypeAccess().getRule();
	}

	//XOseeEnumEntry:
	//	"entry" name=STRING ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
	public XOseeEnumEntryElements getXOseeEnumEntryAccess() {
		return (pXOseeEnumEntry != null) ? pXOseeEnumEntry : (pXOseeEnumEntry = new XOseeEnumEntryElements());
	}
	
	public ParserRule getXOseeEnumEntryRule() {
		return getXOseeEnumEntryAccess().getRule();
	}

	//XOseeEnumOverride:
	//	"overrides enum" overridenEnumType=[XOseeEnumType|STRING] "{" inheritAll?="inheritAll"?
	//	overrideOptions+=OverrideOption* "}";
	public XOseeEnumOverrideElements getXOseeEnumOverrideAccess() {
		return (pXOseeEnumOverride != null) ? pXOseeEnumOverride : (pXOseeEnumOverride = new XOseeEnumOverrideElements());
	}
	
	public ParserRule getXOseeEnumOverrideRule() {
		return getXOseeEnumOverrideAccess().getRule();
	}

	//OverrideOption:
	//	AddEnum | RemoveEnum;
	public OverrideOptionElements getOverrideOptionAccess() {
		return (pOverrideOption != null) ? pOverrideOption : (pOverrideOption = new OverrideOptionElements());
	}
	
	public ParserRule getOverrideOptionRule() {
		return getOverrideOptionAccess().getRule();
	}

	//AddEnum:
	//	"add" enumEntry=STRING ordinal=WHOLE_NUM_STR? ("entryGuid" entryGuid=STRING)?;
	public AddEnumElements getAddEnumAccess() {
		return (pAddEnum != null) ? pAddEnum : (pAddEnum = new AddEnumElements());
	}
	
	public ParserRule getAddEnumRule() {
		return getAddEnumAccess().getRule();
	}

	//RemoveEnum:
	//	"remove" enumEntry=[XOseeEnumEntry|STRING];
	public RemoveEnumElements getRemoveEnumAccess() {
		return (pRemoveEnum != null) ? pRemoveEnum : (pRemoveEnum = new RemoveEnumElements());
	}
	
	public ParserRule getRemoveEnumRule() {
		return getRemoveEnumAccess().getRule();
	}

	//XRelationType:
	//	"relationType" name=STRING "{" "guid" typeGuid=STRING "uuid" uuid=HEX_INT "sideAName" sideAName=STRING
	//	"sideAArtifactType" sideAArtifactType=[XArtifactType|STRING] "sideBName" sideBName=STRING "sideBArtifactType"
	//	sideBArtifactType=[XArtifactType|STRING] "defaultOrderType" defaultOrderType=RelationOrderType "multiplicity"
	//	multiplicity=RelationMultiplicityEnum "}";
	public XRelationTypeElements getXRelationTypeAccess() {
		return (pXRelationType != null) ? pXRelationType : (pXRelationType = new XRelationTypeElements());
	}
	
	public ParserRule getXRelationTypeRule() {
		return getXRelationTypeAccess().getRule();
	}

	//enum RelationMultiplicityEnum:
	//	ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY;
	public RelationMultiplicityEnumElements getRelationMultiplicityEnumAccess() {
		return (unknownRuleRelationMultiplicityEnum != null) ? unknownRuleRelationMultiplicityEnum : (unknownRuleRelationMultiplicityEnum = new RelationMultiplicityEnumElements());
	}
	
	public EnumRule getRelationMultiplicityEnumRule() {
		return getRelationMultiplicityEnumAccess().getRule();
	}

	//RelationOrderType:
	//	"Lexicographical_Ascending" | "Lexicographical_Descending" | "Unordered" | ID;
	public RelationOrderTypeElements getRelationOrderTypeAccess() {
		return (pRelationOrderType != null) ? pRelationOrderType : (pRelationOrderType = new RelationOrderTypeElements());
	}
	
	public ParserRule getRelationOrderTypeRule() {
		return getRelationOrderTypeAccess().getRule();
	}

	/////////////////////////////////////////
	////  OSEE MATCH RULES //
	/////////////////////////////////////////
	//enum CompareOp:
	//	EQ | LIKE;
	public CompareOpElements getCompareOpAccess() {
		return (unknownRuleCompareOp != null) ? unknownRuleCompareOp : (unknownRuleCompareOp = new CompareOpElements());
	}
	
	public EnumRule getCompareOpRule() {
		return getCompareOpAccess().getRule();
	}

	//enum XLogicOperator:
	//	AND | OR;
	public XLogicOperatorElements getXLogicOperatorAccess() {
		return (unknownRuleXLogicOperator != null) ? unknownRuleXLogicOperator : (unknownRuleXLogicOperator = new XLogicOperatorElements());
	}
	
	public EnumRule getXLogicOperatorRule() {
		return getXLogicOperatorAccess().getRule();
	}

	//CONDITION_VALUE:
	//	WHOLE_NUM_STR | STRING;
	public CONDITION_VALUEElements getCONDITION_VALUEAccess() {
		return (pCONDITION_VALUE != null) ? pCONDITION_VALUE : (pCONDITION_VALUE = new CONDITION_VALUEElements());
	}
	
	public ParserRule getCONDITION_VALUERule() {
		return getCONDITION_VALUEAccess().getRule();
	}

	//enum MatchField:
	//	artifactName | artifactGuid | branchName | branchGuid;
	public MatchFieldElements getMatchFieldAccess() {
		return (unknownRuleMatchField != null) ? unknownRuleMatchField : (unknownRuleMatchField = new MatchFieldElements());
	}
	
	public EnumRule getMatchFieldRule() {
		return getMatchFieldAccess().getRule();
	}

	//Condition:
	//	SimpleCondition | CompoundCondition;
	public ConditionElements getConditionAccess() {
		return (pCondition != null) ? pCondition : (pCondition = new ConditionElements());
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}

	//SimpleCondition:
	//	field=MatchField op=CompareOp expression=STRING;
	public SimpleConditionElements getSimpleConditionAccess() {
		return (pSimpleCondition != null) ? pSimpleCondition : (pSimpleCondition = new SimpleConditionElements());
	}
	
	public ParserRule getSimpleConditionRule() {
		return getSimpleConditionAccess().getRule();
	}

	//CompoundCondition:
	//	"(" conditions+=SimpleCondition (operators+=XLogicOperator conditions+=SimpleCondition)+ ")";
	public CompoundConditionElements getCompoundConditionAccess() {
		return (pCompoundCondition != null) ? pCompoundCondition : (pCompoundCondition = new CompoundConditionElements());
	}
	
	public ParserRule getCompoundConditionRule() {
		return getCompoundConditionAccess().getRule();
	}

	//XArtifactMatcher:
	//	"artifactMatcher" name=STRING "where" conditions+=Condition (operators+=XLogicOperator conditions+=Condition)* ";";
	public XArtifactMatcherElements getXArtifactMatcherAccess() {
		return (pXArtifactMatcher != null) ? pXArtifactMatcher : (pXArtifactMatcher = new XArtifactMatcherElements());
	}
	
	public ParserRule getXArtifactMatcherRule() {
		return getXArtifactMatcherAccess().getRule();
	}

	/////////////////////////////////////////
	////  OSEE ACCESS MODEL                //
	/////////////////////////////////////////
	//AccessContext:
	//	"accessContext" name=STRING ("extends" superAccessContexts+=[AccessContext|STRING])? "{" "guid" guid=STRING ";"
	//	(accessRules+=ObjectRestriction | hierarchyRestrictions+=HierarchyRestriction)+ "}";
	public AccessContextElements getAccessContextAccess() {
		return (pAccessContext != null) ? pAccessContext : (pAccessContext = new AccessContextElements());
	}
	
	public ParserRule getAccessContextRule() {
		return getAccessContextAccess().getRule();
	}

	//HierarchyRestriction:
	//	"childrenOf" artifactMatcherRef=[XArtifactMatcher|STRING] "{" accessRules+=ObjectRestriction+ "}";
	public HierarchyRestrictionElements getHierarchyRestrictionAccess() {
		return (pHierarchyRestriction != null) ? pHierarchyRestriction : (pHierarchyRestriction = new HierarchyRestrictionElements());
	}
	
	public ParserRule getHierarchyRestrictionRule() {
		return getHierarchyRestrictionAccess().getRule();
	}

	//enum AccessPermissionEnum:
	//	ALLOW | DENY;
	public AccessPermissionEnumElements getAccessPermissionEnumAccess() {
		return (unknownRuleAccessPermissionEnum != null) ? unknownRuleAccessPermissionEnum : (unknownRuleAccessPermissionEnum = new AccessPermissionEnumElements());
	}
	
	public EnumRule getAccessPermissionEnumRule() {
		return getAccessPermissionEnumAccess().getRule();
	}

	//ObjectRestriction:
	//	ArtifactMatchRestriction | ArtifactTypeRestriction | RelationTypeRestriction | AttributeTypeRestriction;
	public ObjectRestrictionElements getObjectRestrictionAccess() {
		return (pObjectRestriction != null) ? pObjectRestriction : (pObjectRestriction = new ObjectRestrictionElements());
	}
	
	public ParserRule getObjectRestrictionRule() {
		return getObjectRestrictionAccess().getRule();
	}

	//ArtifactMatchRestriction:
	//	permission=AccessPermissionEnum "edit" "artifact" artifactMatcherRef=[XArtifactMatcher|STRING] ";";
	public ArtifactMatchRestrictionElements getArtifactMatchRestrictionAccess() {
		return (pArtifactMatchRestriction != null) ? pArtifactMatchRestriction : (pArtifactMatchRestriction = new ArtifactMatchRestrictionElements());
	}
	
	public ParserRule getArtifactMatchRestrictionRule() {
		return getArtifactMatchRestrictionAccess().getRule();
	}

	//ArtifactTypeRestriction:
	//	permission=AccessPermissionEnum "edit" "artifactType" artifactTypeRef=[XArtifactType|STRING] ";";
	public ArtifactTypeRestrictionElements getArtifactTypeRestrictionAccess() {
		return (pArtifactTypeRestriction != null) ? pArtifactTypeRestriction : (pArtifactTypeRestriction = new ArtifactTypeRestrictionElements());
	}
	
	public ParserRule getArtifactTypeRestrictionRule() {
		return getArtifactTypeRestrictionAccess().getRule();
	}

	//AttributeTypeRestriction:
	//	permission=AccessPermissionEnum "edit" "attributeType" attributeTypeRef=[XAttributeType|STRING] ("of" "artifactType"
	//	artifactTypeRef=[XArtifactType|STRING])? ";";
	public AttributeTypeRestrictionElements getAttributeTypeRestrictionAccess() {
		return (pAttributeTypeRestriction != null) ? pAttributeTypeRestriction : (pAttributeTypeRestriction = new AttributeTypeRestrictionElements());
	}
	
	public ParserRule getAttributeTypeRestrictionRule() {
		return getAttributeTypeRestrictionAccess().getRule();
	}

	//RelationTypeRestriction:
	//	permission=AccessPermissionEnum "edit" "relationType" relationTypeRef=[XRelationType|STRING]
	//	restrictedToSide=XRelationSideEnum ("artifact" artifactMatcherRef=[XArtifactMatcher|STRING])? ";";
	public RelationTypeRestrictionElements getRelationTypeRestrictionAccess() {
		return (pRelationTypeRestriction != null) ? pRelationTypeRestriction : (pRelationTypeRestriction = new RelationTypeRestrictionElements());
	}
	
	public ParserRule getRelationTypeRestrictionRule() {
		return getRelationTypeRestrictionAccess().getRule();
	}

	//enum XRelationSideEnum:
	//	SIDE_A | SIDE_B | BOTH;
	public XRelationSideEnumElements getXRelationSideEnumAccess() {
		return (unknownRuleXRelationSideEnum != null) ? unknownRuleXRelationSideEnum : (unknownRuleXRelationSideEnum = new XRelationSideEnumElements());
	}
	
	public EnumRule getXRelationSideEnumRule() {
		return getXRelationSideEnumAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
