Authors/Presenters: Ryan, Don and Jeff
Name:  The Cure for Your Disconnected Toolset Headache
Abstract:

If you are a tool developer, project lead, or anyone who works with a sprawling toolset then this talk is for you.  Many organizations loosely integrate tools using point-to-point data synchronization.  This is costly to create, impedes the flow of information through the development lifecycle and is difficult to maintain.  Applying a data-centric approach yields a more tightly integrated toolset.  

The Eclipse workbench provides a common mechanism for the integration of applications at the user interface level and the <a href="http://www.eclipse.org/osee">Open System Engineering Environment</a> (OSEE) builds upon this by providing a common mechanism for the integration of applications at the data level.  At the core of OSEE is an application framework which provides a powerful persistence layer allowing applications to utilize a common data model that is accessible to the entire toolset.

This tightly integrated environment includes applications built on the OSEE Application Framework such as the Action Tracking System (ATS), a full featured change management system, and Define, a powerful requirements and document management solution.  While these applications are already available in OSEE, new applications can be developed to share the same data model.

--

If you are a tool developer, project lead, or anyone who works with a sprawling toolset then this talk is for you.  The Eclipse workbench provides a common mechanism for the integration of applications at the user interface level and Open System Engineering Environment (OSEE) provides a common mechanism for the integration of applications at the data level.  Many organizations loosely integrate tools using point-to-point data synchronization and this impedes the flow of information through the development lifecycle.  Where as, applying a data-centric approach yields a much more tightly integrated toolset.  Architected around this insight, the OSEE Application Framework provides a powerful persistence layer allowing applications to utilize a common data model that is accessible to the entire toolset.

OSEE is an open source project under the Eclipse Technology Project being developed by Boeing and other large system integrators in both the avionics and automotive industries.  This tightly integrated environment includes applications built on the OSEE Application Framework such as the Action Tracking System (ATS) and Define which is a requirements and process management solution.


-- Details

Each program or business that develops systems and software is currently required to assemble a wide array of software products to provide piecemeal capabilities necessary for completing different stages of the engineering lifecycle. Once installed, the daunting task of configuring and gluing them together begins. After years of effort, the program may have a toolset that is adequate for its current needs, but is ill-suited for growth and is far from optimized. In addition, the resulting tools are disconnected, sporadically maintained, and use an overwhelming array of disjointed user interfaces to access partially redundant data. Additionally, in the case of large programs or document-demanding customers like the US Government, such a toolset can often carry with it multi-million dollar software licensing, customization, configuration, and maintenance costs.

Eclipse has solved half of this problem by presented the capability to purchase and develop a set of tools that can be plugged in to a common framework.  This framwork gives many common services to both the developer and the end user.  It is now easier than ever to "integrate" a set of tools.  But, if the desire is true integration that provides cost savings, the problem of the data must be addressed.

Recently submitted and approved as an Eclipse project, The Open System Engineering Environment (OSEE) is being developed with a strong focus on the data.  At the core of OSEE is an Application Framework that includes a powerful version controlled, object database that enables applications to persist their data in a simple model of only three main objects: Artifacts, Attributes and Relations.  This enables applications to share not only the user interface, but the data.  Software design created in a modeling application can be stored and related directly to the system and subsystem requirements which are stored and related to the source code that implements it and the test cases that verify it.  

--
Audience
	Tool developers, Tech-leads and project managers or anyone who uses to large tools suites
	

Thoughts to be considered:
Delivery of open source DB and OSEE to customer instead of documents
OSEE provides to data what Eclipse provides to UI

- History of Apache program at Boeing
- Reasearch into DBs
- Tight integration / vs loose
- Delivery of open source DB and OSEE to customer instead of documents
- Simplicity of Data (Artifact, Relation, Attribute, Branch)
- Dynamic object db versus static relational
- Version controlled
- Configuration Managed
- Generic Editors / Viewers (cause generic data model)
- Extensible enought to create Specific editors /viewers (ATS)
- Eclipse based
- OSEE is open source - collaboration (Universities / etc)
- Scalability - Small to Enterprise use
- Demo
   - Architecture diagram
   - ATS Workflow
   - Skywalker
   - Artifact Editor
   - ATS Editor
   - Artifact Explorer
