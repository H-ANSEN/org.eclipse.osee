Authors/Presenters: Don and Andy
Name:  Top 10 deployment secrets they don't want you to know
Abstract:

If you are an application developer and think the hardest thing you have to do is develop the application, this talk is for you.  Determining requirements, architecting, developing and testing applications all have their obstacles and pitfalls, but they're nothing compared to some of the challenges that you will have with deployment and support.  This talk will focus on lessons learned from deploying OSEE to over 300 users in development of the Boeing Longbow Apache AH-64 Attack Helicopter.  

<a href="http://www.eclipse.org/osee">Open System Engineering Environment</a> (OSEE), is built on the OSEE Application Framework that was developed as a data-centric complement to the Eclipse platform and allows applications that extend Eclipse to go one step further and share a common data model.  On this framework was built two main applications, Define, a requirements and document management solution, and the Action Tracking System, a tightly-integrated problem change request system.

---

15. Don't deploy then leave for EclipseCon - Don't be the one left behind
1. Eclipse update site for quick turn-around releases - It wasn't meant for sprial development
2. Multi-layered system of FAQ, Help, Presentations and Screencasts - You're users still won't be happy
3. Training - Screencasts, Hands On and Mentoring
4. ATS everything, then sort it out
5. Users Group Meeting
6. Prioritization Meeting
7. Release cycle 3-1-1 (3 wks of work, 1 wk of integ/test, 1 wk of test)
8. Key Users == Happy Users
9. Use what you develop
10. Branching and Merging
11. After >3 of same user reported problems, code the problem away
12. Build the workflow into the application (process free)
13. General purpose over specific
14. Selling the concept/tool
16. Non-eclipse users using and eclipse based integrated environment

The Open System Engineering Environment (OSEE), an Eclipse project, is built on the OSEE Application Framework that was developed as a data-centric complement to the Eclipse platform and allows applications that extend Eclipse to go one step further and share the data model.  On this framework was built two main applications, Define, a requirements and document management solution, and the Action Tracking System, a tightly-integrated problem change request system.

Top 10 deployment secrets they don't want you to know [Other]
"Long Talk" - Don and Andy
	supporting large number of users
	User experience and usability (HCI)
	lesson about non-sw developers using an eclipse based product
	general purpose is more complicated for the user than a limited scope tool
	Escape from processes
		(build workflow into the tool)
	how do you encourage adoption of new tool
	don't deploy and then leave for EclipseCon

