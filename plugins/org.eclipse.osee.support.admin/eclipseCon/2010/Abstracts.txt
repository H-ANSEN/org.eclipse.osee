What do we do with all that data?
https://www.eclipsecon.org/submissions/2010/view_talk.php?id=1488

Engineering complex systems requires the continuous process of creating, decomposing, changing, relating and accessing data.  From the highest customer requirements to the customer deliverables, the storage and management of engineering lifecycle data can be the key to success or a single point of failure.  In addition, efficiently capturing, storing and retrieving this information by anyone at anytime can mean the difference between the need for a small agile staff or an army of engineers.  And last, the ability to easily and clearly integrate your processes and workflows through the tools will result in decreased need for maintenance and training of complex processes.

The Open System Engineering Environment (OSEE) project provides solutions to these issues by integrating the Action Tracking System (ATS) into its integrated data and user interface engineering lifecycle tool.  This high powered change tracking system can manage any number of teams (designers, coder, qualification engineers, IT and facilities) with their workflows (ranging from simple to complex) and relate them to the requirements, design, code, test and deliverables that are stored and change managed within, or external, to OSEE.  ATS also provides integrated project tracking and simplified metrics rollup to allow metrics to be calculated at anytime on any subset of change requests.

This talk will describe how this approach has helped the development of the Open System Engineering Environment itself and the avionics software for the Boeing Longbow Apache AH-64 Attack Helicopter and how the use of these principles can greatly improve any lifecycle engineering toolset.

---------------------------------------

The users don't really know what they want!
https://www.eclipsecon.org/submissions/2010/view_talk.php?id=1490

Creating and deploying applications is difficult in any arena, but if you think the hardest part is the technology, you're sadly mistaken.  This talk is for anyone getting started in application development using Eclipse.  We'll talk about experiences in developing OSEE, the Open System Engineering Environment, and deploying it to a large group of users.  From keeping the interface as simple as possible to ensuring you have a comprehensive and repeatable build/test suite, these are some points you won't want to miss.


2009
<a href="https://www.eclipsecon.org/submissions/2009/view_talk.php?id=484">Developing High Integrity Software</a>
<a href="https://www.eclipsecon.org/submissions/2009/view_talk.php?id=671">Improved Engineering Through Integrated Workflows and Data Management</a>

2010
OSEE and Zytek Automotive Limited
OSGI, distributed servers

---------------------------------------

Xtext and GEF deliver editors for the Open System Engineering Environment

See and hear how Xtext and GEF have been employed in an engineering environment used to develop complex mission/safety-critical systems.
This talk will share a development team's experience and lessons learned from leveraging Eclipse modeling in a production environment.

Xtext is a framework for development domain specific languages (DSLs) and the generation of corresponding textual editors and the Graphical Editing Framework (GEF)
supports the creation of 2D graphical editors for Eclipse.   The Open System Engineering Environment (OSEE) project provides a tightly integrated environment
supporting lean principles across a product's full life-cycle in the context of an overall systems engineering approach.

---------------------------------------
https://www.eclipsecon.org/submissions/2010/view_talk.php?id=1511