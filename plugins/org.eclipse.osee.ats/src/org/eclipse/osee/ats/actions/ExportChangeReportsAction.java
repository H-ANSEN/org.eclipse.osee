/*******************************************************************************
 * Copyright (c) 2004, 2007 Boeing.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Boeing - initial API and implementation
 *******************************************************************************/
package org.eclipse.osee.ats.actions;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.jface.action.Action;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.osee.ats.artifact.AtsAttributeTypes;
import org.eclipse.osee.ats.artifact.TeamWorkFlowArtifact;
import org.eclipse.osee.ats.internal.AtsPlugin;
import org.eclipse.osee.ats.util.AtsBranchManager;
import org.eclipse.osee.ats.world.WorldEditor;
import org.eclipse.osee.framework.core.enums.CoreBranches;
import org.eclipse.osee.framework.core.exception.OseeCoreException;
import org.eclipse.osee.framework.core.exception.OseeStateException;
import org.eclipse.osee.framework.core.model.Branch;
import org.eclipse.osee.framework.core.model.TransactionRecord;
import org.eclipse.osee.framework.logging.OseeLevel;
import org.eclipse.osee.framework.logging.OseeLog;
import org.eclipse.osee.framework.skynet.core.artifact.Artifact;
import org.eclipse.osee.framework.skynet.core.artifact.search.ArtifactQuery;
import org.eclipse.osee.framework.skynet.core.change.Change;
import org.eclipse.osee.framework.skynet.core.revision.ChangeManager;
import org.eclipse.osee.framework.skynet.core.transaction.TransactionManager;
import org.eclipse.osee.framework.skynet.core.types.IArtifact;
import org.eclipse.osee.framework.ui.skynet.FrameworkImage;
import org.eclipse.osee.framework.ui.skynet.commandHandlers.change.ViewWordChangeReportHandler;
import org.eclipse.osee.framework.ui.swt.ImageManager;

/**
 * @author Donald G. Dunne
 */
public class ExportChangeReportsAction extends Action {
   private final WorldEditor worldEditor;
   private final List<TeamWorkFlowArtifact> workflows = new ArrayList<TeamWorkFlowArtifact>();
   private final boolean reverse = true;

   public ExportChangeReportsAction(WorldEditor worldEditor) {
      setText("Export Change Report(s)");
      setImageDescriptor(getImageDescriptor());
      this.worldEditor = worldEditor;
      workflows.clear();
   }

   public List<TeamWorkFlowArtifact> getWorkflows() throws OseeCoreException {
      Collection<String> dontCreate =
            Arrays.asList(new String[] {"10083", "10255", "10267", "10703", "10773", "10783", "10903", "11041",
                  "11090", "11123", "11127", "11278", "11288", "11355", "11389", "11392", "11411", "11438", "11439",
                  "11440", "11460", "11465", "11571", "11574", "11649", "11733", "11819", "11822", "11859", "11925",
                  "11967", "12111", "8992", "9176", "9311", "9342", "9343", "9344", "9345", "9346", "9347", "9417",
                  "9418", "9422", "9430", "9445", "9463", "9484", "9492", "9534", "9656", "9927", "9997"});

      Collection<String> legacyIds =
            Arrays.asList(new String[] {"10001", "10002", "10003", "10004", "10005", "10006", "10007", "10012",
                  "10022", "10030", "10032", "10034", "10036", "10039", "10040", "10041", "10049", "10055", "10056",
                  "10060", "10061", "10064", "10067", "10068", "10069", "10075", "10080", "10083", "10087", "10091",
                  "10102", "10103", "10105", "10114", "10121", "10122", "10134", "10138", "10181", "10184", "10194",
                  "10202", "10204", "10206", "10208", "10218", "10219", "10237", "10238", "10242", "10245", "10246",
                  "10255", "10264", "10265", "10267", "10275", "10278", "10281", "10284", "10290", "10297", "10300",
                  "10302", "10306", "10307", "10315", "10317", "10321", "10323", "10324", "10326", "10329", "10332",
                  "10333", "10335", "10342", "10343", "10345", "10346", "10350", "10351", "10366", "10369", "10372",
                  "10375", "10378", "10381", "10382", "10383", "10391", "10392", "10399", "10406", "10409", "10415",
                  "10418", "10420", "10421", "10423", "10428", "10429", "10430", "10434", "10439", "10442", "10444",
                  "10451", "10468", "10471", "10474", "10477", "10484", "10486", "10490", "10494", "10496", "10499",
                  "10501", "10502", "10504", "10505", "10509", "10510", "10512", "10513", "10515", "10520", "10522",
                  "10523", "10524", "10525", "10527", "10528", "10529", "10530", "10531", "10532", "10533", "10534",
                  "10535", "10536", "10537", "10538", "10539", "10540", "10541", "10542", "10543", "10544", "10545",
                  "10546", "10547", "10548", "10549", "10550", "10551", "10552", "10553", "10554", "10555", "10556",
                  "10557", "10558", "10559", "10560", "10561", "10565", "10569", "10573", "10574", "10575", "10576",
                  "10577", "10579", "10582", "10583", "10584", "10585", "10586", "10589", "10602", "10603", "10604",
                  "10605", "10606", "10608", "10609", "10610", "10611", "10612", "10613", "10614", "10615", "10616",
                  "10617", "10618", "10619", "10621", "10623", "10625", "10626", "10627", "10628", "10629", "10634",
                  "10636", "10638", "10639", "10640", "10641", "10642", "10643", "10644", "10646", "10647", "10655",
                  "10660", "10661", "10663", "10664", "10670", "10671", "10672", "10673", "10674", "10675", "10677",
                  "10678", "10683", "10684", "10685", "10686", "10687", "10688", "10693", "10694", "10695", "10696",
                  "10697", "10699", "10703", "10707", "10713", "10714", "10718", "10722", "10723", "10724", "10728",
                  "10729", "10730", "10742", "10743", "10745", "10746", "10749", "10750", "10751", "10752", "10753",
                  "10773", "10776", "10778", "10779", "10783", "10786", "10787", "10788", "10789", "10790", "10791",
                  "10795", "10797", "10798", "10799", "10805", "10806", "10807", "10808", "10809", "10810", "10811",
                  "10812", "10813", "10814", "10815", "10816", "10817", "10818", "10819", "10820", "10821", "10822",
                  "10823", "10824", "10825", "10826", "10827", "10828", "10829", "10830", "10831", "10832", "10833",
                  "10834", "10835", "10836", "10837", "10838", "10839", "10840", "10841", "10843", "10846", "10848",
                  "10850", "10851", "10852", "10853", "10855", "10857", "10859", "10860", "10861", "10863", "10864",
                  "10869", "10870", "10895", "10898", "10903", "10906", "10909", "10910", "10913", "10915", "10919",
                  "10920", "10922", "10926", "10931", "10933", "10935", "10936", "10938", "10939", "10940", "10941",
                  "10947", "10950", "10952", "10955", "10956", "10958", "10961", "10962", "10963", "10964", "10965",
                  "10967", "10968", "10969", "10981", "10987", "10993", "10994", "10995", "10996", "10997", "10998",
                  "10999", "11000", "11001", "11002", "11003", "11005", "11007", "11013", "11014", "11021", "11022",
                  "11027", "11028", "11029", "11030", "11031", "11032", "11033", "11039", "11041", "11049", "11050",
                  "11055", "11056", "11058", "11060", "11061", "11065", "11068", "11069", "11070", "11071", "11074",
                  "11075", "11078", "11079", "11083", "11084", "11085", "11087", "11089", "11090", "11091", "11092",
                  "11108", "11117", "11118", "11123", "11127", "11132", "11152", "11157", "11158", "11159", "11162",
                  "11164", "11165", "11166", "11168", "11169", "11170", "11173", "11174", "11175", "11178", "11179",
                  "11180", "11181", "11182", "11185", "11189", "11190", "11192", "11204", "11208", "11209", "11211",
                  "11214", "11215", "11216", "11217", "11222", "11227", "11230", "11232", "11235", "11236", "11237",
                  "11238", "11240", "11242", "11243", "11247", "11252", "11254", "11258", "11259", "11263", "11264",
                  "11278", "11283", "11284", "11288", "11289", "11301", "11302", "11304", "11305", "11308", "11310",
                  "11312", "11318", "11319", "11326", "11355", "11362", "11363", "11369", "11372", "11376", "11383",
                  "11389", "11392", "11407", "11411", "11420", "11435", "11438", "11439", "11440", "11460", "11465",
                  "11537", "11539", "11541", "11551", "11552", "11564", "11568", "11570", "11571", "11574", "11583",
                  "11584", "11585", "11597", "11622", "11623", "11624", "11625", "11626", "11627", "11628", "11629",
                  "11630", "11631", "11632", "11640", "11641", "11642", "11643", "11644", "11649", "11651", "11654",
                  "11655", "11656", "11657", "11659", "11660", "11661", "11663", "11664", "11666", "11667", "11668",
                  "11669", "11670", "11671", "11672", "11673", "11674", "11675", "11676", "11677", "11679", "11687",
                  "11688", "11690", "11691", "11692", "11693", "11702", "11703", "11706", "11733", "11738", "11745",
                  "11771", "11772", "11774", "11780", "11819", "11820", "11821", "11822", "11824", "11847", "11856",
                  "11857", "11859", "11875", "11880", "11881", "11882", "11887", "11900", "11901", "11907", "11908",
                  "11909", "11911", "11912", "11914", "11918", "11922", "11925", "11926", "11930", "11932", "11933",
                  "11938", "11939", "11943", "11947", "11949", "11953", "11954", "11957", "11958", "11961", "11962",
                  "11965", "11967", "11968", "11970", "11974", "11976", "11979", "11981", "11984", "11985", "11988",
                  "11992", "11996", "11999", "12004", "12005", "12007", "12009", "12019", "12020", "12022", "12023",
                  "12032", "12051", "12052", "12059", "12060", "12061", "12065", "12068", "12073", "12077", "12084",
                  "12085", "12086", "12094", "12098", "12100", "12102", "12104", "12106", "12111", "12112", "12113",
                  "12117", "12119", "12134", "12141", "12142", "12143", "12155", "12162", "12164", "12170", "12181",
                  "12206", "12208", "12211", "12212", "12213", "5812", "6126", "6127", "6156", "6162", "6243", "6282",
                  "6283", "6284", "6285", "6286", "6287", "6288", "6289", "6290", "6291", "6292", "6293", "6294",
                  "6295", "6296", "6297", "6306", "6308", "6318", "6351", "6352", "6355", "6358", "6424", "6484",
                  "6574", "6579", "6583", "6599", "6601", "6603", "6665", "6666", "6668", "6701", "6703", "6719",
                  "6720", "6721", "6722", "6724", "6726", "6728", "6736", "6737", "6751", "6752", "6759", "6783",
                  "6786", "6787", "6788", "6799", "6803", "6810", "6812", "6813", "6816", "6818", "6826", "6830",
                  "6831", "6832", "6839", "6868", "6873", "6881", "6887", "6889", "6905", "6908", "6911", "6914",
                  "6922", "6933", "6937", "6945", "6969", "6970", "6972", "6994", "6998", "7011", "7025", "7032",
                  "7041", "7063", "7088", "7094", "7116", "7130", "7152", "7154", "7155", "7156", "7157", "7179",
                  "7219", "7220", "7223", "7224", "7225", "7227", "7228", "7229", "7230", "7231", "7232", "7233",
                  "7234", "7235", "7236", "7237", "7238", "7239", "7240", "7241", "7263", "7272", "7286", "7300",
                  "7318", "7345", "7350", "7367", "7368", "7371", "7376", "7407", "7444", "7481", "7484", "7485",
                  "7486", "7489", "7491", "7492", "7493", "7496", "7497", "7498", "7499", "7500", "7503", "7504",
                  "7505", "7514", "7518", "7520", "7533", "7539", "7562", "7566", "7567", "7569", "7570", "7571",
                  "7572", "7573", "7574", "7576", "7577", "7579", "7580", "7581", "7582", "7583", "7584", "7604",
                  "7605", "7606", "7607", "7608", "7609", "7610", "7625", "7626", "7630", "7638", "7639", "7665",
                  "7668", "7672", "7673", "7674", "7675", "7684", "7687", "7698", "7700", "7701", "7703", "7704",
                  "7705", "7708", "7710", "7713", "7714", "7716", "7718", "7720", "7721", "7722", "7727", "7729",
                  "7735", "7736", "7737", "7740", "7743", "7744", "7749", "7752", "7753", "7755", "7756", "7757",
                  "7759", "7772", "7773", "7784", "7785", "7805", "7806", "7811", "7812", "7829", "7842", "7847",
                  "7849", "7853", "7867", "7877", "7884", "7894", "7896", "7899", "7909", "7934", "7936", "7938",
                  "7940", "7941", "7945", "7949", "7952", "7956", "7963", "7964", "7966", "7976", "7983", "7985",
                  "7986", "7995", "8000", "8013", "8015", "8016", "8017", "8018", "8023", "8024", "8025", "8026",
                  "8027", "8029", "8032", "8033", "8036", "8038", "8049", "8062", "8063", "8064", "8076", "8103",
                  "8104", "8106", "8107", "8108", "8111", "8112", "8114", "8115", "8116", "8118", "8125", "8139",
                  "8148", "8151", "8152", "8155", "8158", "8159", "8163", "8164", "8165", "8166", "8167", "8168",
                  "8169", "8171", "8179", "8183", "8185", "8190", "8191", "8195", "8198", "8199", "8200", "8201",
                  "8204", "8210", "8211", "8250", "8251", "8252", "8253", "8255", "8280", "8290", "8293", "8302",
                  "8304", "8309", "8311", "8312", "8315", "8321", "8328", "8335", "8339", "8342", "8343", "8344",
                  "8345", "8346", "8349", "8350", "8351", "8356", "8357", "8358", "8360", "8363", "8365", "8366",
                  "8371", "8374", "8375", "8376", "8383", "8384", "8392", "8394", "8396", "8397", "8398", "8400",
                  "8401", "8402", "8405", "8406", "8409", "8410", "8411", "8412", "8413", "8414", "8415", "8416",
                  "8417", "8418", "8419", "8421", "8423", "8424", "8428", "8429", "8431", "8432", "8433", "8434",
                  "8435", "8436", "8437", "8444", "8445", "8448", "8449", "8454", "8457", "8458", "8459", "8460",
                  "8461", "8463", "8464", "8465", "8468", "8469", "8471", "8474", "8475", "8477", "8479", "8480",
                  "8481", "8482", "8483", "8484", "8485", "8486", "8488", "8489", "8490", "8491", "8497", "8500",
                  "8502", "8503", "8511", "8514", "8525", "8534", "8535", "8538", "8539", "8542", "8543", "8545",
                  "8547", "8548", "8549", "8551", "8556", "8559", "8562", "8564", "8566", "8570", "8573", "8577",
                  "8578", "8580", "8581", "8586", "8587", "8588", "8592", "8595", "8596", "8597", "8600", "8601",
                  "8603", "8604", "8606", "8610", "8613", "8614", "8616", "8623", "8625", "8626", "8628", "8629",
                  "8631", "8634", "8635", "8636", "8637", "8640", "8641", "8645", "8646", "8647", "8648", "8649",
                  "8650", "8653", "8656", "8659", "8661", "8664", "8679", "8692", "8695", "8697", "8699", "8701",
                  "8703", "8705", "8706", "8708", "8709", "8710", "8715", "8716", "8718", "8721", "8724", "8731",
                  "8732", "8755", "8763", "8764", "8765", "8768", "8773", "8774", "8776", "8777", "8782", "8784",
                  "8785", "8786", "8790", "8794", "8795", "8858", "8859", "8884", "8885", "8886", "8887", "8893",
                  "8895", "8896", "8897", "8898", "8900", "8901", "8926", "8929", "8934", "8943", "8944", "8950",
                  "8951", "8954", "8956", "8957", "8958", "8961", "8962", "8964", "8965", "8970", "8971", "8978",
                  "8979", "8982", "8983", "8985", "8987", "8990", "8992", "8997", "9000", "9002", "9005", "9006",
                  "9011", "9013", "9016", "9023", "9027", "9028", "9029", "9030", "9031", "9032", "9033", "9034",
                  "9036", "9038", "9040", "9043", "9044", "9045", "9050", "9051", "9057", "9105", "9111", "9113",
                  "9117", "9124", "9129", "9133", "9134", "9136", "9137", "9138", "9139", "9140", "9141", "9143",
                  "9144", "9145", "9146", "9156", "9158", "9159", "9160", "9167", "9170", "9171", "9176", "9177",
                  "9178", "9179", "9181", "9191", "9194", "9196", "9197", "9201", "9206", "9207", "9208", "9214",
                  "9217", "9218", "9220", "9221", "9222", "9224", "9235", "9236", "9237", "9239", "9240", "9241",
                  "9242", "9243", "9244", "9245", "9246", "9247", "9248", "9249", "9250", "9253", "9254", "9255",
                  "9256", "9257", "9260", "9261", "9263", "9264", "9283", "9288", "9293", "9306", "9309", "9310",
                  "9311", "9320", "9321", "9324", "9325", "9326", "9327", "9328", "9329", "9332", "9334", "9342",
                  "9343", "9344", "9345", "9346", "9347", "9414", "9415", "9416", "9417", "9418", "9422", "9430",
                  "9439", "9445", "9447", "9451", "9463", "9484", "9488", "9492", "9498", "9527", "9528", "9530",
                  "9532", "9534", "9535", "9536", "9537", "9559", "9560", "9562", "9563", "9570", "9573", "9577",
                  "9578", "9580", "9582", "9586", "9588", "9590", "9596", "9598", "9599", "9600", "9603", "9604",
                  "9609", "9613", "9614", "9615", "9616", "9617", "9618", "9619", "9621", "9622", "9623", "9625",
                  "9635", "9636", "9641", "9642", "9643", "9650", "9656", "9658", "9665", "9667", "9668", "9669",
                  "9674", "9675", "9678", "9680", "9691", "9694", "9708", "9710", "9711", "9713", "9714", "9715",
                  "9716", "9723", "9742", "9743", "9745", "9746", "9747", "9753", "9759", "9780", "9792", "9795",
                  "9797", "9809", "9810", "9811", "9814", "9817", "9818", "9833", "9836", "9870", "9905", "9913",
                  "9915", "9925", "9926", "9927", "9931", "9938", "9952", "9955", "9956", "9958", "9970", "9971",
                  "9972", "9975", "9988", "9991", "9992", "9993", "9994", "9995", "9996", "9997", "9999"});

      if (workflows.isEmpty()) {
         List<Artifact> artifacts =
               ArtifactQuery.getArtifactListFromAttributeValues(AtsAttributeTypes.LegacyPCRId, legacyIds,
                     CoreBranches.COMMON, legacyIds.size());
         for (Artifact artifact : artifacts) {
            if (artifact.getArtifactType().getGuid().equals("AAMFDjZ1UVAQTXHk2GgA")) {
               TeamWorkFlowArtifact teamWorkflow = (TeamWorkFlowArtifact) artifact;
               String legacyId = teamWorkflow.getWorldViewLegacyPCR();
               if (!dontCreate.contains(legacyId)) {
                  workflows.add(teamWorkflow);
               }
            }
         }
         Collections.sort(workflows);
         if (reverse) {
            Collections.reverse(workflows);
         }
      }
      return workflows;
      //return worldEditor.getWorldComposite().getXViewer().getSelectedTeamWorkflowArtifacts();
   }

   @Override
   public void run() {

      try {
         export();
      } catch (OseeCoreException ex) {
         OseeLog.log(AtsPlugin.class, OseeLevel.SEVERE_POPUP, ex);
      }
   }

   private TransactionRecord pickTransaction(IArtifact workflow) throws OseeCoreException {
      int minTransactionId = -1;
      for (TransactionRecord transaction : TransactionManager.getCommittedArtifactTransactionIds(workflow)) {
         if (minTransactionId < transaction.getId()) {
            minTransactionId = transaction.getId();
         }
      }
      if (minTransactionId == -1) {
         throw new OseeStateException("no transaction records found for " + workflow);
      }
      return TransactionManager.getTransactionId(minTransactionId);
   }

   private void export() throws OseeCoreException {
      ViewWordChangeReportHandler handler = new ViewWordChangeReportHandler();

      for (TeamWorkFlowArtifact workflow : getWorkflows()) {

         AtsBranchManager atsBranchMgr = workflow.getBranchMgr();
         IProgressMonitor monitor = new NullProgressMonitor();
         Collection<Change> changes = null;
         if (atsBranchMgr.isCommittedBranchExists()) {
            changes = ChangeManager.getChangesPerTransaction(pickTransaction(workflow), monitor);
         } else {
            Branch branch = atsBranchMgr.getWorkingBranch();
            if (atsBranchMgr.isWorkingBranchInWork() && !branch.getBranchType().isBaselineBranch()) {
               changes = ChangeManager.getChangesPerBranch(branch, monitor);
            }
         }
         if (changes != null && changes.size() < 4000) {
            handler.viewWordChangeReport(changes, true, workflow.getSoleAttributeValueAsString(
                  AtsAttributeTypes.LegacyPCRId, null));
         }
      }
   }

   @Override
   public ImageDescriptor getImageDescriptor() {
      return ImageManager.getImageDescriptor(FrameworkImage.EXPORT_DATA);
   }

   public void updateEnablement() throws OseeCoreException {
      setEnabled(getWorkflows().size() > 0);
   }
}
