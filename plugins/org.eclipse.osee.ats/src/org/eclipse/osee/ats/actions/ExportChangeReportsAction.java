/*******************************************************************************
 * Copyright (c) 2004, 2007 Boeing.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Boeing - initial API and implementation
 *******************************************************************************/
package org.eclipse.osee.ats.actions;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.jface.action.Action;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.osee.ats.artifact.AtsAttributeTypes;
import org.eclipse.osee.ats.artifact.TeamWorkFlowArtifact;
import org.eclipse.osee.ats.internal.AtsPlugin;
import org.eclipse.osee.ats.util.AtsBranchManager;
import org.eclipse.osee.ats.world.WorldEditor;
import org.eclipse.osee.framework.core.enums.CoreBranches;
import org.eclipse.osee.framework.core.exception.OseeCoreException;
import org.eclipse.osee.framework.core.exception.OseeStateException;
import org.eclipse.osee.framework.core.model.Branch;
import org.eclipse.osee.framework.core.model.TransactionRecord;
import org.eclipse.osee.framework.core.operation.AbstractOperation;
import org.eclipse.osee.framework.core.operation.IOperation;
import org.eclipse.osee.framework.core.operation.Operations;
import org.eclipse.osee.framework.logging.OseeLog;
import org.eclipse.osee.framework.skynet.core.artifact.Artifact;
import org.eclipse.osee.framework.skynet.core.artifact.search.ArtifactQuery;
import org.eclipse.osee.framework.skynet.core.change.Change;
import org.eclipse.osee.framework.skynet.core.revision.ChangeManager;
import org.eclipse.osee.framework.skynet.core.transaction.TransactionManager;
import org.eclipse.osee.framework.skynet.core.types.IArtifact;
import org.eclipse.osee.framework.ui.skynet.FrameworkImage;
import org.eclipse.osee.framework.ui.skynet.render.word.WordChangeReportOperation;
import org.eclipse.osee.framework.ui.swt.ImageManager;

/**
 * @author Donald G. Dunne
 */
public class ExportChangeReportsAction extends Action {
   private final WorldEditor worldEditor;
   private final boolean reverse = true;

   public ExportChangeReportsAction(WorldEditor worldEditor) {
      setText("Export Change Report(s)");
      setImageDescriptor(getImageDescriptor());
      this.worldEditor = worldEditor;
   }

   public Collection<TeamWorkFlowArtifact> getWorkflows() throws OseeCoreException {
      if (true) {
         Collection<String> dontCreate =
               Arrays.asList(new String[] {});

         Collection<String> legacyIds =
               Arrays.asList(new String[] {"8500", "8502", "8503", "8511", "8514", "8525", "8534", "8535", "8538",
                     "8539", "8542", "8543", "8545", "8547", "8548", "8549", "8551", "8556", "8559", "8564", "8566",
                     "8570", "8573", "8577", "8578", "8580", "8581", "8586", "8587", "8588", "8592", "8595", "8596",
                     "8597", "8600", "8601", "8603", "8604", "8606", "8610", "8613", "8614", "8616", "8623", "8625",
                     "8626", "8628", "8629", "8634", "8635", "8636", "8637", "8640", "8641", "8645", "8646", "8647",
                     "8648", "8649", "8650", "8653", "8656", "8659", "8661", "8664", "8679", "8684", "8685", "8686",
                     "8687", "8688", "8689", "8692", "8694", "8695", "8697", "8699", "8701", "8703", "8705", "8706",
                     "8708", "8709", "8710", "8715", "8716", "8718", "8721", "8724", "8731", "8732", "8755", "8763",
                     "8764", "8765", "8768", "8773", "8774", "8776", "8777", "8782", "8784", "8785", "8786", "8790",
                     "8794", "8795", "8798", "8800", "8804", "8806", "8807", "8808", "8810", "8816", "8822", "8858",
                     "8859", "8884", "8885", "8886", "8887", "8893", "8895", "8896", "8897", "8898", "8900", "8901",
                     "8926", "8929", "8934", "8943", "8944", "8950", "8951", "8954", "8957", "8961", "8962", "8964",
                     "8965", "8970", "8971", "8978", "8979", "8982", "8983", "8985", "8987", "8990", "8997", "9000",
                     "9002", "9005", "9006", "9011", "9013", "9016", "9020", "9023", "9027", "9028", "9029", "9030",
                     "9031", "9032", "9034", "9036", "9038", "9040", "9043", "9044", "9045", "9050", "9051", "9057",
                     "9105", "9111", "9112", "9113", "9117", "9123", "9124", "9125", "9129", "9130", "9131", "9132",
                     "9133", "9134", "9136", "9137", "9138", "9139", "9140", "9141", "9143", "9144", "9145", "9146",
                     "9156", "9158", "9159", "9160", "9167", "9170", "9171", "9177", "9178", "9179", "9181", "9191",
                     "9194", "9196", "9197", "9201", "9203", "9204", "9205", "9206", "9207", "9208", "9215", "9216",
                     "9217", "9218", "9221", "9222", "9224", "9227", "9229", "9230", "9231", "9232", "9233", "9234",
                     "9235", "9237", "9239", "9240", "9241", "9242", "9243", "9244", "9245", "9246", "9247", "9248",
                     "9249", "9250", "9253", "9254", "9255", "9256", "9257", "9260", "9261", "9263", "9264", "9270",
                     "9283", "9288", "9293", "9298", "9301", "9302", "9306", "9309", "9310", "9312", "9313", "9320",
                     "9321", "9326", "9327", "9328", "9329", "9331", "9332", "9334", "9336", "9340", "9341", "9348",
                     "9349", "9350", "9351", "9352", "9353", "9354", "9355", "9356", "9357", "9358", "9359", "9360",
                     "9361", "9362", "9363", "9364", "9365", "9366", "9367", "9368", "9369", "9370", "9371", "9372",
                     "9373", "9375", "9376", "9377", "9378", "9379", "9380", "9381", "9382", "9383", "9384", "9386",
                     "9387", "9388", "9390", "9393", "9394", "9395", "9396", "9397", "9398", "9399", "9402", "9403",
                     "9404", "9405", "9406", "9407", "9408", "9409", "9410", "9411", "9414", "9415", "9416", "9419",
                     "9421", "9423", "9424", "9425", "9427", "9429", "9434", "9435", "9439", "9441", "9447", "9448",
                     "9449", "9451", "9453", "9457", "9458", "9459", "9460", "9462", "9464", "9465", "9466", "9467",
                     "9468", "9469", "9470", "9471", "9472", "9473", "9474", "9475", "9476", "9477", "9478", "9479",
                     "9480", "9481", "9487", "9489", "9490", "9491", "9493", "9498", "9501", "9502", "9503", "9505",
                     "9506", "9507", "9508", "10001", "10002", "10003", "10004", "10005", "10006", "10007", "10012",
                     "10014", "10015", "10016", "10017", "10018", "10019", "10021", "10022", "10023", "10026", "10030",
                     "10031", "10032", "10033", "10034", "10035", "10036", "10039", "10040", "10041", "10042", "10043",
                     "10048", "10049", "10050", "10052", "10053", "10054", "10055", "10056", "10059", "10060", "10061",
                     "10062", "10063", "10064", "10065", "10066", "10067", "10068", "10069", "10070", "10071", "10074",
                     "10075", "10076", "10077", "10080", "10081", "10082", "10084", "10085", "10087", "10088", "10089",
                     "10091", "10092", "10093", "10094", "10095", "10096", "10100", "10101", "10102", "10103", "10104",
                     "10105", "10106", "10107", "10108", "10109", "10111", "10112", "10113", "10114", "10115", "10117",
                     "10118", "10119", "10121", "10122", "10123", "10124", "10125", "10126", "10127", "10128", "10129",
                     "10130", "10131", "10132", "10133", "10134", "10137", "10138", "10142", "10144", "10145", "10146",
                     "10147", "10149", "10150", "10151", "10152", "10153", "10173", "10174", "10175", "10176", "10177",
                     "10178", "10179", "10180", "10181", "10184", "10186", "10188", "10190", "10194", "10202", "10203",
                     "10204", "10205", "10206", "10207", "10208", "10214", "10216", "10217", "10218", "10219", "10222",
                     "10224", "10225", "10226", "10227", "10228", "10229", "10230", "10231", "10232", "10233", "10234",
                     "10235", "10236", "10237", "10238", "10239", "10240", "10241", "10242", "10245", "10246", "10247",
                     "10248", "10249", "10250", "10251", "10252", "10253", "10254", "10260", "10261", "10262", "10263",
                     "10264", "10265", "10266", "10268", "10269", "10270", "10271", "10273", "10275", "10276", "10277",
                     "10278", "10279", "10281", "10282", "10283", "10284", "10285", "10286", "10287", "10288", "10289",
                     "10290", "10291", "10293", "10294", "10295", "10296", "10297", "10298", "10300", "10301", "10302",
                     "10305", "10306", "10307", "10308", "10309", "10310", "10311", "10312", "10313", "10315", "10316",
                     "10317", "10319", "10320", "10321", "10322", "10323", "10324", "10325", "10326", "10328", "10329",
                     "10330", "10331", "10332", "10333", "10334", "10335", "10339", "10341", "10342", "10344", "10345",
                     "10346", "10347", "10348", "10349", "10350", "10352", "10353", "10354", "10355", "10356", "10357",
                     "10358", "10361", "10362", "10363", "10364", "10365", "10366", "10367", "10368", "10369", "10370",
                     "10371", "10372", "10373", "10374", "10375", "10376", "10378", "10381", "10382", "10383", "10384",
                     "10385", "10386", "10388", "10389", "10391", "10392", "10393", "10394", "10399", "10400", "10401",
                     "10402", "10403", "10404", "10405", "10406", "10407", "10408", "10410", "10411", "10413", "10415",
                     "10417", "10418", "10419", "10420", "10421", "10422", "10423", "10424", "10425", "10426", "10428",
                     "10429", "10430", "10431", "10432", "10433", "10434", "10435", "10436", "10437", "10438", "10439",
                     "10440", "10441", "10442", "10444", "10445", "10450", "10451", "10452", "10453", "10454", "10455",
                     "10456", "10457", "10458", "10460", "10461", "10462", "10466", "10467", "10468", "10469", "10470",
                     "10471", "10472", "10474", "10475", "10476", "10479", "10480", "10481", "10482", "10483", "10486",
                     "10489", "10490", "10491", "10492", "10493", "10494", "10495", "10496", "10497", "10499", "10500",
                     "10501", "10502", "10504", "10505", "10508", "10509", "10510", "10512", "10515", "10517", "10519",
                     "10520", "10522", "10523", "10524", "10525", "10527", "10528", "10529", "10530", "10531", "10532",
                     "10533", "10534", "10535", "10536", "10537", "10538", "10539", "10540", "10541", "10542", "10543",
                     "10544", "10545", "10546", "10547", "10548", "10549", "10550", "10551", "10552", "10553", "10554",
                     "10555", "10556", "10557", "10559", "10560", "10561", "10563", "10564", "10565", "10566", "10567",
                     "10569", "10573", "10574", "10575", "10576", "10577", "10578", "10579", "10580", "10581", "10582",
                     "10583", "10584", "10585", "10586", "10587", "10588", "10590", "10591", "10594", "10595", "10596",
                     "10597", "10598", "10599", "10600", "10602", "10603", "10604", "10605", "10606", "10607", "10608",
                     "10610", "10611", "10612", "10613", "10614", "10615", "10616", "10617", "10618", "10619", "10621",
                     "10623", "10624", "10625", "10626", "10627", "10628", "10629", "10630", "10631", "10632", "10633",
                     "10634", "10635", "10636", "10637", "10638", "10639", "10640", "10641", "10642", "10643", "10644",
                     "10646", "10647", "10648", "10649", "10650", "10651", "10652", "10653", "10654", "10655", "10656",
                     "10657", "10658", "10659", "10660", "10661", "10663", "10664", "10668", "10672", "10673", "10674",
                     "10675", "10677", "10678", "10679", "10680", "10683", "10684", "10685", "10686", "10687", "10688",
                     "10690", "10693", "10694", "10695", "10696", "10698", "10699", "10700", "10701", "10702", "10705",
                     "10706", "10707", "10713", "10714", "10718", "10720", "10722", "10723", "10724", "10728", "10729",
                     "10730", "10735", "10737", "10738", "10739", "10741", "10742", "10743", "10745", "10746", "10748",
                     "10749", "10750", "10751", "10752", "10753", "10754", "10755", "10758", "10759", "10762", "10764",
                     "10765", "10766", "10767", "10770", "10771", "10774", "10775", "10776", "10777", "10778", "10779",
                     "10781", "10785", "10786", "10787", "10788", "10790", "10791", "10792", "10794", "10795", "10796",
                     "10797", "10798", "10799", "10800", "10801", "10802", "10803", "10804", "10811", "10812", "10813",
                     "10814", "10815", "10816", "10817", "10818", "10819", "10820", "10821", "10822", "10823", "10824",
                     "10825", "10826", "10827", "10828", "10829", "10830", "10831", "10832", "10833", "10834", "10835",
                     "10836", "10837", "10838", "10839", "10840", "10841", "10842", "10843", "10846", "10847", "10848",
                     "10850", "10851", "10852", "10853", "10854", "10855", "10857", "10859", "10860", "10861", "10862",
                     "10864", "10865", "10868", "10869", "10870", "10871", "10872", "10873", "10895", "10897", "10898",
                     "10899", "10900", "10901", "10902", "10904", "10905", "10906", "10907", "10908", "10909", "10910",
                     "10915", "10916", "10917", "10918", "10919", "10921", "10922", "10923", "10924", "10926", "10927",
                     "10929", "10930", "10933", "10935", "10936", "10938", "10939", "10940", "10941", "10942", "10943",
                     "10945", "10946", "10947", "10949", "10950", "10952", "10953", "10954", "10955", "10956", "10958",
                     "10961", "10962", "10963", "10965", "10967", "10968", "10969", "10972", "10973", "10974", "10975",
                     "10976", "10977", "10978", "10979", "10980", "10982", "10983", "10984", "10985", "10986", "10987",
                     "10990", "10993", "10994", "10995", "10996", "10997", "10998", "10999", "11000", "11001", "11002",
                     "11003", "11004", "11005", "11006", "11007", "11008", "11009", "11010", "11011", "11012", "11013",
                     "11014", "11016", "11017", "11019", "11020", "11022", "11024", "11025", "11026", "11027", "11028",
                     "11029", "11030", "11031", "11032", "11033", "11034", "11035", "11039", "11048", "11049", "11050",
                     "11051", "11052", "11053", "11056", "11057", "11058", "11060", "11061", "11063", "11064", "11065",
                     "11067", "11068", "11069", "11070", "11071", "11074", "11075", "11076", "11077", "11078", "11079",
                     "11080", "11082", "11083", "11084", "11085", "11087", "11089", "11092", "11093", "11094", "11095",
                     "11096", "11097", "11098", "11099", "11100", "11101", "11102", "11103", "11104", "11105", "11106",
                     "11107", "11108", "11112", "11113", "11117", "11118", "11119", "11120", "11121", "11122", "11124",
                     "11125", "11126", "11128", "11129", "11135", "11136", "11137", "11138", "11139", "11140", "11141",
                     "11142", "11144", "11145", "11146", "11147", "11148", "11149", "11150", "11151", "11153", "11154",
                     "11155", "11161", "11163", "11172", "11188", "11191", "11201", "11202", "11203", "11205", "11206",
                     "11207", "11210", "11212", "11213", "11219", "11220", "11223", "11224", "11225", "11226", "11228",
                     "11229", "11233", "11239", "11241", "11244", "11245", "11246", "11248", "11249", "11250", "11251",
                     "11253", "11255", "11256", "11257", "11260", "11261", "11262", "11265", "11266", "11268", "11269",
                     "11270", "11271", "11272", "11273", "11276", "11277", "11281", "11285", "11286", "11287", "11290",
                     "11292", "11294", "11296", "11297", "11298", "11299", "11303", "11306", "11307", "11311", "11313",
                     "11314", "11315", "11316", "11317", "11320", "11322", "11324", "11327", "11329", "11330", "11331",
                     "11333", "11337", "11338", "11339", "11340", "11341", "11342", "11344", "11346", "11347", "11348",
                     "11350", "11351", "11352", "11353", "11354", "11357", "11358", "11359", "11360", "11361", "11365",
                     "11366", "11367", "11368", "11370", "11371", "11373", "11374", "11375", "11377", "11378", "11379",
                     "11380", "11381", "11382", "11384", "11385", "11387", "11388", "11390", "11391", "11393", "11394",
                     "11395", "11396", "11397", "11398", "11399", "11400", "11401", "11403", "11404", "11405", "11406",
                     "11408", "11409", "11410", "11412", "11413", "11414", "11415", "11416", "11417", "11419", "11421",
                     "11422", "11423", "11424", "11425", "11426", "11427", "11428", "11429", "11430", "11431", "11432",
                     "11433", "11434", "11436", "11437", "11441", "11442", "11443", "11444", "11445", "11446", "11447",
                     "11448", "11449", "11450", "11453", "11454", "11457", "11458", "11459", "11461", "11463", "11464",
                     "11466", "11467", "11468", "11470", "11471", "11472", "11473", "11474", "11480", "11481", "11482",
                     "11483", "11485", "11486", "11487", "11489", "11490", "11491", "11492", "11493", "11494", "11495",
                     "11497", "11498", "11499", "11500", "11501", "11502", "11503", "11504", "11505", "11506", "11507",
                     "11508", "11510", "11512", "11513", "11516", "11517", "11518", "11520", "11522", "11523", "11524",
                     "11525", "11526", "11528", "11529", "11531", "11533", "11534", "11535", "11543", "11544", "11545",
                     "11546", "11547", "11548", "11549", "11553", "11554", "11555", "11556", "11557", "11558", "11559",
                     "11560", "11561", "11563", "11567", "11569", "11572", "11573", "11575", "11576", "11577", "11578",
                     "11579", "11580", "11586", "11587", "11588", "11589", "11591", "11592", "11593", "11594", "11595",
                     "11598", "11599", "11601", "11602", "11603", "11605", "11607", "11609", "11610", "11617", "11619",
                     "11620", "11621", "11647", "11648", "11650", "11678", "11680", "11684", "11707", "11712", "11713",
                     "11715", "11716", "11717", "11718", "11719", "11721", "11722", "11726", "11729", "11730", "11731",
                     "11732", "11734", "11735", "11736", "11737", "11739", "11740", "11744", "11747", "11748", "11749",
                     "11750", "11751", "11767", "11769", "11770", "11775", "11776", "11777", "11778", "11779", "11782",
                     "11783", "11784", "11785", "11787", "11788", "11789", "11790", "11791", "11792", "11793", "11794",
                     "11795", "11796", "11797", "11798", "11799", "11800", "11801", "11802", "11803", "11804", "11805",
                     "11806", "11807", "11808", "11812", "11813", "11814", "11825", "11826", "11827", "11838", "11840",
                     "11841", "11842", "11843", "11844", "11845", "11848", "11849", "11851", "11852", "11855", "11858",
                     "11860", "11861", "11862", "11866", "11868", "11870", "11871", "11872", "11876", "11877", "11884",
                     "11886", "11888", "11889", "11892", "11893", "11895", "11896", "11902", "11903", "11904", "11906",
                     "11910", "11913", "11929", "11931", "11940", "11944", "11945", "11946", "11950", "11951", "11955",
                     "11960", "11963", "11964", "11969", "11978", "11983", "11986", "11989", "11990", "11991", "11995",
                     "11997", "12001", "12002", "12003", "12006", "12008", "12011", "12014", "12015", "12018", "12021",
                     "12024", "12025", "12027", "12029", "12030", "12031", "12034", "12035", "12036", "12037", "12038",
                     "12042", "12043", "12045", "12050", "12053", "12055", "12057", "12058", "12062", "12064", "12066",
                     "12067", "12070", "12072", "12082", "12083", "12090", "12093", "12094", "12095", "12096", "12097",
                     "12099", "12101", "12103", "12105", "12107", "12108", "12109", "12110", "12111", "12116", "12118",
                     "12127", "12130", "12131", "12138", "12139", "12140", "12144", "12146", "12152", "12163", "12169",
                     "12170", "12174", "12183", "12189", "12194", "12212", "12214", "12225"});

         List<TeamWorkFlowArtifact> workflows = new ArrayList<TeamWorkFlowArtifact>();
         if (workflows.isEmpty()) {
            List<Artifact> artifacts =
                  ArtifactQuery.getArtifactListFromAttributeValues(AtsAttributeTypes.LegacyPCRId, legacyIds,
                        CoreBranches.COMMON, legacyIds.size());
            for (Artifact artifact : artifacts) {
               if (artifact.getArtifactType().getGuid().equals("AAMFDjZ1UVAQTXHk2GgA")) {
                  TeamWorkFlowArtifact teamWorkflow = (TeamWorkFlowArtifact) artifact;
                  String legacyId = teamWorkflow.getWorldViewLegacyPCR();
                  if (!dontCreate.contains(legacyId)) {
                     workflows.add(teamWorkflow);
                  }
               }
            }
            Collections.sort(workflows, new Comparator<TeamWorkFlowArtifact>(
                  ) {
                     @Override
                     public int compare(TeamWorkFlowArtifact workflow1, TeamWorkFlowArtifact workflow2) {
                        try {
                           int compare = workflow1.getWorldViewLegacyPCR().compareTo(workflow2.getWorldViewLegacyPCR());
                           return reverse ? (-1 * compare) : compare;
                        } catch (OseeCoreException ex) {
                           return -1;
                        }
                     }
                  });
         }
         return workflows;
      }

      return worldEditor.getWorldComposite().getXViewer().getSelectedTeamWorkflowArtifacts();
   }

   @Override
   public void run() {
      try {
         IOperation operation = new ExportChangesOperation(getWorkflows());
         Operations.executeAsJob(operation, true);
      } catch (OseeCoreException ex) {
         OseeLog.log(AtsPlugin.class, Level.SEVERE, ex.toString(), ex);
      }
   }

   @Override
   public ImageDescriptor getImageDescriptor() {
      return ImageManager.getImageDescriptor(FrameworkImage.EXPORT_DATA);
   }

   public void updateEnablement() throws OseeCoreException {
      setEnabled(!getWorkflows().isEmpty());
   }

   private static final class ExportChangesOperation extends AbstractOperation {
      private final Collection<TeamWorkFlowArtifact> workflows;

      public ExportChangesOperation(Collection<TeamWorkFlowArtifact> workflows) {
         super("Exporting Change Report(s)", AtsPlugin.PLUGIN_ID);
         this.workflows = workflows;
      }

      private TransactionRecord pickTransaction(IArtifact workflow) throws OseeCoreException {
         int minTransactionId = -1;
         for (TransactionRecord transaction : TransactionManager.getCommittedArtifactTransactionIds(workflow)) {
            if (minTransactionId < transaction.getId()) {
               minTransactionId = transaction.getId();
            }
         }
         if (minTransactionId == -1) {
            throw new OseeStateException("no transaction records found for " + workflow);
         }
         return TransactionManager.getTransactionId(minTransactionId);
      }

      @Override
      protected void doWork(IProgressMonitor monitor) throws Exception {
         for (Artifact workflow : workflows) {
            AtsBranchManager atsBranchMgr = ((TeamWorkFlowArtifact) workflow).getBranchMgr();

            Collection<Change> changes = new ArrayList<Change>();
            IOperation operation = null;
            if (atsBranchMgr.isCommittedBranchExists()) {
               operation = ChangeManager.comparedToPreviousTx(pickTransaction(workflow), changes);
            } else {
               Branch workingBranch = atsBranchMgr.getWorkingBranch();
               if (workingBranch != null && !workingBranch.getBranchType().isBaselineBranch()) {
                  operation = ChangeManager.comparedToParent(workingBranch, changes);
               }
            }
            if (operation != null) {
               doSubWork(operation, monitor, 0.50);
            }
            if (!changes.isEmpty() && changes.size() < 4000) {
               String folderName = workflow.getSoleAttributeValueAsString(AtsAttributeTypes.LegacyPCRId, null);
               IOperation subOp = new WordChangeReportOperation(changes, true, folderName);
               doSubWork(subOp, monitor, 0.50);
            } else {
               monitor.worked(calculateWork(0.50));
            }
         }

      }
   }
}
