/*
* generated by Xtext
*/
grammar InternalOseeTypes;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.osee.framework.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.osee.framework.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.osee.framework.services.OseeTypesGrammarAccess;

}

@parser::members {
 
 	private OseeTypesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(OseeTypesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel :
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport :
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType :
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArtifactType
entryRuleArtifactType :
{ before(grammarAccess.getArtifactTypeRule()); }
	 ruleArtifactType
{ after(grammarAccess.getArtifactTypeRule()); } 
	 EOF 
;

// Rule ArtifactType
ruleArtifactType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getArtifactTypeAccess().getGroup()); }
(rule__ArtifactType__Group__0)
{ after(grammarAccess.getArtifactTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRef
entryRuleXRef :
{ before(grammarAccess.getXRefRule()); }
	 ruleXRef
{ after(grammarAccess.getXRefRule()); } 
	 EOF 
;

// Rule XRef
ruleXRef 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getXRefAccess().getAlternatives()); }
(rule__XRef__Alternatives)
{ after(grammarAccess.getXRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationTypeRef
entryRuleRelationTypeRef :
{ before(grammarAccess.getRelationTypeRefRule()); }
	 ruleRelationTypeRef
{ after(grammarAccess.getRelationTypeRefRule()); } 
	 EOF 
;

// Rule RelationTypeRef
ruleRelationTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationTypeRefAccess().getGroup()); }
(rule__RelationTypeRef__Group__0)
{ after(grammarAccess.getRelationTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeTypeRef
entryRuleAttributeTypeRef :
{ before(grammarAccess.getAttributeTypeRefRule()); }
	 ruleAttributeTypeRef
{ after(grammarAccess.getAttributeTypeRefRule()); } 
	 EOF 
;

// Rule AttributeTypeRef
ruleAttributeTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAttributeTypeRefAccess().getGroup()); }
(rule__AttributeTypeRef__Group__0)
{ after(grammarAccess.getAttributeTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeType
entryRuleAttributeType :
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup()); }
(rule__AttributeType__Group__0)
{ after(grammarAccess.getAttributeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAttribute
entryRuleXAttribute :
{ before(grammarAccess.getXAttributeRule()); }
	 ruleXAttribute
{ after(grammarAccess.getXAttributeRule()); } 
	 EOF 
;

// Rule XAttribute
ruleXAttribute 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getXAttributeAccess().getGroup()); }
(rule__XAttribute__Group__0)
{ after(grammarAccess.getXAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationType
entryRuleRelationType :
{ before(grammarAccess.getRelationTypeRule()); }
	 ruleRelationType
{ after(grammarAccess.getRelationTypeRule()); } 
	 EOF 
;

// Rule RelationType
ruleRelationType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationTypeAccess().getGroup()); }
(rule__RelationType__Group__0)
{ after(grammarAccess.getRelationTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRelation
entryRuleXRelation :
{ before(grammarAccess.getXRelationRule()); }
	 ruleXRelation
{ after(grammarAccess.getXRelationRule()); } 
	 EOF 
;

// Rule XRelation
ruleXRelation 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getXRelationAccess().getGroup()); }
(rule__XRelation__Group__0)
{ after(grammarAccess.getXRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArtifactTypeParserRuleCall_0()); }
	ruleArtifactType
{ after(grammarAccess.getTypeAccess().getArtifactTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getRelationTypeParserRuleCall_1()); }
	ruleRelationType
{ after(grammarAccess.getTypeAccess().getRelationTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getAttributeTypeParserRuleCall_2()); }
	ruleAttributeType
{ after(grammarAccess.getTypeAccess().getAttributeTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRefAccess().getRelationTypeRefParserRuleCall_0()); }
	ruleRelationTypeRef
{ after(grammarAccess.getXRefAccess().getRelationTypeRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXRefAccess().getAttributeTypeRefParserRuleCall_1()); }
	ruleAttributeTypeRef
{ after(grammarAccess.getXRefAccess().getAttributeTypeRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelation__NameAlternatives_11_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameOneToManyKeyword_11_0_0()); }

	'one-to-many' 

{ after(grammarAccess.getXRelationAccess().getNameOneToManyKeyword_11_0_0()); }
)

    |(
{ before(grammarAccess.getXRelationAccess().getNameManyToManyKeyword_11_0_1()); }

	'many-to-many' 

{ after(grammarAccess.getXRelationAccess().getNameManyToManyKeyword_11_0_1()); }
)

    |(
{ before(grammarAccess.getXRelationAccess().getNameManyToOneKeyword_11_0_2()); }

	'many-to-one' 

{ after(grammarAccess.getXRelationAccess().getNameManyToOneKeyword_11_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
(rule__Model__ImportsAssignment_0)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)

	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsAssignment_1()); }
(rule__Model__ElementsAssignment_1)*
{ after(grammarAccess.getModelAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArtifactType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getArtifactTypeKeyword_0()); }

	'artifactType' 

{ after(grammarAccess.getArtifactTypeAccess().getArtifactTypeKeyword_0()); }
)

	rule__ArtifactType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getNameAssignment_1()); }
(rule__ArtifactType__NameAssignment_1)
{ after(grammarAccess.getArtifactTypeAccess().getNameAssignment_1()); }
)

	rule__ArtifactType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getGroup_2()); }
(rule__ArtifactType__Group_2__0)?
{ after(grammarAccess.getArtifactTypeAccess().getGroup_2()); }
)

	rule__ArtifactType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getArtifactTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

	rule__ArtifactType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getAttributesAssignment_4()); }
(rule__ArtifactType__AttributesAssignment_4)*
{ after(grammarAccess.getArtifactTypeAccess().getAttributesAssignment_4()); }
)

	rule__ArtifactType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getArtifactTypeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ArtifactType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getArtifactTypeAccess().getExtendsKeyword_2_0()); }
)

	rule__ArtifactType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperEntityAssignment_2_1()); }
(rule__ArtifactType__SuperEntityAssignment_2_1)
{ after(grammarAccess.getArtifactTypeAccess().getSuperEntityAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeRefAccess().getRelationKeyword_0()); }

	'relation' 

{ after(grammarAccess.getRelationTypeRefAccess().getRelationKeyword_0()); }
)

	rule__RelationTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeRefAccess().getTypeAssignment_1()); }
(rule__RelationTypeRef__TypeAssignment_1)
{ after(grammarAccess.getRelationTypeRefAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getAttributeTypeRefAccess().getAttributeKeyword_0()); }
)

	rule__AttributeTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getTypeAssignment_1()); }
(rule__AttributeTypeRef__TypeAssignment_1)
{ after(grammarAccess.getAttributeTypeRefAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeKeyword_0()); }

	'attributeType' 

{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeKeyword_0()); }
)

	rule__AttributeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getNameAssignment_1()); }
(rule__AttributeType__NameAssignment_1)
{ after(grammarAccess.getAttributeTypeAccess().getNameAssignment_1()); }
)

	rule__AttributeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_2()); }
(rule__AttributeType__Group_2__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_2()); }
)

	rule__AttributeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAttributeTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

	rule__AttributeType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getAttributesAssignment_4()); }
(rule__AttributeType__AttributesAssignment_4)
{ after(grammarAccess.getAttributeTypeAccess().getAttributesAssignment_4()); }
)

	rule__AttributeType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAttributeTypeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AttributeType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getAttributeTypeAccess().getExtendsKeyword_2_0()); }
)

	rule__AttributeType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getSuperEntityAssignment_2_1()); }
(rule__AttributeType__SuperEntityAssignment_2_1)
{ after(grammarAccess.getAttributeTypeAccess().getSuperEntityAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getDataProviderKeyword_0()); }

	'dataProvider' 

{ after(grammarAccess.getXAttributeAccess().getDataProviderKeyword_0()); }
)

	rule__XAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getNameAssignment_1()); }
(rule__XAttribute__NameAssignment_1)
{ after(grammarAccess.getXAttributeAccess().getNameAssignment_1()); }
)

	rule__XAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getTaggerIdKeyword_2()); }

	'taggerId' 

{ after(grammarAccess.getXAttributeAccess().getTaggerIdKeyword_2()); }
)

	rule__XAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getNameAssignment_3()); }
(rule__XAttribute__NameAssignment_3)
{ after(grammarAccess.getXAttributeAccess().getNameAssignment_3()); }
)

	rule__XAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__XAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getGroup_4()); }
(rule__XAttribute__Group_4__0)?
{ after(grammarAccess.getXAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XAttribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getDefaultValueKeyword_4_0()); }

	'defaultValue' 

{ after(grammarAccess.getXAttributeAccess().getDefaultValueKeyword_4_0()); }
)

	rule__XAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XAttribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getNameAssignment_4_1()); }
(rule__XAttribute__NameAssignment_4_1)
{ after(grammarAccess.getXAttributeAccess().getNameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRelationTypeKeyword_0()); }

	'relationType' 

{ after(grammarAccess.getRelationTypeAccess().getRelationTypeKeyword_0()); }
)

	rule__RelationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getNameAssignment_1()); }
(rule__RelationType__NameAssignment_1)
{ after(grammarAccess.getRelationTypeAccess().getNameAssignment_1()); }
)

	rule__RelationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRelationTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__RelationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getAttributesAssignment_3()); }
(rule__RelationType__AttributesAssignment_3)
{ after(grammarAccess.getRelationTypeAccess().getAttributesAssignment_3()); }
)

	rule__RelationType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRelationTypeAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XRelation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getSideANameKeyword_0()); }

	'sideAName' 

{ after(grammarAccess.getXRelationAccess().getSideANameKeyword_0()); }
)

	rule__XRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameAssignment_1()); }
(rule__XRelation__NameAssignment_1)
{ after(grammarAccess.getXRelationAccess().getNameAssignment_1()); }
)

	rule__XRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getSideAArtifactTypeKeyword_2()); }

	'sideAArtifactType' 

{ after(grammarAccess.getXRelationAccess().getSideAArtifactTypeKeyword_2()); }
)

	rule__XRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getTypeAssignment_3()); }
(rule__XRelation__TypeAssignment_3)
{ after(grammarAccess.getXRelationAccess().getTypeAssignment_3()); }
)

	rule__XRelation__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getSideBNameKeyword_4()); }

	'sideBName' 

{ after(grammarAccess.getXRelationAccess().getSideBNameKeyword_4()); }
)

	rule__XRelation__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameAssignment_5()); }
(rule__XRelation__NameAssignment_5)
{ after(grammarAccess.getXRelationAccess().getNameAssignment_5()); }
)

	rule__XRelation__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getSideBArtifactTypeKeyword_6()); }

	'sideBArtifactType' 

{ after(grammarAccess.getXRelationAccess().getSideBArtifactTypeKeyword_6()); }
)

	rule__XRelation__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getTypeAssignment_7()); }
(rule__XRelation__TypeAssignment_7)
{ after(grammarAccess.getXRelationAccess().getTypeAssignment_7()); }
)

	rule__XRelation__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getDefaultOrderTypeKeyword_8()); }

	'defaultOrderType' 

{ after(grammarAccess.getXRelationAccess().getDefaultOrderTypeKeyword_8()); }
)

	rule__XRelation__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameAssignment_9()); }
(rule__XRelation__NameAssignment_9)
{ after(grammarAccess.getXRelationAccess().getNameAssignment_9()); }
)

	rule__XRelation__Group__10
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getMultiplicityKeyword_10()); }

	'multiplicity' 

{ after(grammarAccess.getXRelationAccess().getMultiplicityKeyword_10()); }
)

	rule__XRelation__Group__11
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelation__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameAssignment_11()); }
(rule__XRelation__NameAssignment_11)
{ after(grammarAccess.getXRelationAccess().getNameAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Model__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getArtifactTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__SuperEntityAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperEntityArtifactTypeCrossReference_2_1_0()); }
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperEntityArtifactTypeIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getArtifactTypeAccess().getSuperEntityArtifactTypeIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getArtifactTypeAccess().getSuperEntityArtifactTypeCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__AttributesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getAttributesXRefParserRuleCall_4_0()); }
	ruleXRef{ after(grammarAccess.getArtifactTypeAccess().getAttributesXRefParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationTypeRef__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeRefAccess().getTypeRelationTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getRelationTypeRefAccess().getTypeRelationTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationTypeRefAccess().getTypeRelationTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRelationTypeRefAccess().getTypeRelationTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeTypeRef__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getTypeAttributeTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getAttributeTypeRefAccess().getTypeAttributeTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeTypeRefAccess().getTypeAttributeTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAttributeTypeRefAccess().getTypeAttributeTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__SuperEntityAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getSuperEntityAttributeTypeCrossReference_2_1_0()); }
(
{ before(grammarAccess.getAttributeTypeAccess().getSuperEntityAttributeTypeIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeTypeAccess().getSuperEntityAttributeTypeIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getAttributeTypeAccess().getSuperEntityAttributeTypeCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__AttributesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getAttributesXAttributeParserRuleCall_4_0()); }
	ruleXAttribute{ after(grammarAccess.getAttributeTypeAccess().getAttributesXAttributeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getXAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getXAttributeAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__NameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAttributeAccess().getNameSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getXAttributeAccess().getNameSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRelationTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__AttributesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getAttributesXRelationParserRuleCall_3_0()); }
	ruleXRelation{ after(grammarAccess.getRelationTypeAccess().getAttributesXRelationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getXRelationAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getTypeArtifactTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getXRelationAccess().getTypeArtifactTypeIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getXRelationAccess().getTypeArtifactTypeIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getXRelationAccess().getTypeArtifactTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelation__NameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getXRelationAccess().getNameSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelation__TypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getTypeArtifactTypeCrossReference_7_0()); }
(
{ before(grammarAccess.getXRelationAccess().getTypeArtifactTypeIDTerminalRuleCall_7_0_1()); }
	RULE_ID{ after(grammarAccess.getXRelationAccess().getTypeArtifactTypeIDTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getXRelationAccess().getTypeArtifactTypeCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelation__NameAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameSTRINGTerminalRuleCall_9_0()); }
	RULE_STRING{ after(grammarAccess.getXRelationAccess().getNameSTRINGTerminalRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelation__NameAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationAccess().getNameAlternatives_11_0()); }
(rule__XRelation__NameAlternatives_11_0)
{ after(grammarAccess.getXRelationAccess().getNameAlternatives_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


