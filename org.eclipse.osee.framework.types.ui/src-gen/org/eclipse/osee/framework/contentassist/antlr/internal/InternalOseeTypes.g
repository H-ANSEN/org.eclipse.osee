/*
* generated by Xtext
*/
grammar InternalOseeTypes;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.osee.framework.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.osee.framework.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.osee.framework.services.OseeTypesGrammarAccess;

}

@parser::members {
 
 	private OseeTypesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(OseeTypesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel :
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport :
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQUALIFIED_NAME
entryRuleQUALIFIED_NAME :
{ before(grammarAccess.getQUALIFIED_NAMERule()); }
	 ruleQUALIFIED_NAME
{ after(grammarAccess.getQUALIFIED_NAMERule()); } 
	 EOF 
;

// Rule QUALIFIED_NAME
ruleQUALIFIED_NAME 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getGroup()); }
(rule__QUALIFIED_NAME__Group__0)
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDIGITS
entryRuleDIGITS :
{ before(grammarAccess.getDIGITSRule()); }
	 ruleDIGITS
{ after(grammarAccess.getDIGITSRule()); } 
	 EOF 
;

// Rule DIGITS
ruleDIGITS 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
(
{ before(grammarAccess.getDIGITSAccess().getAlternatives()); }
(rule__DIGITS__Alternatives)
{ after(grammarAccess.getDIGITSAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getDIGITSAccess().getAlternatives()); }
(rule__DIGITS__Alternatives)*
{ after(grammarAccess.getDIGITSAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOseeType
entryRuleOseeType :
{ before(grammarAccess.getOseeTypeRule()); }
	 ruleOseeType
{ after(grammarAccess.getOseeTypeRule()); } 
	 EOF 
;

// Rule OseeType
ruleOseeType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOseeTypeAccess().getAlternatives()); }
(rule__OseeType__Alternatives)
{ after(grammarAccess.getOseeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArtifactType
entryRuleArtifactType :
{ before(grammarAccess.getArtifactTypeRule()); }
	 ruleArtifactType
{ after(grammarAccess.getArtifactTypeRule()); } 
	 EOF 
;

// Rule ArtifactType
ruleArtifactType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getArtifactTypeAccess().getGroup()); }
(rule__ArtifactType__Group__0)
{ after(grammarAccess.getArtifactTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeTypeRef
entryRuleAttributeTypeRef :
{ before(grammarAccess.getAttributeTypeRefRule()); }
	 ruleAttributeTypeRef
{ after(grammarAccess.getAttributeTypeRefRule()); } 
	 EOF 
;

// Rule AttributeTypeRef
ruleAttributeTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAttributeTypeRefAccess().getGroup()); }
(rule__AttributeTypeRef__Group__0)
{ after(grammarAccess.getAttributeTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeType
entryRuleAttributeType :
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup()); }
(rule__AttributeType__Group__0)
{ after(grammarAccess.getAttributeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeBaseType
entryRuleAttributeBaseType :
{ before(grammarAccess.getAttributeBaseTypeRule()); }
	 ruleAttributeBaseType
{ after(grammarAccess.getAttributeBaseTypeRule()); } 
	 EOF 
;

// Rule AttributeBaseType
ruleAttributeBaseType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAttributeBaseTypeAccess().getAlternatives()); }
(rule__AttributeBaseType__Alternatives)
{ after(grammarAccess.getAttributeBaseTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOseeEnumType
entryRuleOseeEnumType :
{ before(grammarAccess.getOseeEnumTypeRule()); }
	 ruleOseeEnumType
{ after(grammarAccess.getOseeEnumTypeRule()); } 
	 EOF 
;

// Rule OseeEnumType
ruleOseeEnumType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOseeEnumTypeAccess().getGroup()); }
(rule__OseeEnumType__Group__0)
{ after(grammarAccess.getOseeEnumTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOseeEnum
entryRuleOseeEnum :
{ before(grammarAccess.getOseeEnumRule()); }
	 ruleOseeEnum
{ after(grammarAccess.getOseeEnumRule()); } 
	 EOF 
;

// Rule OseeEnum
ruleOseeEnum 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOseeEnumAccess().getGroup()); }
(rule__OseeEnum__Group__0)
{ after(grammarAccess.getOseeEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationType
entryRuleRelationType :
{ before(grammarAccess.getRelationTypeRule()); }
	 ruleRelationType
{ after(grammarAccess.getRelationTypeRule()); } 
	 EOF 
;

// Rule RelationType
ruleRelationType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationTypeAccess().getGroup()); }
(rule__RelationType__Group__0)
{ after(grammarAccess.getRelationTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule RelationMultiplicityEnum
ruleRelationMultiplicityEnum
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getAlternatives()); }
(rule__RelationMultiplicityEnum__Alternatives)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DIGITS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDIGITSAccess().getDigitZeroKeyword_0()); }

	'0' 

{ after(grammarAccess.getDIGITSAccess().getDigitZeroKeyword_0()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitOneKeyword_1()); }

	'1' 

{ after(grammarAccess.getDIGITSAccess().getDigitOneKeyword_1()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitTwoKeyword_2()); }

	'2' 

{ after(grammarAccess.getDIGITSAccess().getDigitTwoKeyword_2()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitThreeKeyword_3()); }

	'3' 

{ after(grammarAccess.getDIGITSAccess().getDigitThreeKeyword_3()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitFourKeyword_4()); }

	'4' 

{ after(grammarAccess.getDIGITSAccess().getDigitFourKeyword_4()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitFiveKeyword_5()); }

	'5' 

{ after(grammarAccess.getDIGITSAccess().getDigitFiveKeyword_5()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitSixKeyword_6()); }

	'6' 

{ after(grammarAccess.getDIGITSAccess().getDigitSixKeyword_6()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitSevenKeyword_7()); }

	'7' 

{ after(grammarAccess.getDIGITSAccess().getDigitSevenKeyword_7()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitEightKeyword_8()); }

	'8' 

{ after(grammarAccess.getDIGITSAccess().getDigitEightKeyword_8()); }
)

    |(
{ before(grammarAccess.getDIGITSAccess().getDigitNineKeyword_9()); }

	'9' 

{ after(grammarAccess.getDIGITSAccess().getDigitNineKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeTypeAccess().getArtifactTypeParserRuleCall_0()); }
	ruleArtifactType
{ after(grammarAccess.getOseeTypeAccess().getArtifactTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOseeTypeAccess().getRelationTypeParserRuleCall_1()); }
	ruleRelationType
{ after(grammarAccess.getOseeTypeAccess().getRelationTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOseeTypeAccess().getAttributeTypeParserRuleCall_2()); }
	ruleAttributeType
{ after(grammarAccess.getOseeTypeAccess().getAttributeTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getOseeTypeAccess().getOseeEnumTypeParserRuleCall_3()); }
	ruleOseeEnumType
{ after(grammarAccess.getOseeTypeAccess().getOseeEnumTypeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__DataProviderAlternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderDefaultAttributeDataProviderKeyword_5_0_0()); }

	'DefaultAttributeDataProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getDataProviderDefaultAttributeDataProviderKeyword_5_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderUriAttributeDataProviderKeyword_5_0_1()); }

	'UriAttributeDataProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getDataProviderUriAttributeDataProviderKeyword_5_0_1()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderMappedAttributeDataProviderKeyword_5_0_2()); }

	'MappedAttributeDataProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getDataProviderMappedAttributeDataProviderKeyword_5_0_2()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderQUALIFIED_NAMEParserRuleCall_5_0_3()); }
	ruleQUALIFIED_NAME
{ after(grammarAccess.getAttributeTypeAccess().getDataProviderQUALIFIED_NAMEParserRuleCall_5_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__MaxAlternatives_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMaxDIGITSParserRuleCall_9_0_0()); }
	ruleDIGITS
{ after(grammarAccess.getAttributeTypeAccess().getMaxDIGITSParserRuleCall_9_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getMaxUnlimitedKeyword_9_0_1()); }

	'unlimited' 

{ after(grammarAccess.getAttributeTypeAccess().getMaxUnlimitedKeyword_9_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__TaggerIdAlternatives_10_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdDefaultAttributeTaggerProviderKeyword_10_1_0_0()); }

	'DefaultAttributeTaggerProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdDefaultAttributeTaggerProviderKeyword_10_1_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdQUALIFIED_NAMEParserRuleCall_10_1_0_1()); }
	ruleQUALIFIED_NAME
{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdQUALIFIED_NAMEParserRuleCall_10_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeBaseType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeBaseTypeAccess().getBooleanAttributeKeyword_0()); }

	'BooleanAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getBooleanAttributeKeyword_0()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getCompressedContentAttributeKeyword_1()); }

	'CompressedContentAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getCompressedContentAttributeKeyword_1()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getDateAttributeKeyword_2()); }

	'DateAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getDateAttributeKeyword_2()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getEnumeratedAttributeKeyword_3()); }

	'EnumeratedAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getEnumeratedAttributeKeyword_3()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getFloatingPointAttributeKeyword_4()); }

	'FloatingPointAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getFloatingPointAttributeKeyword_4()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getIntegerAttributeKeyword_5()); }

	'IntegerAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getIntegerAttributeKeyword_5()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getJavaObjectAttributeKeyword_6()); }

	'JavaObjectAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getJavaObjectAttributeKeyword_6()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getStringAttributeKeyword_7()); }

	'StringAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getStringAttributeKeyword_7()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getWordAttributeKeyword_8()); }

	'WordAttribute' 

{ after(grammarAccess.getAttributeBaseTypeAccess().getWordAttributeKeyword_8()); }
)

    |(
{ before(grammarAccess.getAttributeBaseTypeAccess().getQUALIFIED_NAMEParserRuleCall_9()); }
	ruleQUALIFIED_NAME
{ after(grammarAccess.getAttributeBaseTypeAccess().getQUALIFIED_NAMEParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__DefaultOrderTypeAlternatives_12_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeLexicographical_AscendingKeyword_12_0_0()); }

	'Lexicographical_Ascending' 

{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeLexicographical_AscendingKeyword_12_0_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeLexicographical_DescendingKeyword_12_0_1()); }

	'Lexicographical_Descending' 

{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeLexicographical_DescendingKeyword_12_0_1()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeUnorderedKeyword_12_0_2()); }

	'Unordered' 

{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeUnorderedKeyword_12_0_2()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeIDTerminalRuleCall_12_0_3()); }
	RULE_ID
{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeIDTerminalRuleCall_12_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMultiplicityEnum__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_MANYEnumLiteralDeclaration_0()); }
(	'ONE_TO_MANY' 
)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getONE_TO_MANYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_MANYEnumLiteralDeclaration_1()); }
(	'MANY_TO_MANY' 
)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_MANYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_ONEEnumLiteralDeclaration_2()); }
(	'MANY_TO_ONE' 
)
{ after(grammarAccess.getRelationMultiplicityEnumAccess().getMANY_TO_ONEEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
(rule__Model__ImportsAssignment_0)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)

	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTypesAssignment_1()); }
(rule__Model__TypesAssignment_1)*
{ after(grammarAccess.getModelAccess().getTypesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIED_NAME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_0()); }
)

	rule__QUALIFIED_NAME__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIED_NAME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getGroup_1()); }
(rule__QUALIFIED_NAME__Group_1__0)*
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIED_NAME__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQUALIFIED_NAMEAccess().getFullStopKeyword_1_0()); }
)

	rule__QUALIFIED_NAME__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIED_NAME__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArtifactType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getAbstractKeyword_0()); }
(
	'abstract' 
)?
{ after(grammarAccess.getArtifactTypeAccess().getAbstractKeyword_0()); }
)

	rule__ArtifactType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getArtifactTypeKeyword_1()); }

	'artifactType' 

{ after(grammarAccess.getArtifactTypeAccess().getArtifactTypeKeyword_1()); }
)

	rule__ArtifactType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getNameAssignment_2()); }
(rule__ArtifactType__NameAssignment_2)
{ after(grammarAccess.getArtifactTypeAccess().getNameAssignment_2()); }
)

	rule__ArtifactType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getGroup_3()); }
(rule__ArtifactType__Group_3__0)?
{ after(grammarAccess.getArtifactTypeAccess().getGroup_3()); }
)

	rule__ArtifactType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getArtifactTypeAccess().getLeftCurlyBracketKeyword_4()); }
)

	rule__ArtifactType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getValidAttributeTypesAssignment_5()); }
(rule__ArtifactType__ValidAttributeTypesAssignment_5)*
{ after(grammarAccess.getArtifactTypeAccess().getValidAttributeTypesAssignment_5()); }
)

	rule__ArtifactType__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getArtifactTypeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ArtifactType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getArtifactTypeAccess().getExtendsKeyword_3_0()); }
)

	rule__ArtifactType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypeAssignment_3_1()); }
(rule__ArtifactType__SuperArtifactTypeAssignment_3_1)
{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getAttributeTypeRefAccess().getAttributeKeyword_0()); }
)

	rule__AttributeTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAssignment_1()); }
(rule__AttributeTypeRef__ValidAttributeTypeAssignment_1)
{ after(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeKeyword_0()); }

	'attributeType' 

{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeKeyword_0()); }
)

	rule__AttributeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getNameAssignment_1()); }
(rule__AttributeType__NameAssignment_1)
{ after(grammarAccess.getAttributeTypeAccess().getNameAssignment_1()); }
)

	rule__AttributeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_2()); }
(rule__AttributeType__Group_2__0)
{ after(grammarAccess.getAttributeTypeAccess().getGroup_2()); }
)

	rule__AttributeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAttributeTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

	rule__AttributeType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderKeyword_4()); }

	'dataProvider' 

{ after(grammarAccess.getAttributeTypeAccess().getDataProviderKeyword_4()); }
)

	rule__AttributeType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderAssignment_5()); }
(rule__AttributeType__DataProviderAssignment_5)
{ after(grammarAccess.getAttributeTypeAccess().getDataProviderAssignment_5()); }
)

	rule__AttributeType__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMinKeyword_6()); }

	'min' 

{ after(grammarAccess.getAttributeTypeAccess().getMinKeyword_6()); }
)

	rule__AttributeType__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMinAssignment_7()); }
(rule__AttributeType__MinAssignment_7)
{ after(grammarAccess.getAttributeTypeAccess().getMinAssignment_7()); }
)

	rule__AttributeType__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMaxKeyword_8()); }

	'max' 

{ after(grammarAccess.getAttributeTypeAccess().getMaxKeyword_8()); }
)

	rule__AttributeType__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMaxAssignment_9()); }
(rule__AttributeType__MaxAssignment_9)
{ after(grammarAccess.getAttributeTypeAccess().getMaxAssignment_9()); }
)

	rule__AttributeType__Group__10
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_10()); }
(rule__AttributeType__Group_10__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_10()); }
)

	rule__AttributeType__Group__11
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_11()); }
(rule__AttributeType__Group_11__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_11()); }
)

	rule__AttributeType__Group__12
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_12()); }
(rule__AttributeType__Group_12__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_12()); }
)

	rule__AttributeType__Group__13
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_13()); }
(rule__AttributeType__Group_13__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_13()); }
)

	rule__AttributeType__Group__14
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getGroup_14()); }
(rule__AttributeType__Group_14__0)?
{ after(grammarAccess.getAttributeTypeAccess().getGroup_14()); }
)

	rule__AttributeType__Group__15
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getRightCurlyBracketKeyword_15()); }

	'}' 

{ after(grammarAccess.getAttributeTypeAccess().getRightCurlyBracketKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__AttributeType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getAttributeTypeAccess().getExtendsKeyword_2_0()); }
)

	rule__AttributeType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getBaseAttributeTypeAssignment_2_1()); }
(rule__AttributeType__BaseAttributeTypeAssignment_2_1)
{ after(grammarAccess.getAttributeTypeAccess().getBaseAttributeTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdKeyword_10_0()); }

	'taggerId' 

{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdKeyword_10_0()); }
)

	rule__AttributeType__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdAssignment_10_1()); }
(rule__AttributeType__TaggerIdAssignment_10_1)
{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getEnumTypeKeyword_11_0()); }

	'enumType' 

{ after(grammarAccess.getAttributeTypeAccess().getEnumTypeKeyword_11_0()); }
)

	rule__AttributeType__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getEnumTypeAssignment_11_1()); }
(rule__AttributeType__EnumTypeAssignment_11_1)
{ after(grammarAccess.getAttributeTypeAccess().getEnumTypeAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDescriptionKeyword_12_0()); }

	'description' 

{ after(grammarAccess.getAttributeTypeAccess().getDescriptionKeyword_12_0()); }
)

	rule__AttributeType__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDescriptionAssignment_12_1()); }
(rule__AttributeType__DescriptionAssignment_12_1)
{ after(grammarAccess.getAttributeTypeAccess().getDescriptionAssignment_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDefaultValueKeyword_13_0()); }

	'defaultValue' 

{ after(grammarAccess.getAttributeTypeAccess().getDefaultValueKeyword_13_0()); }
)

	rule__AttributeType__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDefaultValueAssignment_13_1()); }
(rule__AttributeType__DefaultValueAssignment_13_1)
{ after(grammarAccess.getAttributeTypeAccess().getDefaultValueAssignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeType__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getFileExtensionKeyword_14_0()); }

	'fileExtension' 

{ after(grammarAccess.getAttributeTypeAccess().getFileExtensionKeyword_14_0()); }
)

	rule__AttributeType__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getFileExtensionAssignment_14_1()); }
(rule__AttributeType__FileExtensionAssignment_14_1)
{ after(grammarAccess.getAttributeTypeAccess().getFileExtensionAssignment_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OseeEnumType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getOseeEnumTypeKeyword_0()); }

	'oseeEnumType' 

{ after(grammarAccess.getOseeEnumTypeAccess().getOseeEnumTypeKeyword_0()); }
)

	rule__OseeEnumType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getNameAssignment_1()); }
(rule__OseeEnumType__NameAssignment_1)
{ after(grammarAccess.getOseeEnumTypeAccess().getNameAssignment_1()); }
)

	rule__OseeEnumType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getOseeEnumTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__OseeEnumType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getEnumsAssignment_3()); }
(rule__OseeEnumType__EnumsAssignment_3)*
{ after(grammarAccess.getOseeEnumTypeAccess().getEnumsAssignment_3()); }
)

	rule__OseeEnumType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnumType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getOseeEnumTypeAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OseeEnum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumAccess().getNameAssignment_0()); }
(rule__OseeEnum__NameAssignment_0)
{ after(grammarAccess.getOseeEnumAccess().getNameAssignment_0()); }
)

	rule__OseeEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OseeEnum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumAccess().getOrdinalAssignment_1()); }
(rule__OseeEnum__OrdinalAssignment_1)?
{ after(grammarAccess.getOseeEnumAccess().getOrdinalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRelationTypeKeyword_0()); }

	'relationType' 

{ after(grammarAccess.getRelationTypeAccess().getRelationTypeKeyword_0()); }
)

	rule__RelationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getNameAssignment_1()); }
(rule__RelationType__NameAssignment_1)
{ after(grammarAccess.getRelationTypeAccess().getNameAssignment_1()); }
)

	rule__RelationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRelationTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__RelationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideANameKeyword_3()); }

	'sideAName' 

{ after(grammarAccess.getRelationTypeAccess().getSideANameKeyword_3()); }
)

	rule__RelationType__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideANameAssignment_4()); }
(rule__RelationType__SideANameAssignment_4)
{ after(grammarAccess.getRelationTypeAccess().getSideANameAssignment_4()); }
)

	rule__RelationType__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeKeyword_5()); }

	'sideAArtifactType' 

{ after(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeKeyword_5()); }
)

	rule__RelationType__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeAssignment_6()); }
(rule__RelationType__SideAArtifactTypeAssignment_6)
{ after(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeAssignment_6()); }
)

	rule__RelationType__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBNameKeyword_7()); }

	'sideBName' 

{ after(grammarAccess.getRelationTypeAccess().getSideBNameKeyword_7()); }
)

	rule__RelationType__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBNameAssignment_8()); }
(rule__RelationType__SideBNameAssignment_8)
{ after(grammarAccess.getRelationTypeAccess().getSideBNameAssignment_8()); }
)

	rule__RelationType__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeKeyword_9()); }

	'sideBArtifactType' 

{ after(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeKeyword_9()); }
)

	rule__RelationType__Group__10
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeAssignment_10()); }
(rule__RelationType__SideBArtifactTypeAssignment_10)
{ after(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeAssignment_10()); }
)

	rule__RelationType__Group__11
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeKeyword_11()); }

	'defaultOrderType' 

{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeKeyword_11()); }
)

	rule__RelationType__Group__12
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeAssignment_12()); }
(rule__RelationType__DefaultOrderTypeAssignment_12)
{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeAssignment_12()); }
)

	rule__RelationType__Group__13
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getMultiplicityKeyword_13()); }

	'multiplicity' 

{ after(grammarAccess.getRelationTypeAccess().getMultiplicityKeyword_13()); }
)

	rule__RelationType__Group__14
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getMultiplicityAssignment_14()); }
(rule__RelationType__MultiplicityAssignment_14)
{ after(grammarAccess.getRelationTypeAccess().getMultiplicityAssignment_14()); }
)

	rule__RelationType__Group__15
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationType__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRightCurlyBracketKeyword_15()); }

	'}' 

{ after(grammarAccess.getRelationTypeAccess().getRightCurlyBracketKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__Model__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTypesOseeTypeParserRuleCall_1_0()); }
	ruleOseeType{ after(grammarAccess.getModelAccess().getTypesOseeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getNameQUALIFIED_NAMEParserRuleCall_2_0()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getArtifactTypeAccess().getNameQUALIFIED_NAMEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__SuperArtifactTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypeArtifactTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypeArtifactTypeIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypeArtifactTypeIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getArtifactTypeAccess().getSuperArtifactTypeArtifactTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactType__ValidAttributeTypesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactTypeAccess().getValidAttributeTypesAttributeTypeRefParserRuleCall_5_0()); }
	ruleAttributeTypeRef{ after(grammarAccess.getArtifactTypeAccess().getValidAttributeTypesAttributeTypeRefParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeTypeRef__ValidAttributeTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAttributeTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAttributeTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAttributeTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAttributeTypeRefAccess().getValidAttributeTypeAttributeTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getNameQUALIFIED_NAMEParserRuleCall_1_0()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getAttributeTypeAccess().getNameQUALIFIED_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__BaseAttributeTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0()); }
	ruleAttributeBaseType{ after(grammarAccess.getAttributeTypeAccess().getBaseAttributeTypeAttributeBaseTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__DataProviderAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDataProviderAlternatives_5_0()); }
(rule__AttributeType__DataProviderAlternatives_5_0)
{ after(grammarAccess.getAttributeTypeAccess().getDataProviderAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__MinAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMinDIGITSParserRuleCall_7_0()); }
	ruleDIGITS{ after(grammarAccess.getAttributeTypeAccess().getMinDIGITSParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__MaxAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getMaxAlternatives_9_0()); }
(rule__AttributeType__MaxAlternatives_9_0)
{ after(grammarAccess.getAttributeTypeAccess().getMaxAlternatives_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__TaggerIdAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getTaggerIdAlternatives_10_1_0()); }
(rule__AttributeType__TaggerIdAlternatives_10_1_0)
{ after(grammarAccess.getAttributeTypeAccess().getTaggerIdAlternatives_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__EnumTypeAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getEnumTypeOseeEnumTypeCrossReference_11_1_0()); }
(
{ before(grammarAccess.getAttributeTypeAccess().getEnumTypeOseeEnumTypeIDTerminalRuleCall_11_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeTypeAccess().getEnumTypeOseeEnumTypeIDTerminalRuleCall_11_1_0_1()); }
)
{ after(grammarAccess.getAttributeTypeAccess().getEnumTypeOseeEnumTypeCrossReference_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__DescriptionAssignment_12_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDescriptionSTRINGTerminalRuleCall_12_1_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeTypeAccess().getDescriptionSTRINGTerminalRuleCall_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__DefaultValueAssignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDefaultValueSTRINGTerminalRuleCall_13_1_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeTypeAccess().getDefaultValueSTRINGTerminalRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__FileExtensionAssignment_14_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getFileExtensionSTRINGTerminalRuleCall_14_1_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeTypeAccess().getFileExtensionSTRINGTerminalRuleCall_14_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getNameQUALIFIED_NAMEParserRuleCall_1_0()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getOseeEnumTypeAccess().getNameQUALIFIED_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnumType__EnumsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumTypeAccess().getEnumsOseeEnumParserRuleCall_3_0()); }
	ruleOseeEnum{ after(grammarAccess.getOseeEnumTypeAccess().getEnumsOseeEnumParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnum__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getOseeEnumAccess().getNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OseeEnum__OrdinalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOseeEnumAccess().getOrdinalDIGITSParserRuleCall_1_0()); }
	ruleDIGITS{ after(grammarAccess.getOseeEnumAccess().getOrdinalDIGITSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getNameQUALIFIED_NAMEParserRuleCall_1_0()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getRelationTypeAccess().getNameQUALIFIED_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__SideANameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideANameSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getRelationTypeAccess().getSideANameSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__SideAArtifactTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeArtifactTypeCrossReference_6_0()); }
(
{ before(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeArtifactTypeIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeArtifactTypeIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getRelationTypeAccess().getSideAArtifactTypeArtifactTypeCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__SideBNameAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBNameSTRINGTerminalRuleCall_8_0()); }
	RULE_STRING{ after(grammarAccess.getRelationTypeAccess().getSideBNameSTRINGTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__SideBArtifactTypeAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeArtifactTypeCrossReference_10_0()); }
(
{ before(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeArtifactTypeIDTerminalRuleCall_10_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeArtifactTypeIDTerminalRuleCall_10_0_1()); }
)
{ after(grammarAccess.getRelationTypeAccess().getSideBArtifactTypeArtifactTypeCrossReference_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__DefaultOrderTypeAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeAlternatives_12_0()); }
(rule__RelationType__DefaultOrderTypeAlternatives_12_0)
{ after(grammarAccess.getRelationTypeAccess().getDefaultOrderTypeAlternatives_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__MultiplicityAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getMultiplicityRelationMultiplicityEnumEnumRuleCall_14_0()); }
	ruleRelationMultiplicityEnum{ after(grammarAccess.getRelationTypeAccess().getMultiplicityRelationMultiplicityEnumEnumRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


