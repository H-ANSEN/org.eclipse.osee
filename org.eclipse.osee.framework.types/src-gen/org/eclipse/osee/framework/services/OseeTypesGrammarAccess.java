/*
* generated by Xtext
*/

package org.eclipse.osee.framework.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class OseeTypesGrammarAccess implements IGrammarAccess {
	
	
	public class OseeTypeModelElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeTypeModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypesOseeTypeParserRuleCall_1_0 = (RuleCall)cTypesAssignment_1.eContents().get(0);
		
		//OseeTypeModel:
		//  imports+=Import* types+=OseeType*;
		public ParserRule getRule() { return rule; }

		//imports+=Import* types+=OseeType*
		public Group getGroup() { return cGroup; }

		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }

		//types+=OseeType*
		public Assignment getTypesAssignment_1() { return cTypesAssignment_1; }

		//OseeType
		public RuleCall getTypesOseeTypeParserRuleCall_1_0() { return cTypesOseeTypeParserRuleCall_1_0; }
	}

	public class ImportElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		
		//Import:
		//  "import" importURI=STRING;
		public ParserRule getRule() { return rule; }

		//"import" importURI=STRING
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
	}

	public class NAME_REFERENCEElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NAME_REFERENCE");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NAME_REFERENCE returns ecore::EString:
		//  STRING;
		public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class QUALIFIED_NAMEElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QUALIFIED_NAME");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QUALIFIED_NAME returns ecore::EString:
		//  ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class OseeTypeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cArtifactTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRelationTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAttributeTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOseeEnumTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//OseeType:
		//  ArtifactType|RelationType|AttributeType|OseeEnumType;
		public ParserRule getRule() { return rule; }

		//ArtifactType|RelationType|AttributeType|OseeEnumType
		public Alternatives getAlternatives() { return cAlternatives; }

		//ArtifactType
		public RuleCall getArtifactTypeParserRuleCall_0() { return cArtifactTypeParserRuleCall_0; }

		//RelationType
		public RuleCall getRelationTypeParserRuleCall_1() { return cRelationTypeParserRuleCall_1; }

		//AttributeType
		public RuleCall getAttributeTypeParserRuleCall_2() { return cAttributeTypeParserRuleCall_2; }

		//OseeEnumType
		public RuleCall getOseeEnumTypeParserRuleCall_3() { return cOseeEnumTypeParserRuleCall_3; }
	}

	public class ArtifactTypeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArtifactType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_0_0 = (Keyword)cAbstractAssignment_0.eContents().get(0);
		private final Keyword cArtifactTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNAME_REFERENCEParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperArtifactTypesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperArtifactTypesArtifactTypeCrossReference_3_1_0 = (CrossReference)cSuperArtifactTypesAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_1_0_1 = (RuleCall)cSuperArtifactTypesArtifactTypeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSuperArtifactTypesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cSuperArtifactTypesArtifactTypeCrossReference_3_2_1_0 = (CrossReference)cSuperArtifactTypesAssignment_3_2_1.eContents().get(0);
		private final RuleCall cSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_2_1_0_1 = (RuleCall)cSuperArtifactTypesArtifactTypeCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOverridesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOverrideAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cOverrideArtifactTypeCrossReference_4_1_0 = (CrossReference)cOverrideAssignment_4_1.eContents().get(0);
		private final RuleCall cOverrideArtifactTypeNAME_REFERENCEParserRuleCall_4_1_0_1 = (RuleCall)cOverrideArtifactTypeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeGuidAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeGuidSTRINGTerminalRuleCall_6_0 = (RuleCall)cTypeGuidAssignment_6.eContents().get(0);
		private final Assignment cValidAttributeTypesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValidAttributeTypesAttributeTypeRefParserRuleCall_7_0 = (RuleCall)cValidAttributeTypesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ArtifactType:
		//  abstract?="abstract"? "artifactType" name=NAME_REFERENCE ("extends"
		//  superArtifactTypes+=[ArtifactType|NAME_REFERENCE] ("," superArtifactTypes+=[
		//  ArtifactType|NAME_REFERENCE])*)? ("overrides" override=[ArtifactType|
		//  NAME_REFERENCE])? "{" typeGuid=STRING? validAttributeTypes+=AttributeTypeRef* "}";
		public ParserRule getRule() { return rule; }

		//abstract?="abstract"? "artifactType" name=NAME_REFERENCE ("extends"
		//superArtifactTypes+=[ArtifactType|NAME_REFERENCE] ("," superArtifactTypes+=[
		//ArtifactType|NAME_REFERENCE])*)? ("overrides" override=[ArtifactType|
		//NAME_REFERENCE])? "{" typeGuid=STRING? validAttributeTypes+=AttributeTypeRef* "}"
		public Group getGroup() { return cGroup; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_0() { return cAbstractAssignment_0; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_0_0() { return cAbstractAbstractKeyword_0_0; }

		//"artifactType"
		public Keyword getArtifactTypeKeyword_1() { return cArtifactTypeKeyword_1; }

		//name=NAME_REFERENCE
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//NAME_REFERENCE
		public RuleCall getNameNAME_REFERENCEParserRuleCall_2_0() { return cNameNAME_REFERENCEParserRuleCall_2_0; }

		//("extends" superArtifactTypes+=[ArtifactType|NAME_REFERENCE] (","
		//superArtifactTypes+=[ArtifactType|NAME_REFERENCE])*)?
		public Group getGroup_3() { return cGroup_3; }

		//"extends"
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//superArtifactTypes+=[ArtifactType|NAME_REFERENCE]
		public Assignment getSuperArtifactTypesAssignment_3_1() { return cSuperArtifactTypesAssignment_3_1; }

		//[ArtifactType|NAME_REFERENCE]
		public CrossReference getSuperArtifactTypesArtifactTypeCrossReference_3_1_0() { return cSuperArtifactTypesArtifactTypeCrossReference_3_1_0; }

		//NAME_REFERENCE
		public RuleCall getSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_1_0_1() { return cSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_1_0_1; }

		//("," superArtifactTypes+=[ArtifactType|NAME_REFERENCE])*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//superArtifactTypes+=[ArtifactType|NAME_REFERENCE]
		public Assignment getSuperArtifactTypesAssignment_3_2_1() { return cSuperArtifactTypesAssignment_3_2_1; }

		//[ArtifactType|NAME_REFERENCE]
		public CrossReference getSuperArtifactTypesArtifactTypeCrossReference_3_2_1_0() { return cSuperArtifactTypesArtifactTypeCrossReference_3_2_1_0; }

		//NAME_REFERENCE
		public RuleCall getSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_2_1_0_1() { return cSuperArtifactTypesArtifactTypeNAME_REFERENCEParserRuleCall_3_2_1_0_1; }

		//("overrides" override=[ArtifactType|NAME_REFERENCE])?
		public Group getGroup_4() { return cGroup_4; }

		//"overrides"
		public Keyword getOverridesKeyword_4_0() { return cOverridesKeyword_4_0; }

		//override=[ArtifactType|NAME_REFERENCE]
		public Assignment getOverrideAssignment_4_1() { return cOverrideAssignment_4_1; }

		//[ArtifactType|NAME_REFERENCE]
		public CrossReference getOverrideArtifactTypeCrossReference_4_1_0() { return cOverrideArtifactTypeCrossReference_4_1_0; }

		//NAME_REFERENCE
		public RuleCall getOverrideArtifactTypeNAME_REFERENCEParserRuleCall_4_1_0_1() { return cOverrideArtifactTypeNAME_REFERENCEParserRuleCall_4_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//typeGuid=STRING?
		public Assignment getTypeGuidAssignment_6() { return cTypeGuidAssignment_6; }

		//STRING
		public RuleCall getTypeGuidSTRINGTerminalRuleCall_6_0() { return cTypeGuidSTRINGTerminalRuleCall_6_0; }

		//validAttributeTypes+=AttributeTypeRef*
		public Assignment getValidAttributeTypesAssignment_7() { return cValidAttributeTypesAssignment_7; }

		//AttributeTypeRef
		public RuleCall getValidAttributeTypesAttributeTypeRefParserRuleCall_7_0() { return cValidAttributeTypesAttributeTypeRefParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class AttributeTypeRefElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeTypeRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValidAttributeTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cValidAttributeTypeAttributeTypeCrossReference_1_0 = (CrossReference)cValidAttributeTypeAssignment_1.eContents().get(0);
		private final RuleCall cValidAttributeTypeAttributeTypeNAME_REFERENCEParserRuleCall_1_0_1 = (RuleCall)cValidAttributeTypeAttributeTypeCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cBranchGuidKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBranchGuidAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBranchGuidSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cBranchGuidAssignment_2_1.eContents().get(0);
		
		//AttributeTypeRef:
		//  "attribute" validAttributeType=[AttributeType|NAME_REFERENCE] ("branchGuid"
		//  branchGuid=STRING)?;
		public ParserRule getRule() { return rule; }

		//"attribute" validAttributeType=[AttributeType|NAME_REFERENCE] ("branchGuid"
		//branchGuid=STRING)?
		public Group getGroup() { return cGroup; }

		//"attribute"
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }

		//validAttributeType=[AttributeType|NAME_REFERENCE]
		public Assignment getValidAttributeTypeAssignment_1() { return cValidAttributeTypeAssignment_1; }

		//[AttributeType|NAME_REFERENCE]
		public CrossReference getValidAttributeTypeAttributeTypeCrossReference_1_0() { return cValidAttributeTypeAttributeTypeCrossReference_1_0; }

		//NAME_REFERENCE
		public RuleCall getValidAttributeTypeAttributeTypeNAME_REFERENCEParserRuleCall_1_0_1() { return cValidAttributeTypeAttributeTypeNAME_REFERENCEParserRuleCall_1_0_1; }

		//("branchGuid" branchGuid=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//"branchGuid"
		public Keyword getBranchGuidKeyword_2_0() { return cBranchGuidKeyword_2_0; }

		//branchGuid=STRING
		public Assignment getBranchGuidAssignment_2_1() { return cBranchGuidAssignment_2_1; }

		//STRING
		public RuleCall getBranchGuidSTRINGTerminalRuleCall_2_1_0() { return cBranchGuidSTRINGTerminalRuleCall_2_1_0; }
	}

	public class AttributeTypeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeGuidAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeGuidSTRINGTerminalRuleCall_0_0 = (RuleCall)cTypeGuidAssignment_0.eContents().get(0);
		private final Keyword cAttributeTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNAME_REFERENCEParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBaseAttributeTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBaseAttributeTypeAttributeBaseTypeParserRuleCall_3_1_0 = (RuleCall)cBaseAttributeTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOverridesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOverrideAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cOverrideAttributeTypeCrossReference_4_1_0 = (CrossReference)cOverrideAssignment_4_1.eContents().get(0);
		private final RuleCall cOverrideAttributeTypeNAME_REFERENCEParserRuleCall_4_1_0_1 = (RuleCall)cOverrideAttributeTypeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cDataProviderKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDataProviderAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Alternatives cDataProviderAlternatives_7_0 = (Alternatives)cDataProviderAssignment_7.eContents().get(0);
		private final Keyword cDataProviderDefaultAttributeDataProviderKeyword_7_0_0 = (Keyword)cDataProviderAlternatives_7_0.eContents().get(0);
		private final Keyword cDataProviderUriAttributeDataProviderKeyword_7_0_1 = (Keyword)cDataProviderAlternatives_7_0.eContents().get(1);
		private final Keyword cDataProviderMappedAttributeDataProviderKeyword_7_0_2 = (Keyword)cDataProviderAlternatives_7_0.eContents().get(2);
		private final RuleCall cDataProviderQUALIFIED_NAMEParserRuleCall_7_0_3 = (RuleCall)cDataProviderAlternatives_7_0.eContents().get(3);
		private final Keyword cMinKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cMinAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMinWHOLE_NUM_STRTerminalRuleCall_9_0 = (RuleCall)cMinAssignment_9.eContents().get(0);
		private final Keyword cMaxKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cMaxAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final Alternatives cMaxAlternatives_11_0 = (Alternatives)cMaxAssignment_11.eContents().get(0);
		private final RuleCall cMaxWHOLE_NUM_STRTerminalRuleCall_11_0_0 = (RuleCall)cMaxAlternatives_11_0.eContents().get(0);
		private final Keyword cMaxUnlimitedKeyword_11_0_1 = (Keyword)cMaxAlternatives_11_0.eContents().get(1);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cTaggerIdKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cTaggerIdAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final Alternatives cTaggerIdAlternatives_12_1_0 = (Alternatives)cTaggerIdAssignment_12_1.eContents().get(0);
		private final Keyword cTaggerIdDefaultAttributeTaggerProviderKeyword_12_1_0_0 = (Keyword)cTaggerIdAlternatives_12_1_0.eContents().get(0);
		private final RuleCall cTaggerIdQUALIFIED_NAMEParserRuleCall_12_1_0_1 = (RuleCall)cTaggerIdAlternatives_12_1_0.eContents().get(1);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cEnumTypeKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cEnumTypeAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final CrossReference cEnumTypeOseeEnumTypeCrossReference_13_1_0 = (CrossReference)cEnumTypeAssignment_13_1.eContents().get(0);
		private final RuleCall cEnumTypeOseeEnumTypeNAME_REFERENCEParserRuleCall_13_1_0_1 = (RuleCall)cEnumTypeOseeEnumTypeCrossReference_13_1_0.eContents().get(1);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cDescriptionKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cDescriptionAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_14_1_0 = (RuleCall)cDescriptionAssignment_14_1.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cDefaultValueKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cDefaultValueAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_15_1_0 = (RuleCall)cDefaultValueAssignment_15_1.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cFileExtensionKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cFileExtensionAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cFileExtensionSTRINGTerminalRuleCall_16_1_0 = (RuleCall)cFileExtensionAssignment_16_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//AttributeType:
		//  typeGuid=STRING? "attributeType" name=NAME_REFERENCE ("extends" baseAttributeType=
		//  AttributeBaseType) ("overrides" override=[AttributeType|NAME_REFERENCE])? "{"
		//  "dataProvider" dataProvider=( "DefaultAttributeDataProvider" |
		//  "UriAttributeDataProvider" | "MappedAttributeDataProvider" | QUALIFIED_NAME ) "min" min
		//  =WHOLE_NUM_STR "max" max=( WHOLE_NUM_STR | "unlimited" ) ("taggerId" taggerId=(
		//  "DefaultAttributeTaggerProvider" | QUALIFIED_NAME ))? ("enumType" enumType=[
		//  OseeEnumType|NAME_REFERENCE])? ("description" description=STRING)? ("defaultValue"
		//  defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//typeGuid=STRING? "attributeType" name=NAME_REFERENCE ("extends" baseAttributeType=
		//AttributeBaseType) ("overrides" override=[AttributeType|NAME_REFERENCE])? "{"
		//"dataProvider" dataProvider=( "DefaultAttributeDataProvider" |
		//"UriAttributeDataProvider" | "MappedAttributeDataProvider" | QUALIFIED_NAME ) "min" min
		//=WHOLE_NUM_STR "max" max=( WHOLE_NUM_STR | "unlimited" ) ("taggerId" taggerId=(
		//"DefaultAttributeTaggerProvider" | QUALIFIED_NAME ))? ("enumType" enumType=[
		//OseeEnumType|NAME_REFERENCE])? ("description" description=STRING)? ("defaultValue"
		//defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//typeGuid=STRING?
		public Assignment getTypeGuidAssignment_0() { return cTypeGuidAssignment_0; }

		//STRING
		public RuleCall getTypeGuidSTRINGTerminalRuleCall_0_0() { return cTypeGuidSTRINGTerminalRuleCall_0_0; }

		//"attributeType"
		public Keyword getAttributeTypeKeyword_1() { return cAttributeTypeKeyword_1; }

		//name=NAME_REFERENCE
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//NAME_REFERENCE
		public RuleCall getNameNAME_REFERENCEParserRuleCall_2_0() { return cNameNAME_REFERENCEParserRuleCall_2_0; }

		//"extends" baseAttributeType=AttributeBaseType
		public Group getGroup_3() { return cGroup_3; }

		//"extends"
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//baseAttributeType=AttributeBaseType
		public Assignment getBaseAttributeTypeAssignment_3_1() { return cBaseAttributeTypeAssignment_3_1; }

		//AttributeBaseType
		public RuleCall getBaseAttributeTypeAttributeBaseTypeParserRuleCall_3_1_0() { return cBaseAttributeTypeAttributeBaseTypeParserRuleCall_3_1_0; }

		//("overrides" override=[AttributeType|NAME_REFERENCE])?
		public Group getGroup_4() { return cGroup_4; }

		//"overrides"
		public Keyword getOverridesKeyword_4_0() { return cOverridesKeyword_4_0; }

		//override=[AttributeType|NAME_REFERENCE]
		public Assignment getOverrideAssignment_4_1() { return cOverrideAssignment_4_1; }

		//[AttributeType|NAME_REFERENCE]
		public CrossReference getOverrideAttributeTypeCrossReference_4_1_0() { return cOverrideAttributeTypeCrossReference_4_1_0; }

		//NAME_REFERENCE
		public RuleCall getOverrideAttributeTypeNAME_REFERENCEParserRuleCall_4_1_0_1() { return cOverrideAttributeTypeNAME_REFERENCEParserRuleCall_4_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//"dataProvider"
		public Keyword getDataProviderKeyword_6() { return cDataProviderKeyword_6; }

		//dataProvider=( "DefaultAttributeDataProvider" | "UriAttributeDataProvider" |
		//"MappedAttributeDataProvider" | QUALIFIED_NAME )
		public Assignment getDataProviderAssignment_7() { return cDataProviderAssignment_7; }

		//"DefaultAttributeDataProvider"|"UriAttributeDataProvider"|
		//"MappedAttributeDataProvider"|QUALIFIED_NAME
		public Alternatives getDataProviderAlternatives_7_0() { return cDataProviderAlternatives_7_0; }

		//"DefaultAttributeDataProvider"
		public Keyword getDataProviderDefaultAttributeDataProviderKeyword_7_0_0() { return cDataProviderDefaultAttributeDataProviderKeyword_7_0_0; }

		//"UriAttributeDataProvider"
		public Keyword getDataProviderUriAttributeDataProviderKeyword_7_0_1() { return cDataProviderUriAttributeDataProviderKeyword_7_0_1; }

		//"MappedAttributeDataProvider"
		public Keyword getDataProviderMappedAttributeDataProviderKeyword_7_0_2() { return cDataProviderMappedAttributeDataProviderKeyword_7_0_2; }

		//QUALIFIED_NAME
		public RuleCall getDataProviderQUALIFIED_NAMEParserRuleCall_7_0_3() { return cDataProviderQUALIFIED_NAMEParserRuleCall_7_0_3; }

		//"min"
		public Keyword getMinKeyword_8() { return cMinKeyword_8; }

		//min=WHOLE_NUM_STR
		public Assignment getMinAssignment_9() { return cMinAssignment_9; }

		//WHOLE_NUM_STR
		public RuleCall getMinWHOLE_NUM_STRTerminalRuleCall_9_0() { return cMinWHOLE_NUM_STRTerminalRuleCall_9_0; }

		//"max"
		public Keyword getMaxKeyword_10() { return cMaxKeyword_10; }

		//max=( WHOLE_NUM_STR | "unlimited" )
		public Assignment getMaxAssignment_11() { return cMaxAssignment_11; }

		//WHOLE_NUM_STR|"unlimited"
		public Alternatives getMaxAlternatives_11_0() { return cMaxAlternatives_11_0; }

		//WHOLE_NUM_STR
		public RuleCall getMaxWHOLE_NUM_STRTerminalRuleCall_11_0_0() { return cMaxWHOLE_NUM_STRTerminalRuleCall_11_0_0; }

		//"unlimited"
		public Keyword getMaxUnlimitedKeyword_11_0_1() { return cMaxUnlimitedKeyword_11_0_1; }

		//("taggerId" taggerId=( "DefaultAttributeTaggerProvider" | QUALIFIED_NAME ))?
		public Group getGroup_12() { return cGroup_12; }

		//"taggerId"
		public Keyword getTaggerIdKeyword_12_0() { return cTaggerIdKeyword_12_0; }

		//taggerId=( "DefaultAttributeTaggerProvider" | QUALIFIED_NAME )
		public Assignment getTaggerIdAssignment_12_1() { return cTaggerIdAssignment_12_1; }

		//"DefaultAttributeTaggerProvider"|QUALIFIED_NAME
		public Alternatives getTaggerIdAlternatives_12_1_0() { return cTaggerIdAlternatives_12_1_0; }

		//"DefaultAttributeTaggerProvider"
		public Keyword getTaggerIdDefaultAttributeTaggerProviderKeyword_12_1_0_0() { return cTaggerIdDefaultAttributeTaggerProviderKeyword_12_1_0_0; }

		//QUALIFIED_NAME
		public RuleCall getTaggerIdQUALIFIED_NAMEParserRuleCall_12_1_0_1() { return cTaggerIdQUALIFIED_NAMEParserRuleCall_12_1_0_1; }

		//("enumType" enumType=[OseeEnumType|NAME_REFERENCE])?
		public Group getGroup_13() { return cGroup_13; }

		//"enumType"
		public Keyword getEnumTypeKeyword_13_0() { return cEnumTypeKeyword_13_0; }

		//enumType=[OseeEnumType|NAME_REFERENCE]
		public Assignment getEnumTypeAssignment_13_1() { return cEnumTypeAssignment_13_1; }

		//[OseeEnumType|NAME_REFERENCE]
		public CrossReference getEnumTypeOseeEnumTypeCrossReference_13_1_0() { return cEnumTypeOseeEnumTypeCrossReference_13_1_0; }

		//NAME_REFERENCE
		public RuleCall getEnumTypeOseeEnumTypeNAME_REFERENCEParserRuleCall_13_1_0_1() { return cEnumTypeOseeEnumTypeNAME_REFERENCEParserRuleCall_13_1_0_1; }

		//("description" description=STRING)?
		public Group getGroup_14() { return cGroup_14; }

		//"description"
		public Keyword getDescriptionKeyword_14_0() { return cDescriptionKeyword_14_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_14_1() { return cDescriptionAssignment_14_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_14_1_0() { return cDescriptionSTRINGTerminalRuleCall_14_1_0; }

		//("defaultValue" defaultValue=STRING)?
		public Group getGroup_15() { return cGroup_15; }

		//"defaultValue"
		public Keyword getDefaultValueKeyword_15_0() { return cDefaultValueKeyword_15_0; }

		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_15_1() { return cDefaultValueAssignment_15_1; }

		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_15_1_0() { return cDefaultValueSTRINGTerminalRuleCall_15_1_0; }

		//("fileExtension" fileExtension=STRING)?
		public Group getGroup_16() { return cGroup_16; }

		//"fileExtension"
		public Keyword getFileExtensionKeyword_16_0() { return cFileExtensionKeyword_16_0; }

		//fileExtension=STRING
		public Assignment getFileExtensionAssignment_16_1() { return cFileExtensionAssignment_16_1; }

		//STRING
		public RuleCall getFileExtensionSTRINGTerminalRuleCall_16_1_0() { return cFileExtensionSTRINGTerminalRuleCall_16_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}

	public class AttributeBaseTypeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeBaseType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cBooleanAttributeKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCompressedContentAttributeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDateAttributeKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cEnumeratedAttributeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFloatingPointAttributeKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cIntegerAttributeKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cJavaObjectAttributeKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cStringAttributeKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cWordAttributeKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final RuleCall cQUALIFIED_NAMEParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//AttributeBaseType returns ecore::EString:
		//  "BooleanAttribute"|"CompressedContentAttribute"|"DateAttribute"|
		//  "EnumeratedAttribute"|"FloatingPointAttribute"|"IntegerAttribute"|
		//  "JavaObjectAttribute"|"StringAttribute"|"WordAttribute"|QUALIFIED_NAME;
		public ParserRule getRule() { return rule; }

		//"BooleanAttribute"|"CompressedContentAttribute"|"DateAttribute"|
		//"EnumeratedAttribute"|"FloatingPointAttribute"|"IntegerAttribute"|
		//"JavaObjectAttribute"|"StringAttribute"|"WordAttribute"|QUALIFIED_NAME
		public Alternatives getAlternatives() { return cAlternatives; }

		//"BooleanAttribute"
		public Keyword getBooleanAttributeKeyword_0() { return cBooleanAttributeKeyword_0; }

		//"CompressedContentAttribute"
		public Keyword getCompressedContentAttributeKeyword_1() { return cCompressedContentAttributeKeyword_1; }

		//"DateAttribute"
		public Keyword getDateAttributeKeyword_2() { return cDateAttributeKeyword_2; }

		//"EnumeratedAttribute"
		public Keyword getEnumeratedAttributeKeyword_3() { return cEnumeratedAttributeKeyword_3; }

		//"FloatingPointAttribute"
		public Keyword getFloatingPointAttributeKeyword_4() { return cFloatingPointAttributeKeyword_4; }

		//"IntegerAttribute"
		public Keyword getIntegerAttributeKeyword_5() { return cIntegerAttributeKeyword_5; }

		//"JavaObjectAttribute"
		public Keyword getJavaObjectAttributeKeyword_6() { return cJavaObjectAttributeKeyword_6; }

		//"StringAttribute"
		public Keyword getStringAttributeKeyword_7() { return cStringAttributeKeyword_7; }

		//"WordAttribute"
		public Keyword getWordAttributeKeyword_8() { return cWordAttributeKeyword_8; }

		//QUALIFIED_NAME
		public RuleCall getQUALIFIED_NAMEParserRuleCall_9() { return cQUALIFIED_NAMEParserRuleCall_9; }
	}

	public class OseeEnumTypeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeEnumType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOseeEnumTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNAME_REFERENCEParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cOverridesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOverrideAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cOverrideOseeEnumTypeCrossReference_2_1_0 = (CrossReference)cOverrideAssignment_2_1.eContents().get(0);
		private final RuleCall cOverrideOseeEnumTypeNAME_REFERENCEParserRuleCall_2_1_0_1 = (RuleCall)cOverrideOseeEnumTypeCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeGuidAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeGuidSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeGuidAssignment_4.eContents().get(0);
		private final Assignment cEnumEntriesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEnumEntriesOseeEnumEntryParserRuleCall_5_0 = (RuleCall)cEnumEntriesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//OseeEnumType:
		//  "oseeEnumType" name=NAME_REFERENCE ("overrides" override=[OseeEnumType|
		//  NAME_REFERENCE])? "{" typeGuid=STRING? enumEntries+=OseeEnumEntry* "}";
		public ParserRule getRule() { return rule; }

		//"oseeEnumType" name=NAME_REFERENCE ("overrides" override=[OseeEnumType|
		//NAME_REFERENCE])? "{" typeGuid=STRING? enumEntries+=OseeEnumEntry* "}"
		public Group getGroup() { return cGroup; }

		//"oseeEnumType"
		public Keyword getOseeEnumTypeKeyword_0() { return cOseeEnumTypeKeyword_0; }

		//name=NAME_REFERENCE
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//NAME_REFERENCE
		public RuleCall getNameNAME_REFERENCEParserRuleCall_1_0() { return cNameNAME_REFERENCEParserRuleCall_1_0; }

		//("overrides" override=[OseeEnumType|NAME_REFERENCE])?
		public Group getGroup_2() { return cGroup_2; }

		//"overrides"
		public Keyword getOverridesKeyword_2_0() { return cOverridesKeyword_2_0; }

		//override=[OseeEnumType|NAME_REFERENCE]
		public Assignment getOverrideAssignment_2_1() { return cOverrideAssignment_2_1; }

		//[OseeEnumType|NAME_REFERENCE]
		public CrossReference getOverrideOseeEnumTypeCrossReference_2_1_0() { return cOverrideOseeEnumTypeCrossReference_2_1_0; }

		//NAME_REFERENCE
		public RuleCall getOverrideOseeEnumTypeNAME_REFERENCEParserRuleCall_2_1_0_1() { return cOverrideOseeEnumTypeNAME_REFERENCEParserRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//typeGuid=STRING?
		public Assignment getTypeGuidAssignment_4() { return cTypeGuidAssignment_4; }

		//STRING
		public RuleCall getTypeGuidSTRINGTerminalRuleCall_4_0() { return cTypeGuidSTRINGTerminalRuleCall_4_0; }

		//enumEntries+=OseeEnumEntry*
		public Assignment getEnumEntriesAssignment_5() { return cEnumEntriesAssignment_5; }

		//OseeEnumEntry
		public RuleCall getEnumEntriesOseeEnumEntryParserRuleCall_5_0() { return cEnumEntriesOseeEnumEntryParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class OseeEnumEntryElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OseeEnumEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cOrdinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0 = (RuleCall)cOrdinalAssignment_2.eContents().get(0);
		
		//OseeEnumEntry:
		//  "entry" name=STRING ordinal=WHOLE_NUM_STR?;
		public ParserRule getRule() { return rule; }

		//"entry" name=STRING ordinal=WHOLE_NUM_STR?
		public Group getGroup() { return cGroup; }

		//"entry"
		public Keyword getEntryKeyword_0() { return cEntryKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//ordinal=WHOLE_NUM_STR?
		public Assignment getOrdinalAssignment_2() { return cOrdinalAssignment_2; }

		//WHOLE_NUM_STR
		public RuleCall getOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0() { return cOrdinalWHOLE_NUM_STRTerminalRuleCall_2_0; }
	}

	public class RelationTypeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNAME_REFERENCEParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cOverridesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOverrideAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cOverrideRelationTypeCrossReference_2_1_0 = (CrossReference)cOverrideAssignment_2_1.eContents().get(0);
		private final RuleCall cOverrideRelationTypeNAME_REFERENCEParserRuleCall_2_1_0_1 = (RuleCall)cOverrideRelationTypeCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeGuidAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeGuidSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeGuidAssignment_4.eContents().get(0);
		private final Keyword cSideANameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSideANameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSideANameSTRINGTerminalRuleCall_6_0 = (RuleCall)cSideANameAssignment_6.eContents().get(0);
		private final Keyword cSideAArtifactTypeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSideAArtifactTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cSideAArtifactTypeArtifactTypeCrossReference_8_0 = (CrossReference)cSideAArtifactTypeAssignment_8.eContents().get(0);
		private final RuleCall cSideAArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_8_0_1 = (RuleCall)cSideAArtifactTypeArtifactTypeCrossReference_8_0.eContents().get(1);
		private final Keyword cSideBNameKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSideBNameAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSideBNameSTRINGTerminalRuleCall_10_0 = (RuleCall)cSideBNameAssignment_10.eContents().get(0);
		private final Keyword cSideBArtifactTypeKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cSideBArtifactTypeAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cSideBArtifactTypeArtifactTypeCrossReference_12_0 = (CrossReference)cSideBArtifactTypeAssignment_12.eContents().get(0);
		private final RuleCall cSideBArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_12_0_1 = (RuleCall)cSideBArtifactTypeArtifactTypeCrossReference_12_0.eContents().get(1);
		private final Keyword cDefaultOrderTypeKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cDefaultOrderTypeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final Alternatives cDefaultOrderTypeAlternatives_14_0 = (Alternatives)cDefaultOrderTypeAssignment_14.eContents().get(0);
		private final Keyword cDefaultOrderTypeLexicographical_AscendingKeyword_14_0_0 = (Keyword)cDefaultOrderTypeAlternatives_14_0.eContents().get(0);
		private final Keyword cDefaultOrderTypeLexicographical_DescendingKeyword_14_0_1 = (Keyword)cDefaultOrderTypeAlternatives_14_0.eContents().get(1);
		private final Keyword cDefaultOrderTypeUnorderedKeyword_14_0_2 = (Keyword)cDefaultOrderTypeAlternatives_14_0.eContents().get(2);
		private final RuleCall cDefaultOrderTypeIDTerminalRuleCall_14_0_3 = (RuleCall)cDefaultOrderTypeAlternatives_14_0.eContents().get(3);
		private final Keyword cMultiplicityKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cMultiplicityAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0 = (RuleCall)cMultiplicityAssignment_16.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//RelationType:
		//  "relationType" name=NAME_REFERENCE ("overrides" override=[RelationType|
		//  NAME_REFERENCE])? "{" typeGuid=STRING? "sideAName" sideAName=STRING
		//  "sideAArtifactType" sideAArtifactType=[ArtifactType|NAME_REFERENCE] "sideBName"
		//  sideBName=STRING "sideBArtifactType" sideBArtifactType=[ArtifactType|
		//  NAME_REFERENCE] "defaultOrderType" defaultOrderType=( "Lexicographical_Ascending" |
		//  "Lexicographical_Descending" | "Unordered" | ID ) "multiplicity" multiplicity=
		//  RelationMultiplicityEnum "}";
		public ParserRule getRule() { return rule; }

		//"relationType" name=NAME_REFERENCE ("overrides" override=[RelationType|
		//NAME_REFERENCE])? "{" typeGuid=STRING? "sideAName" sideAName=STRING
		//"sideAArtifactType" sideAArtifactType=[ArtifactType|NAME_REFERENCE] "sideBName"
		//sideBName=STRING "sideBArtifactType" sideBArtifactType=[ArtifactType|
		//NAME_REFERENCE] "defaultOrderType" defaultOrderType=( "Lexicographical_Ascending" |
		//"Lexicographical_Descending" | "Unordered" | ID ) "multiplicity" multiplicity=
		//RelationMultiplicityEnum "}"
		public Group getGroup() { return cGroup; }

		//"relationType"
		public Keyword getRelationTypeKeyword_0() { return cRelationTypeKeyword_0; }

		//name=NAME_REFERENCE
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//NAME_REFERENCE
		public RuleCall getNameNAME_REFERENCEParserRuleCall_1_0() { return cNameNAME_REFERENCEParserRuleCall_1_0; }

		//("overrides" override=[RelationType|NAME_REFERENCE])?
		public Group getGroup_2() { return cGroup_2; }

		//"overrides"
		public Keyword getOverridesKeyword_2_0() { return cOverridesKeyword_2_0; }

		//override=[RelationType|NAME_REFERENCE]
		public Assignment getOverrideAssignment_2_1() { return cOverrideAssignment_2_1; }

		//[RelationType|NAME_REFERENCE]
		public CrossReference getOverrideRelationTypeCrossReference_2_1_0() { return cOverrideRelationTypeCrossReference_2_1_0; }

		//NAME_REFERENCE
		public RuleCall getOverrideRelationTypeNAME_REFERENCEParserRuleCall_2_1_0_1() { return cOverrideRelationTypeNAME_REFERENCEParserRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//typeGuid=STRING?
		public Assignment getTypeGuidAssignment_4() { return cTypeGuidAssignment_4; }

		//STRING
		public RuleCall getTypeGuidSTRINGTerminalRuleCall_4_0() { return cTypeGuidSTRINGTerminalRuleCall_4_0; }

		//"sideAName"
		public Keyword getSideANameKeyword_5() { return cSideANameKeyword_5; }

		//sideAName=STRING
		public Assignment getSideANameAssignment_6() { return cSideANameAssignment_6; }

		//STRING
		public RuleCall getSideANameSTRINGTerminalRuleCall_6_0() { return cSideANameSTRINGTerminalRuleCall_6_0; }

		//"sideAArtifactType"
		public Keyword getSideAArtifactTypeKeyword_7() { return cSideAArtifactTypeKeyword_7; }

		//sideAArtifactType=[ArtifactType|NAME_REFERENCE]
		public Assignment getSideAArtifactTypeAssignment_8() { return cSideAArtifactTypeAssignment_8; }

		//[ArtifactType|NAME_REFERENCE]
		public CrossReference getSideAArtifactTypeArtifactTypeCrossReference_8_0() { return cSideAArtifactTypeArtifactTypeCrossReference_8_0; }

		//NAME_REFERENCE
		public RuleCall getSideAArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_8_0_1() { return cSideAArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_8_0_1; }

		//"sideBName"
		public Keyword getSideBNameKeyword_9() { return cSideBNameKeyword_9; }

		//sideBName=STRING
		public Assignment getSideBNameAssignment_10() { return cSideBNameAssignment_10; }

		//STRING
		public RuleCall getSideBNameSTRINGTerminalRuleCall_10_0() { return cSideBNameSTRINGTerminalRuleCall_10_0; }

		//"sideBArtifactType"
		public Keyword getSideBArtifactTypeKeyword_11() { return cSideBArtifactTypeKeyword_11; }

		//sideBArtifactType=[ArtifactType|NAME_REFERENCE]
		public Assignment getSideBArtifactTypeAssignment_12() { return cSideBArtifactTypeAssignment_12; }

		//[ArtifactType|NAME_REFERENCE]
		public CrossReference getSideBArtifactTypeArtifactTypeCrossReference_12_0() { return cSideBArtifactTypeArtifactTypeCrossReference_12_0; }

		//NAME_REFERENCE
		public RuleCall getSideBArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_12_0_1() { return cSideBArtifactTypeArtifactTypeNAME_REFERENCEParserRuleCall_12_0_1; }

		//"defaultOrderType"
		public Keyword getDefaultOrderTypeKeyword_13() { return cDefaultOrderTypeKeyword_13; }

		//defaultOrderType=( "Lexicographical_Ascending" | "Lexicographical_Descending" |
		//"Unordered" | ID )
		public Assignment getDefaultOrderTypeAssignment_14() { return cDefaultOrderTypeAssignment_14; }

		//"Lexicographical_Ascending"|"Lexicographical_Descending"|"Unordered"|ID
		public Alternatives getDefaultOrderTypeAlternatives_14_0() { return cDefaultOrderTypeAlternatives_14_0; }

		//"Lexicographical_Ascending"
		public Keyword getDefaultOrderTypeLexicographical_AscendingKeyword_14_0_0() { return cDefaultOrderTypeLexicographical_AscendingKeyword_14_0_0; }

		//"Lexicographical_Descending"
		public Keyword getDefaultOrderTypeLexicographical_DescendingKeyword_14_0_1() { return cDefaultOrderTypeLexicographical_DescendingKeyword_14_0_1; }

		//"Unordered"
		public Keyword getDefaultOrderTypeUnorderedKeyword_14_0_2() { return cDefaultOrderTypeUnorderedKeyword_14_0_2; }

		//ID
		public RuleCall getDefaultOrderTypeIDTerminalRuleCall_14_0_3() { return cDefaultOrderTypeIDTerminalRuleCall_14_0_3; }

		//"multiplicity"
		public Keyword getMultiplicityKeyword_15() { return cMultiplicityKeyword_15; }

		//multiplicity=RelationMultiplicityEnum
		public Assignment getMultiplicityAssignment_16() { return cMultiplicityAssignment_16; }

		//RelationMultiplicityEnum
		public RuleCall getMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0() { return cMultiplicityRelationMultiplicityEnumEnumRuleCall_16_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	
	
	public class RelationMultiplicityEnumElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RelationMultiplicityEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cONE_TO_ONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cONE_TO_ONEONE_TO_ONEKeyword_0_0 = (Keyword)cONE_TO_ONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cONE_TO_MANYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cONE_TO_MANYONE_TO_MANYKeyword_1_0 = (Keyword)cONE_TO_MANYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMANY_TO_ONEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMANY_TO_ONEMANY_TO_ONEKeyword_2_0 = (Keyword)cMANY_TO_ONEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMANY_TO_MANYEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMANY_TO_MANYMANY_TO_MANYKeyword_3_0 = (Keyword)cMANY_TO_MANYEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum RelationMultiplicityEnum:
		//  ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY;
		public EnumRule getRule() { return rule; }

		//ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY
		public Alternatives getAlternatives() { return cAlternatives; }

		//ONE_TO_ONE
		public EnumLiteralDeclaration getONE_TO_ONEEnumLiteralDeclaration_0() { return cONE_TO_ONEEnumLiteralDeclaration_0; }

		//"ONE_TO_ONE"
		public Keyword getONE_TO_ONEONE_TO_ONEKeyword_0_0() { return cONE_TO_ONEONE_TO_ONEKeyword_0_0; }

		//ONE_TO_MANY
		public EnumLiteralDeclaration getONE_TO_MANYEnumLiteralDeclaration_1() { return cONE_TO_MANYEnumLiteralDeclaration_1; }

		//"ONE_TO_MANY"
		public Keyword getONE_TO_MANYONE_TO_MANYKeyword_1_0() { return cONE_TO_MANYONE_TO_MANYKeyword_1_0; }

		//MANY_TO_ONE
		public EnumLiteralDeclaration getMANY_TO_ONEEnumLiteralDeclaration_2() { return cMANY_TO_ONEEnumLiteralDeclaration_2; }

		//"MANY_TO_ONE"
		public Keyword getMANY_TO_ONEMANY_TO_ONEKeyword_2_0() { return cMANY_TO_ONEMANY_TO_ONEKeyword_2_0; }

		//MANY_TO_MANY
		public EnumLiteralDeclaration getMANY_TO_MANYEnumLiteralDeclaration_3() { return cMANY_TO_MANYEnumLiteralDeclaration_3; }

		//"MANY_TO_MANY"
		public Keyword getMANY_TO_MANYMANY_TO_MANYKeyword_3_0() { return cMANY_TO_MANYMANY_TO_MANYKeyword_3_0; }
	}
	
	private OseeTypeModelElements pOseeTypeModel;
	private ImportElements pImport;
	private TerminalRule tWHOLE_NUM_STR;
	private NAME_REFERENCEElements pNAME_REFERENCE;
	private QUALIFIED_NAMEElements pQUALIFIED_NAME;
	private OseeTypeElements pOseeType;
	private ArtifactTypeElements pArtifactType;
	private AttributeTypeRefElements pAttributeTypeRef;
	private AttributeTypeElements pAttributeType;
	private AttributeBaseTypeElements pAttributeBaseType;
	private OseeEnumTypeElements pOseeEnumType;
	private OseeEnumEntryElements pOseeEnumEntry;
	private RelationMultiplicityEnumElements unknownRuleRelationMultiplicityEnum;
	private RelationTypeElements pRelationType;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public OseeTypesGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//OseeTypeModel:
	//  imports+=Import* types+=OseeType*;
	public OseeTypeModelElements getOseeTypeModelAccess() {
		return (pOseeTypeModel != null) ? pOseeTypeModel : (pOseeTypeModel = new OseeTypeModelElements());
	}
	
	public ParserRule getOseeTypeModelRule() {
		return getOseeTypeModelAccess().getRule();
	}

	//Import:
	//  "import" importURI=STRING;
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//terminal WHOLE_NUM_STR:
	//  "0".."9"+;
	public TerminalRule getWHOLE_NUM_STRRule() {
		return (tWHOLE_NUM_STR != null) ? tWHOLE_NUM_STR : (tWHOLE_NUM_STR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WHOLE_NUM_STR"));
	} 

	//NAME_REFERENCE returns ecore::EString:
	//  STRING;
	public NAME_REFERENCEElements getNAME_REFERENCEAccess() {
		return (pNAME_REFERENCE != null) ? pNAME_REFERENCE : (pNAME_REFERENCE = new NAME_REFERENCEElements());
	}
	
	public ParserRule getNAME_REFERENCERule() {
		return getNAME_REFERENCEAccess().getRule();
	}

	//QUALIFIED_NAME returns ecore::EString:
	//  ID ("." ID)*;
	public QUALIFIED_NAMEElements getQUALIFIED_NAMEAccess() {
		return (pQUALIFIED_NAME != null) ? pQUALIFIED_NAME : (pQUALIFIED_NAME = new QUALIFIED_NAMEElements());
	}
	
	public ParserRule getQUALIFIED_NAMERule() {
		return getQUALIFIED_NAMEAccess().getRule();
	}

	//OseeType:
	//  ArtifactType|RelationType|AttributeType|OseeEnumType;
	public OseeTypeElements getOseeTypeAccess() {
		return (pOseeType != null) ? pOseeType : (pOseeType = new OseeTypeElements());
	}
	
	public ParserRule getOseeTypeRule() {
		return getOseeTypeAccess().getRule();
	}

	//ArtifactType:
	//  abstract?="abstract"? "artifactType" name=NAME_REFERENCE ("extends"
	//  superArtifactTypes+=[ArtifactType|NAME_REFERENCE] ("," superArtifactTypes+=[
	//  ArtifactType|NAME_REFERENCE])*)? ("overrides" override=[ArtifactType|
	//  NAME_REFERENCE])? "{" typeGuid=STRING? validAttributeTypes+=AttributeTypeRef* "}";
	public ArtifactTypeElements getArtifactTypeAccess() {
		return (pArtifactType != null) ? pArtifactType : (pArtifactType = new ArtifactTypeElements());
	}
	
	public ParserRule getArtifactTypeRule() {
		return getArtifactTypeAccess().getRule();
	}

	//AttributeTypeRef:
	//  "attribute" validAttributeType=[AttributeType|NAME_REFERENCE] ("branchGuid"
	//  branchGuid=STRING)?;
	public AttributeTypeRefElements getAttributeTypeRefAccess() {
		return (pAttributeTypeRef != null) ? pAttributeTypeRef : (pAttributeTypeRef = new AttributeTypeRefElements());
	}
	
	public ParserRule getAttributeTypeRefRule() {
		return getAttributeTypeRefAccess().getRule();
	}

	//AttributeType:
	//  typeGuid=STRING? "attributeType" name=NAME_REFERENCE ("extends" baseAttributeType=
	//  AttributeBaseType) ("overrides" override=[AttributeType|NAME_REFERENCE])? "{"
	//  "dataProvider" dataProvider=( "DefaultAttributeDataProvider" |
	//  "UriAttributeDataProvider" | "MappedAttributeDataProvider" | QUALIFIED_NAME ) "min" min
	//  =WHOLE_NUM_STR "max" max=( WHOLE_NUM_STR | "unlimited" ) ("taggerId" taggerId=(
	//  "DefaultAttributeTaggerProvider" | QUALIFIED_NAME ))? ("enumType" enumType=[
	//  OseeEnumType|NAME_REFERENCE])? ("description" description=STRING)? ("defaultValue"
	//  defaultValue=STRING)? ("fileExtension" fileExtension=STRING)? "}";
	public AttributeTypeElements getAttributeTypeAccess() {
		return (pAttributeType != null) ? pAttributeType : (pAttributeType = new AttributeTypeElements());
	}
	
	public ParserRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}

	//AttributeBaseType returns ecore::EString:
	//  "BooleanAttribute"|"CompressedContentAttribute"|"DateAttribute"|
	//  "EnumeratedAttribute"|"FloatingPointAttribute"|"IntegerAttribute"|
	//  "JavaObjectAttribute"|"StringAttribute"|"WordAttribute"|QUALIFIED_NAME;
	public AttributeBaseTypeElements getAttributeBaseTypeAccess() {
		return (pAttributeBaseType != null) ? pAttributeBaseType : (pAttributeBaseType = new AttributeBaseTypeElements());
	}
	
	public ParserRule getAttributeBaseTypeRule() {
		return getAttributeBaseTypeAccess().getRule();
	}

	//OseeEnumType:
	//  "oseeEnumType" name=NAME_REFERENCE ("overrides" override=[OseeEnumType|
	//  NAME_REFERENCE])? "{" typeGuid=STRING? enumEntries+=OseeEnumEntry* "}";
	public OseeEnumTypeElements getOseeEnumTypeAccess() {
		return (pOseeEnumType != null) ? pOseeEnumType : (pOseeEnumType = new OseeEnumTypeElements());
	}
	
	public ParserRule getOseeEnumTypeRule() {
		return getOseeEnumTypeAccess().getRule();
	}

	//OseeEnumEntry:
	//  "entry" name=STRING ordinal=WHOLE_NUM_STR?;
	public OseeEnumEntryElements getOseeEnumEntryAccess() {
		return (pOseeEnumEntry != null) ? pOseeEnumEntry : (pOseeEnumEntry = new OseeEnumEntryElements());
	}
	
	public ParserRule getOseeEnumEntryRule() {
		return getOseeEnumEntryAccess().getRule();
	}

	//enum RelationMultiplicityEnum:
	//  ONE_TO_ONE | ONE_TO_MANY | MANY_TO_ONE | MANY_TO_MANY;
	public RelationMultiplicityEnumElements getRelationMultiplicityEnumAccess() {
		return (unknownRuleRelationMultiplicityEnum != null) ? unknownRuleRelationMultiplicityEnum : (unknownRuleRelationMultiplicityEnum = new RelationMultiplicityEnumElements());
	}
	
	public EnumRule getRelationMultiplicityEnumRule() {
		return getRelationMultiplicityEnumAccess().getRule();
	}

	//RelationType:
	//  "relationType" name=NAME_REFERENCE ("overrides" override=[RelationType|
	//  NAME_REFERENCE])? "{" typeGuid=STRING? "sideAName" sideAName=STRING
	//  "sideAArtifactType" sideAArtifactType=[ArtifactType|NAME_REFERENCE] "sideBName"
	//  sideBName=STRING "sideBArtifactType" sideBArtifactType=[ArtifactType|
	//  NAME_REFERENCE] "defaultOrderType" defaultOrderType=( "Lexicographical_Ascending" |
	//  "Lexicographical_Descending" | "Unordered" | ID ) "multiplicity" multiplicity=
	//  RelationMultiplicityEnum "}";
	public RelationTypeElements getRelationTypeAccess() {
		return (pRelationType != null) ? pRelationType : (pRelationType = new RelationTypeElements());
	}
	
	public ParserRule getRelationTypeRule() {
		return getRelationTypeAccess().getRule();
	}

	//terminal ID:
	//  "^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//  "0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//  "\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" |
	//  "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//  "/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//  "//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//  (" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//  .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
