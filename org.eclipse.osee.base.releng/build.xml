<project default="run" name="org.eclipse.osee.base.releng/build.xml - Provisions an Eclipse Target">

	<target name="init">
		<property environment="env" />

		<!-- load properties and set timestamp for the build -->
		<loadproperties srcFile="build.properties" />
		<tstamp>
			<format property="buildTimestamp" pattern="yyyyMMddHHmm" />
		</tstamp>

		<property name="SNAPSHOT" value="false" />
		<property name="forceContextQualifier" value="v${buildTimestamp}" />
		<property name="fetchTag" value="HEAD" />

		<!-- calculate workspaceDir as parent of this folder, the project's .releng folder (relengBuilderDir) -->
		<property name="relengBuilderDir" value="${basedir}" />
		<dirname file="${relengBuilderDir}" property="workspaceDir" />

		<property name="writableBuildRoot" value="/tmp/build" />
		<property name="buildDir" value="${writableBuildRoot}/athena" />

		<delete dir="${buildDir}" failonerror="false" />
	</target>

	<target name="build">
		<echo message="Workspace: ${WORKSPACE}" />
		<echo message="Writable Build Root: ${writableBuildRoot}" />
		<echo message="Java Home: ${JAVA_HOME}" />
		<echo message="Java 6.0 Home: ${JAVA60_HOME}" />
		<echo message="Qualifier: ${forceContextQualifier}" />
		<echo message="Fetch Tag: ${fetchTag}" />

		<fail message="Specify the build workspace path 'WORKSPACE'">
			<condition>
				<not>
					<isset property="WORKSPACE" />
				</not>
			</condition>
		</fail>

		<mkdir dir="${writableBuildRoot}" />

		<!-- invoke a new Eclipse process and launch the build from the common.releng folder -->
		<property name="relengCommonBuilderDir" value="${workspaceDir}/org.eclipse.dash.common.releng" />
		<property name="relengBaseBuilderDir" value="${workspaceDir}/org.eclipse.releng.basebuilder" />
		<property name="downloadsDir" value="${writableBuildRoot}/downloads" />
		<property name="thirdPartyJarsDir" value="${writableBuildRoot}/3rdPartyJars" />
			
		<setproxy proxyhost="${http.proxyHost}" proxyport="${http.proxyPort}" />
		<ant antfile="${relengBuilderDir}/scripts/createEclipseTarget.xml" target="run" inheritall="true" inheritrefs="true"/>
		<!--<ant antfile="${relengCommonBuilderDir}/buildAll.xml" target="runEclipse" dir="${relengCommonBuilderDir}" inheritall="true" />-->

	</target>

	<target name="cleanUp">
		<delete dir="${buildDir}/testresults/html" failonerror="false" />
		<delete>
			<fileset dir="${writableBuildRoot}">
				<include name="**/*SDK*.zip" />
			</fileset>
		</delete>
	</target>

	<target name="createSnapshot" depends="init">
		<echo>Custom post build step CreateSnapshot</echo>
		<property environment="env" />

		<property name="BUILDTYPE" value="I" />
		<property name="buildFolder" value="${WORKSPACE}/build" />
		<property name="snapshotFolder" value="${buildFolder}/../snapshot/" />

		<echo>Build folder: ${buildFolder} </echo>
		<echo>Snapshot folder: ${snapshotFolder}</echo>
		<echo>Buildtype: ${BUILDTYPE}</echo>
		<echo>Job: ${env.JOB_NAME}</echo>

		<delete quiet="true" dir="${snapshotFolder}" />

		<copy flatten="true" toDir="${snapshotFolder}" failonerror="true" includeemptydirs="false">
			<fileset dir="${buildFolder}" includes="athena/*-Update-*.zip" />
		</copy>

		<available file="${snapshotFolder}" property="containsFile" />
		<antcall target="doMoveZip" inheritall="true" />
	</target>

	<target name="doMoveZip" if="containsFile">

		<echo>Renaming file to ${zipPrefix}-update${incubation}-${BUILDTYPE}-Snapshot.zip</echo>
		<move includeemptydirs="false" tofile="${snapshotFolder}/${zipPrefix}-update${incubation}-${BUILDTYPE}-Snapshot.zip" filtering="true">
			<fileset dir="${snapshotFolder}" includes="*-Update-*.zip" />
		</move>
	</target>

	<target name="run" depends="init,build,createSnapshot,cleanUp">
	</target>
</project>
